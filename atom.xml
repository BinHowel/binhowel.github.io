<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>双子星Binaryؼ</title>
  
  <subtitle>相逐彼此，却永不能触及</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://shuhaohwang.github.io/"/>
  <updated>2019-09-17T15:53:12.893Z</updated>
  <id>https://shuhaohwang.github.io/</id>
  
  <author>
    <name>ShuHaoHwang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>C++进阶学习总结-（3.1）模板、函数模板</title>
    <link href="https://shuhaohwang.github.io/2019/09/17/C-%E8%BF%9B%E9%98%B6%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%883-1%EF%BC%89%E6%A8%A1%E6%9D%BF%E3%80%81%E5%87%BD%E6%95%B0%E6%A8%A1%E6%9D%BF/"/>
    <id>https://shuhaohwang.github.io/2019/09/17/C-进阶学习总结-（3-1）模板、函数模板/</id>
    <published>2019-09-17T14:54:58.000Z</published>
    <updated>2019-09-17T15:53:12.893Z</updated>
    
    <content type="html"><![CDATA[<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="此文章是加密文章，请输入密码后查看." />    <label for="pass">此文章是加密文章，请输入密码后查看.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      （加密文章）
    
    </summary>
    
      <category term="代码学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="C++学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/C-%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="C++" scheme="https://shuhaohwang.github.io/tags/C/"/>
    
      <category term="学习总结" scheme="https://shuhaohwang.github.io/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
      <category term="C++学习总结" scheme="https://shuhaohwang.github.io/tags/C-%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>C++进阶学习总结-(2.11)类型转换构造函数、运算符、类成员指针</title>
    <link href="https://shuhaohwang.github.io/2019/09/11/C-%E8%BF%9B%E9%98%B6%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2-11-%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E3%80%81%E8%BF%90%E7%AE%97%E7%AC%A6%E3%80%81%E7%B1%BB%E6%88%90%E5%91%98%E6%8C%87%E9%92%88/"/>
    <id>https://shuhaohwang.github.io/2019/09/11/C-进阶学习总结-2-11-类型转换构造函数、运算符、类成员指针/</id>
    <published>2019-09-10T16:39:32.000Z</published>
    <updated>2019-09-16T15:22:06.929Z</updated>
    
    <content type="html"><![CDATA[<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="此文章是加密文章，请输入密码后查看." />    <label for="pass">此文章是加密文章，请输入密码后查看.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      讲述类类型转换构造函数与类型转换运算符、类成员函数、类成员变量指针（加密文章）
    
    </summary>
    
      <category term="代码学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="C++学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/C-%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="C++" scheme="https://shuhaohwang.github.io/tags/C/"/>
    
      <category term="学习总结" scheme="https://shuhaohwang.github.io/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
      <category term="C++学习总结" scheme="https://shuhaohwang.github.io/tags/C-%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>C++进阶学习总结-（2.10）构造函数继承、多继承、虚继承</title>
    <link href="https://shuhaohwang.github.io/2019/09/06/C-%E8%BF%9B%E9%98%B6%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%882-10%EF%BC%89%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E7%BB%A7%E6%89%BF%E3%80%81%E5%A4%9A%E7%BB%A7%E6%89%BF%E3%80%81%E8%99%9A%E7%BB%A7%E6%89%BF/"/>
    <id>https://shuhaohwang.github.io/2019/09/06/C-进阶学习总结-（2-10）构造函数继承、多继承、虚继承/</id>
    <published>2019-09-05T16:21:49.000Z</published>
    <updated>2019-09-08T16:47:08.188Z</updated>
    
    <content type="html"><![CDATA[<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="此文章是加密文章，请输入密码后查看." />    <label for="pass">此文章是加密文章，请输入密码后查看.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">U2FsdGVkX182IDmYWApG4LnDL7IKI+aUn2opm9NN2K5d14ogl3r/RWl7vymGi70MgZCcc5vDkRQLmNurafQUA1Wzv8BAelO1ilSUYYYF5vompyc+C9sZ09+U4aFYqRC/XRRkwVWhRL9wL4lK8EyKlKH2n133zcoANhGUEHJqC9pkGWHtgPemMNivm8diXClUusji1vRb6COfxRZUIpnGtq7GM5mhuA83gqy7aMeNVPOk5JDThX/+2ZaJuACIFE/cMr76JYFWD2IkEU7ADWtmHFBIzvjmrUcxCXSdQ6AnB/J+RWjmd5idJnXaVQjwdXGIBQYx1Pb516eOdP6bPM8I8k653G7kFsgaavum5FYkztoq0zsw64yuj/aWY20iEPHmwAuSR3x1gm0YW9topsKhrnLf7CRhg1Pk+hhHnAM5sUu07kW/ANuTEHxue+fELcbsRl2V2cJPSxfmep8gCnJtJ+NHmUjzKO6kpX2SHT1Mcww4UpU0mS4A3BuHPti7xVBkxFJTK0BH5v8m9uibqYRsTBfw6yrcdyeuTWNwgT89Vo2G9xDPn7rU1l1ZDz0DCwACGV/jbP0YMDzbSJU/fyP8cFbsrStnPfYLq4ODU/SR7QiXMGn9jY29fcAEC09ROrXDzDzN480KKSswwGc1MSiChKNf63fcfqsrjXzOyOTAoE8vZ6djl9m/JxVV22pwncgHAkFdDeSQN51ojoJXde7Ys3DYOaFD0cr6K8yBqUwRrGNIFmJXnwEoxSwgX1KYaRe7SKVmjRHjADeHYbuG1lHxEmwQF2hNCHmZPptDFfHVVetAQRPgsH4cOYx0eAV9VtnAeScu9G5leHUihAJ6kpxr1L5sOwnZSEKIcCAhA8cQBnNGvFW3yRBGqFsVwaSMk6ftvS3mrK2n00AFDmoUXd/IoOhI8duW/jRx21TonmtqbD3rzNps/8Q4QwAOsBQ2mOvD2NYFNjfj8l91CIJ1nrxUDJKUVg+X0m4qpYiczxrGq8wEZ2/vlVte7fz7EhWtwm4eOwUJ1ukTqUb344LaI1pyHfQBVq0/SpomOv3Xon1U6WSUKRh1Q2FqsSbRInGk+pG9RKy7ZIle8Z8V3/A+zx6eXDNJop3hBwSYf1IQJSy93nv4H105mqGGqBi8VRgC8i5IHg5KdZ2URPG4EWL4TYWXOIaFWqkvcIrUcFNIjUH6EIV0/oYpe21G9msoKXwViZ8ZBM+SrBlE8LQzgpgXcz/Q/4HBzCsSWuri6F+3/jaecM0IuPUtlfwI/ea0zXkgujyLRRlrjyCiEhd/V1DB0AGuxpqfiCFDdc3CRWVNszL9+Rzlpq39ukgKsw66RguHr+g7Bnc1MqaGLh9JB9WJgbDEBHP3bzu3SDAhmYQKBR9hk69JNNnmKZASBD2tSYdae5OqDRHxuJUWxuX3xE/rHhsPuj1c3HHHTjym5XnsRFJNJLXtOGxYa+T9Dybd9W3C20Wfz7SO4i2D3guegAx2nlqgEL0oOInoWtkp1DLuRge4Ly79Y5Vt7WiLE0iR6eSCjt2MKxs5SrvzV+fbxspD5XnGIx2Mvh1La8KszI3+rXsasTXwm9C+WClDUCXl1b6bbEsFDFqYOQf8dbCR9Y090vZnoZDze2tt5qqgboYs+fPi/FxXQcTcvpSD4fTerhi56gqqP5w76jl8//fCp11ZO6PjM5UUL1olC7ggnBxZV3sb30eKS+EnbZVAujLxFBQX0j+rOdOs5YveI2GZto8hPOzwUuiNf2R2Z/AKMXHHEnalTeGlFX4c/hBGZNVRSrae+onDeb3ecO3yqWS/+05NRrYNKGSogk9g5H5/G/LKdFAT6/ljB1Xd+IAV1QIeb5O/lYKhGqQ7Fs7frFJheV9rJDjKqBmKL7dVcp1BmZATbd8RfDOkj0aTpCknTiKvH5u5Sn8LMHD3ld0lPyNNMTTZx33nAPkzMJKx52LpoeE/NYStGpGfwQtiEvanuJRAGael6Z+0MEDBTXnuyn1FxBSTqSDBBSkWKbRuDP6tUf03EVBQo/zJtItZPkzlGFTbPMcyi1wpBEj5ZXyzje0SLIpxLHKiIi6QDw/AhU8ldd5mh2jtORvkvkr0YcT7jG6B6IqJjEm+SmKyxIrQ9oBDj/OfrGMQU7oW3QcuyCqqY4hznxZMs8CfIPgZVVHysA+uD6s635bQL/IFLiqfrKuITTDhyKZgsmjyjFX4JOYs3fdJdD7AY0AY95bCK5Tp6xhAqyBoUCrXge+ao1Aub6te6+YOhNHuE0WOKa333wubI7YZtao+T4nFtrhZsrogOui2gDKhPmvmhCZAJL2En+JZ1vOEZEf/aUDgvuZpaFGF17HzNaKHSFYu9vmN6TMZUV9zS09QGX0NCzJOqglbHoE1SZdmF6hC5kv7LKCmNAurR4sQATaH/Jp60XE0ZoVoSGI1BJM4Kr7ZY9vwSXYo4GEd5OKpQYZ60GYRFEbaRuHWcLKehs894GvS5ltT959hUQoskCmkmsdIZHXFsBqzWOt8uYD2ZSfEd7zcuyNR123Eu70C9oUqhDe7QDci8m1DzjtP7nl5tiuQEORvT2sdqlcOUKrdzxpsnTAlJ+XTK8N2OgCYtg4nU0k/E6n05Loh7sMrw3uQ4TdJBDynOsYCV3gsrxAzNHwIZ+uZSBWOONu3th5qL2HX9BgMWpjRweINSRXt0YT2uhpBIyD2PpoJklRT3qzb4inseeIZcWqZqCLmqtKEDW/iY5ngZurW8FYPCPFIH0zFHfczl5cynVxBcCQ7RhVqZ6/ePhsM1fcQ+DFdSMMSQra7CT4leD4YH+MDE6qcfR/otHSyHUG+YXZnYWVDEbJH3Ul2lLHxZZVYi4/+sgayYB94vCIgcnPfsseP3P5CpMd44BODFM/nLhpXa3VLgTytmMg3TtyHujQmTqBmxfYWrI2ypgxaTnpa65UN/TGon4H8XoSTUuFzSCd1ZA9H8W1TcO8MLHQCh713RNKVqDa79M2rT8pYo40PwqbzX2xjG94Jwdd59EwZZnP9fu88/xfFcDIQT/LbzHTVBB9EoLnsDpEwip3auAlU8tHKiiZwIb63VPH9/7dA82E21bEGrVqgYzWRFBxEkbf6QpMJAsTWW1OlUvsVA0RooiicXonb1kWMv5z41bOe3CMwsBNFo/Tr8CR5aQcBE9KrqnySLy7btjQ0fv1jgBARHc9k33bHFSD/wgDeHCMNZV6fb6aRS6emZTcvcOJNk9mjewWz67tSNSqnhTkJoJZ2IM5Y7HtRDjpfGI3rhCqepxCRYEqaaDR1cPmZurpWCmksBUmlEj/m88HbBYHNARqzDG78CZX6mSqKNf05M2tApuCv+ftAvOSr3ZNMNaCjGifiD5mT68H36FdUylWxBCGWhFSfL6Xe+/XeDc2h/usVX8Sk+qGTQqEVxKweXXLrGJowsSMdatM2fp40Byxw5vhl6I6ICPV+Z5c/oQezn5ZEcwSTjghkLLlPoFNVK2z+xJ3it4RODAtdPYcQKPzFdjDwzfjh5CKIj18iai0IaLjB+7M21rC+Bm4PhPqLJCy7XtYhXGU3CgAzrudpnHeOW8p9oqWPP7DhB0AU1ocbOUEig5hXRRq/JhNL8J9MLwk8wyoojJJ+skox7RxzTBCpDjSrarq5C4wdBwJvGqmhXKLQbBqqi1oL4wXU/6yGs5ZOsSAh62WS6tx6pB8fFK8hk3e6uHPdBk/+5qPxE0Cjf/ji2hSGntyrqNq02mleEB6Bs1xw22VyxmjGrSkifp5js2t6o4t6ep/2iTN6wu1riYJoIiqHHIInBL9Q5IVqG2ERVZwBodAiiC1AhG/yiFeZCNWdcUyG8zzSlrwe0mAv+s1VRmKXbHCJthTa/X4VWzl1iIEEPH5kXcqzz5+TzK1sycsZcljw9dOyKv1/OkF7RxGXvULVqbJ6FgtST7KiegzufN9L6kAbfb2UXKGow3/58k0f+H9kHKldl6jLKOTJXeI9yipd8jtydhilbqv2IZfLaVIivF4cK6X2xxzSDWliUrtwU/qwch8kYcsK+5TJM/p6YjjzyrxYW5hZukdC7ropdyOq2oH+L1FQ//D+ebnbI4ZyXm6F4KCHQm3ICkoH+mD7tCPX+v+53a662g4NH1EXhbb5mLPst84i45wbmuSy4GDPfc04yKT2/c5ZbcxQ/lTyF4COxrzh2VLAblpcMXsGqUrTIPjXtCRMt/KpQ9EPjEwiIZWS1oOmGJjS93hWp84DOHGqrNGyG6lvTnDlm9CB3ZuhHDMaFC5Qi6aKGbGacSF3Gme6yHGftJUUUYY5afFUI9DnuikU7Bu7F7BqoaOflWKOvIsTILrRbBEYjjGFif+HJ/8Iiq250Tjz+5Q1IFzU/JK0mXpbk5cLJ4srgy+jYKHiwvy3OtGd6QoAo3V2S4Z2ENqy/eaERD6y0a0O5pQMexitDCdQ496jzJBJzeI0ZupzCkPAfCNOWfaJQEld3JAGXQg7Jk3LlSR0aP/wl7GWLkBXPsITVqry4znTQ/qGmp3YN56EAwCfvM7NRD0BQ8G25ngdrxM9v2yQY4VCchUf4UuMmLLj+ui9lD6PLprwIYc73GWNiM3wrgW/2ANwIb/Yl3FVSh36PWRWd8UklVoY3YPE524IbZlcppje45iYio6mvz0HK44VgOg2+N8640sL6BXl4X/cTR9vkknBSFY9/PwCckGKN8w6AX0QLaVuhG3gjg086IiGS76AY++we8xWYFx7gATnMjSi1iylriVR+jOAAa2QIraL5x8fCVgRj5cPODZliV+XRYoL1ECWrt4smI2NAy0sUb8vtcujWmY0439UvsrS3vnA6aR6n3++FyYPCHzImvZKFfnxFhLG7Jhvvn8O9Ts4nn5EbVO4duslVVTlN3MuTm+cP9/w3NhGTPmBS2l2X4YxmWfc2bHQeBiLypTwmzcRylb7Zz6JScryekdyIdyne/4IE41g/5Jv45R27X6/ggWsbtPS8+EpGiaXsMHvKC5BFcqqEF29CLmjFUwLgNLIXpPjPDDwZw2PSy/8PNFEuO5GqZV92MD1FuhhkAtL1uiy2D0VqDxELEw0fI6s1CE0S3iylludlkdhhH8fhggfETqdOJFRevChBaWAHdrfKcSa6Uq6g2scJewRtiO3y+zL3H2BVfmB+HDcP47d0RPoChm9PavIdA7mAL5TmLcx6Bh58wk/rVtuytYtUE5RT0JUEJ+LWzljAxKIH47fBIUUzB7k1DtuFctSiM3/AQleDmpKIAjhQEKHWU1BN3G03GCzSMW9+LYpQ0vPevN+t2dlf5u7VyZ62Uf/QyiomXNf46y5RTJcYpJ6SoN0fmD45I3x2JI+zHJDnn6gqe8iLlNaeiMHEKwDM847FXUCWECxCFK+grkZZejVrn7/cIrkVB4UQukBlxYy0j8SVgFWIdqLv5U84nyGS+kxv5lL9+wsb04wOmPb11OfuKPYx5isDxuHjPWgqv094BNWFjlvd6Zg+/8ylCDIcZV1tbEh2k9isGHyrUkDgehjT8kOTUrea/WOrlHwRnEOIkhANL/ujNGjpjHqrqKVD1cHwDTwwiS+D0QQI7LW5sZOrNJ18KqlA4QnUm9/Ap2+PHgrgc14r4hhjMo2+hqH/yeWh3O7O36YErUm7YmFtg1olkv/XX4DBFbORiYzbjlNFLJa85rkhoJpGVVIbTFqW+0LNKsEjp48gfoSyEGJC2v7kEfP6kLndzhQYXCmHyYql8xS5uIJY7qkLXWMap31RhNVhJuu5qT9OXVsIHWfq3ETXNUxypNZ/PtPktDv6ArYy7TN16Ie9T0JN9Gv8d4S45a7Y+vBfEQliEqh3zjfTuiAZrUO0/2wPDVmblJ28t8I+74LLlrUHxuzGSqnPavyW+OoUlJNtw6waRI3SADy4lTOHm8gK59a5aI3UvxN5PZMiRGaTJ9AcAm1IATOeGAtz7E+pE+DIb3zjQG/mQAmCQs1rH0XY9zCKMx7HnLLphr/ooTQSIaqCl1Zs/HbDN7SCeyBCYWRo+eT68qAdSqtdAv3hRexhvvyFduv9hspua77+9kYpXkXWbd2tht0pqdSQIv+JCvhZcedPKEJM9SlQQG65xY7JjDe/OXC7Vhkpd4lVzz2NCMEu9hz0YfhggSTDTQH4qXoSSJTQ+wSDQTdh+jOGhz3QPK1/SAA4xy+cdOEUpnCeeckOFhXKCvHFg60hODFoCh79g2sKMKvWER6PZE3IZq47nLta3Ui6lKxAQP9UFrdnK6aBULP48S6LEyJAbPPSumdg2ac2kt3wCBr+K9kD9/MUSTuzxrJ3lq/ttX/tTkXScQGDFIw3OVeOkYGVn+i1+zd23Ik+ScTxcDKH1UEfel7RLE+A1hzl76emx/Txb1W/Zwq3B/EDFY2hz727trMAQjbNF2lxxOEp00rTtem1fz9TQbwM6rAARjZVIzp2vzmepoPcNrQuuUbqf4I+kVTg/CnetF/reltIPXxVucUTsp9ZQbM04NjcyQuwSkLvKVc45Pcpkul7gnVp9aGjdD+AM0Qq5iXU5GRc8ivLRhasA7Lfun3442UXPD90PrINPQdB8rr5XXIUz1swpagUMdE6IhBXrwBV6XRbonGTwZBJ/hjsyKbPgT+ceX/p5mnr/ZEtnvvHU9iQbXJv6yDn9jRTVe+1X2flzOeCk7H/BnuBSYdn06RWq4vPm4DcoLoC634fESXpWIVVGvGt2D+6JvEax8x5eTXOckyDaG0XbhycZX0OioLyRBtlRU3BQpMyU0iLH06ddStCJlsfXcJbDcXybL8VP9rhoK7DKIt/7gsIzE2ERPD2DhYKHfH+2VZyDzsKKd2uVAa4EsimRagtq66nAGvyDr091LFcenOrZBKs1LesFneNEckpMfuAcSud9keYdyp0KWcUXOgxn+wZmCAaowg3BKMXq8DLLiJUPihCMwyqJv91IfQEBULvFa68QyR+aHl4piOf5yS2mCNh8aqyMwYBlLliW821LhdHFaMFXZMFNcM+/wSnHa8ftbmtaaMbQmYnZD1a76EByC/4cS3Gln7hEHd41rSLkZKCWCuRKUApS5oXkEAn0139ZJqRpxoLEBy9TYWN+eqA5gC5xdeAqG6r1IS54fv1KetjHSLs02TGAKO7/3eViyOy3f+mcI0+CbsvrFVt+Ivuj0zLwDNMkyAj9kMhEiQYV8whlaRzkl869yJE7faNKmw8pZg9vKfOwgHNcrySLidxgrb8CnqzhLtx4r5WtyX2Yu+jxkhUZ9Sf0WblSRhxYkJ6NwvCyKKsvafTDsSUeOqbSyrCgeVipbt1dFzqWwNXwC8Wpi+WZ9UPRXKO6rTlyAP+5ljErqeATvbaxxMG4/hfwDXq1jIMFPIn1XCrgkdnMqPn+Ua9xA2E5NJZhedBcPQMjW/9nM8lBjvf/kf2J0wsD4g0YLjq4k7bUaPQb1chlXrmi4DhRViH71iTXsMfPuA6r0LkwIqgkEfZCB64TtbN5+qptExP9v5qIDepla8iL+ZbCW+JVxO93ThnBR91ZjMhSMFtcmxmJSjhxbVJkv3YDYzapnXQOAWAcv8Ch2CC2KhU1CON4gwzW4TbzxEgmxiN9509/eUi8NerHnRgn1wdGTUZdBNJ+qhRXNet5+4lWVkHz4astUu5SYkykqyo9DvP/S79+mGqe9V6bW9zk2Ju5utZ9An0YMTh6l3HHUjPo7cYvNgb+Ic82HPY9R2bpSWgZ3W4KrGmgKaMiFC0YZugkqFQqIbXDjpikKb/lOWt0j+LHvvUpEkRjp1+PqoA6FZUJCn4m0ExKK5Vzji3dhVPto1hGoBWReCIXe6KV6ggsEpuT7Lc6ty1K6MES5hYW1wdwHxPngFaFKtXG17g4OU0Rry8FE2rdHmL4z8KLf/EWWAhDnmqpo5lrqS6W5HFCWdAI4G4C5qyD8461HMglCzYQKK7aSC4qQKn+fHfqLxkFpi7Yq6Ls4xvRwCbeo6jOaPQiBbXKMJ2JnpzDfaVl12hvSN0n6gp7y1tF+gPhfXAxts+49c51saf5XpzcKzhUkehRhzsEdlS99rwU4eUwYHozl5iSyKBU0cY0kqtwVegZSbNayYEQNGW8ndtFfyavn8icfoPJllnXHBTY7Ao2gP2TRxj+P7IF4lKkAKzWIyZXolos87ypy3itsJlEE9LVU1xJjtKLC+iwAN36ZbdsomI8m66qTVEwcbDWFs4hUaNXat96rkjdv3CooM4iq4+sOmZnSxmH0KQLNlPesY5w3+6JfNUo9CzGK7ww18ZwTrIMVp1DSHj3F17bMzj0lafL7cRrSX/jcN9nr+OrggQ4CSi+G9ff4/jBx9DcHknZ8m1xr42ZIdUJS30kJAdU5qVNfOp4Ts2O9ZhotD0zAvevhM3dwU848owmGBPNIGxHIltUwz6l5w4hvcYv2hxbqJ1drbh1FmO9a3j7LYQerKVAbYtMn7GgWVYsccBl1vshnHNxx1d1wAHuot47DCjeSgDOB+1BfS3H38Dct34gaFzow/9YmWkN9XdIbTf96Z3gVl9Eu+sSgd1olrcFvxy7QOnph/fz/pklbzObJni8ZTisIcZrssYJj8xwqqkYgGIA/hP5TatCQfMiYjsNIU9M/7Rf8+4Bu8xMqAToB/EVkxpabuI6A/XTWIVIXKGyZY8tnW385yicnsGBXsr4zojORxr+OqVPaOv9agsXchp7O7xgynYnf5Z3XWBlSrHp7ZeRXQds/7XjFDLVTbWPfR+OvYLKaCdshQaiAEa30WMpjMEZ8GGi0bdbxG8jsMm6HVqZzqgWQmK3RyVxCHo9kME/Mpeqq8UirHsI4U6FWsndTlW+vQ4/LIkdnQZgK1MENf1hk4g4WXInhUw7wijrTrhSzj7fQI+OMdUbU/1hQli0PglUayLSpD9A+5sNqpWunFl6ewaXUPyrrrhQw9dxKKDAcbmhA2Noo5XBnlA+PY35rq9PP8NNi4vTGDnea9wAOgW/kcJDLLEzaTCilL+4/PBkla9t0APDf84wq5cFpss2T/pyKTEc2PTZVfVYmFb9umBHOvypmbFYt5U/3Djlze6fFknNpKIwbJo409GJXcITa/R+PxCEKhto6OHp1NlbC9eNO0cnLYJDLQy6OzO7RRwTqsIUe79UxotuWpciVVEX9pN/IshHfLqwzlsdjxfoPYTc+nzZv9/ftLXsJ89n0vqvXRTnwwd+pZ7N2StnQ5LfHnEMJ2jIJmueJSGsjmEn03sFIeVnm4JS/wIhLKYHQv14rQSr/F30dJuzZNHhhUAKZXZDBOpTVN8RaterUpD/pMwj8IP+Us+v8FrZvUVA1VFq43t/00hW6ZhWJDluSUm9LgNWP+HlB2HrIsjkkd7FvZB3EkuslkZpmTqB2t4I9fTkR/aE+KQ9tUewRtFKZB86HPCB+GU8I2pN94VW74uVSCM+i+NW31oiL8ESQpulP71vg39l9mb4fPmVxHRw5uy3h9o7cHD/5QHCJMzD28TSK4HBocsnWe+pifpezF693hK+Xf6YOci9rfQNvpEQblo0oMa5A1Zh85/W6t2wvijqkw1M6nVgmoyAGOx80L9D8XvDvRe9L7S52OJB1X++qTBk0GUmTsI+raYB0aiUcL/26G0yq+fYMmF+lcp0wNCDpVmoUA+OZrDfAEdb02E7h8KhxhBDaS6Rh4oYRCKlu3tRSvUUkiwbxXpNnvcTF1xZhKucRXvfnhVSGrXcLKpHBcQXbKG+U+Yeuz+uJuZdVEm+JErjdnH/o+GpwQOWnQM9lqwZ6kOUH6MJPO3whpNgpYEsnp7pBuCCz4NcTd5gNf0zri2uexW0m0IuXSVWmFmkbBKCLUzjh1Pvf2dv1eVvCp58UamH0zTUkyJOQBgc3cEOjTUyps94Bxq12ZzLD0NAWHgFHgzDSqOB3B5/hhUBDcqDrq+kMK4bROW882bgRD0nIslpMwxbIoqUwwzZwLoLptPOtCLdYLIjg2ikRJYN3SIiBpiFPHAim1uikrcQDbSeVFw0MpF/xUMEd2O9Wwz8R8qbfBWZm5ZLl2glU1N0PLPvOYrYCocu+dEOAk2h2oz8o60174WDnhUWr7YaXDun6NA3LAR0DztIj9uuvcxIiE0ozAZEuLIH6u7PQJuvnUZkMMV+UFm5Ww0BfstmlANnOxN2rXA0k4drLqikCHYhgkTyBJtza2/GOtAVPP1WvJiEMj79lBgzJw8Lv0j+RyScFNBcX9vi+KMLwPZWY/OwIrOJF4LMVjdHbPAhUEHclU0h8fOyn7tV8q/8T8RtFBL+WZIbqS55S0KMH9rpKqoTrzFhtfWWJitzcJ1GiXme46YXtyZ/K0XtbQPeE+KXThtQj75sJYtBO8lIBM6rXrFNF/tUAv3189VQoLUVvSPxplLQywtH+71lcdAU5ULhz0F4Popyc78yd+8jnigR1dEXlQUddKeR2OH4RnqVD0L3ZqYfUhvSxWLGK4Ra+oAJs7BmWV2DYdWY0feL2+7LLLJAcbQSIc+DibLc1mJQtIoWTnaqxOCZW9ICO4yGavqD9Vve0H/Pr16vPDz7O82eo5BhGanzuM82S7wLUMFYzGVzPp0egWPPrOsZDyjp/UXmdZut5fGFwP9vxWkCpb9JGXz45APiTjS+863nAzurQSEN2TLExFS6uRWVb8BRTEuwRnzf1iPsEHBllGonIBrzgso1IljmU4CMa2WWDNbsG7/xcNXqqHHoBLTpAeisDpbUpR1mrsO4gekYZOk6fQCjdXfT16kbCMSVfNAXAuEDbNBl93ckBooWKamHvgt3ePNv4BuBs83y/YId5D2NthOO1aAutMW11kpnkKBv/ubsVtnLoz1SoUP2sDQaehI4r/rKmwpkg1LwreXlDQvqdR/Kt9PX+LJVJB88a6fxBvKPiQ+5Xr35/tE/TtnlOB14k60GioYgJukqg57OVrOwDfbKQ0QkrZxnVv5FqSTilKtIInKxnQOxN+C/1VRASKUHj+VgTR7zQ810X21f39qFqb9CRvRf3ddXhU3hddYW8VJ+zR2isBu40jOXI3XfeS6+7qeF3hvGshH0Y36zEJf7nu2QYpQGmsGEgOXxRuZgKEiWT919sLWnWQb3npAcCK7lTgZw4aWPWPhVQB32CdM3Ok6DRts/7tt7sWlkLxCs+t5rTbD5qvtb8t6vyUhh+X6LRFGY/u6J5nKw0Cj04YNcxnnqhXq0PLL/+0gq80J6+oFUQsNKg6BNz7FdRzA7CYiVRH5MHKe5upZEKkml5FdnE2x6aRNsARigJaFNj3jb8fhY6xm4O4pepVcRl9Bfrl703NZ46bYNqt4RztvIjyZvfuTaWm9WZpWau/aGDBMd5qtEpj6OwgHJt4Ueejd6kE+YBajzAT+cyIGPk26IzclhXVZgvqBZzX9ZiIjCo+4RZ9mG16X6Lt/tThHpbK5oK9wQPQ+OD358Jg6EZk/AQoCX2Re0sJKtrpjsfHrg95BBTkUtA4gcZrddnsdXcnDKQDRlfols048fU0YpTz7zs5Hm9ExPyg38SfdvYv5ltQAZJmarGFODRVjt6xA4gqz/cfDVS5O5WxNR1ZuBvgSmEH5+fjSXuJmk3lPS1rO6MTwhyXKppa36ZwiV/iwFSkb2nFbmwQBS4WMYz1ucxEbW0m0vj5xOv9FAp6e9E0Xn9r2c23G74RuUVsQEE8vgtNET5eh8WS+rcsFWAih+osK9XgbN0+b1PU8FNb0FnZmTc/4jQVAYqaTbKP92NkL2vwAg4m5yg7+ZM+LPieJinDzsC6yXb5sd1FH6Xr2Tmk035SfmIkjNUplDAjr1GMXahHpUEkWrYR2FNkbAph9yhoR0Txmw+k9XG7CA17yE9q5fhKX9CrvGIaX29cWg7bIfFuDs/rHt+s6kXkqUQiRnYtokNcDtvUaGVlr63M95DLGxLRE3A8p7NMS/+JB26yriVhvJ0D3i2weI9HEEpS+HWK/a2QAzjluShXbBy0Gj8yu6x7Q15fxj6T36RvxMz7JahgVXBNK1BXUQiyE1xl2A+7bdDdO42QsSyQB1PLFQSCvfc19aWgg38t9OwqewFoSj9I3n+V9hQyIZoFxT93AaBa5EfljUuGxUnfI8/isTPfJC1vVlbfBfnbCQnvgf9Ckm/hg1HB2yZh8Wvt0cRRFTXcEhs7VO6SioZiGkP7wQm3+uE9ZFl+OyQ5065r2KXNM+KOsduIGTFJBw2GMlHmXlDw15eZSKovxhOuZx05mar102980iEx5LH2IskXtbjD+rzYR6JESJcA8f+qJe2SfzwOZ7jiVLgJEomb6zZh4Vq0T3VVCbYpWFHirBU+qhXRyMbeZL9lznMmaOtLg4VwXPHVARZmsqcMx/0D83b9y26uUwgZze4XlGs8w/IJX/JqyrJZJ0rnTwAjE9IgElfGxQg6FcqVTso2KYNSMZ3g55tWaou8OwNtPgh50clmMrcmMlNyHa7MAkfdMFvraQtS8wuw/XRuNsthn4md+uQJEuOR9qDy8V7lCVZYwoqypyYd676VbhSTdipwW/BrTHj3kmRAKzSeZ5ma1bOijy7nUWYeQ9oTWyP2lLxD3s7O6qMVd+PqV0EoMjO5LFF0/GgNFBVnrjZZX6L1g7Ac1PArnZSTDEGd6WNtb6Ia1wc4W/0RhjSQ21AiMX/sS6+DSMySaru9ZgkGvrqZja14QwZqn5UXSeCtssmN9M1St/5RM77IQFWNyxRg6gL3B4TLVhoyqC2J7zlssk1T9q+tpqdsQYI/bnQ5CCDWdvUgmRG8v6qvOLmIp1E/IT8b14Xxx2xkaGe6PFWsym6HcDbv2BNHrOoPUq0YUAm7+wZjvClK5P1pB1/8HzHQ4PnNoxwPG8x1JZ0pUSUI7GDYVSY9D1oj9sxhT1yo2zh5MD/mnOsTaQrg5prdo32efdFaLp9Des02iwplh9MncjyUVP6jLdTCXvs/vsKYZEUq4CQVuBQ8fboq+pW2WqltPdsnStldvHllbrFCAIpXwpWhFISMF5nEx5CaADzkhxSX2whl3W4sQ4SbxT1vGwHaeP+uYiZBbSHmiNisc7hnRx73+ESYtRFpNWde5aeHA91ObqqzFhTlAmmqNCo/VzoA82jkfViizUZmwgYEirv55kzYv61NDJkCokwrXrYjY1bvGSxPSw/i0SiIWeAQZQ44S+9LcK1mfdUrRVcPEl3wqgYmL659ZnVTGCjqunncIfrH0CV+ABMCEVLQI/NpVDZq4A/XXDbMirGDFDlnor8GhBIxmpM7veAGKltNwM4qmGIAylMOB+ZK8mhJddBvC6XaPNyv4WOhLjJbSgFmU/ijqe7V4E0yIueUOzknpcqKxJozfncL7R8yr9TWCEjFDNl7ovbyAk9QEmMLcmitUZEe/pMNsnvaoVRJF7mHpv8x1SS/ZZf2ECFQRAnM4s9c0gAvCAOEoB6t9mgO46lvDkaoUUdMilNJvTT0y6yJv+w1yaMQMWDNzO+9C8us16xAQ4IoQfAbKhqaENXX5gyV068SsP1dZhE5YXP9DcMDrbSAKptAQ8s5e58lINW4BzSXJFXBTvz66jKe316uihkh8JAYRqUN+XweKqKhtX0T5iaUlYlPfaroTEDHnrQMwNWG5034KwWYyijm7ukhbcRic7MxFjOZGO15qONBdZF6TNG0pMYZDDaLUDahayyGU4vIybsiZEDvF8fYDnthvgW91b+aCv58mtWRS4fhPeZ4BbHaG6oYZUmVkK5gVPWUhXhS8U5oxA+x9x1U6gYepf7f0/xFFRGkfyxh1CS/ZMERpuj+hvN1IUNoyOP4++rt0nO7VbfzGdYwemzsECCfRJfJ6IGtix5LMYomyA2Z9xpPa02JbXRZvkShY/tK9CDGEID7VF1Fr29G2v+yB+alw4bYMvPHc2xyvRX1/vhdINFuGWWIdg9H9EyYBhNGg3zjfUOV7EwkwWit4tGKvdoN4aoR/0CeHAQKhv9GYbKCYlnn9jevfzprKMszPkEdVLQxOWNH1FrCInfz9uzGfyGuyee/IYYB++owjRhBtzLxw1sdkm8FE5j+tHDIZ6miKkmRpfUWrnsxn7AnksZWtKKNE3kp/wNA8sBcoYMbfCo/2w90o/R/fM3iRDPWUEOMsTOEItpamjEd1FrGP2sD6cddGrPpLcn4e5zk0rQ6sHffMTujWQOUYsgrJ1NjWwI3CHsoLOoOU+L10DdkbXcrMnEhJHQHg8h6UOsi8gSz7cTv+ZvULWzkjCB0zV4j8hZ4fVA5y/eLtu22x05K3hFYW55lXcenKS4iXBfoEEQp+TqgH6BgrzSXvlV+UuN43ld45/g/BhQO3uSs5VWW8WWOKQOxfxWWOtlk6fxIHajarevAJiTUWYID2dX1ZwYxsZ/vqVhs9NN1Fwm98FxtrMJA4doT17RjQPdTTjFvW9liYqAOPdEzLLgRgWBLChRrURxGCjqjW0dXjyuGsgh1w9YTTqS96ss0ofNxHmBkyHyUs4EjDJT0+jaxeXsx2JIopPKRm0VZ3HUGJM/3aP4JQMUCUurHGGmE0eNoeWOW7QAncNGjpBxlj1XfQA87BVjmDdCNBJ3xXYztg3dJKA7odkvlrPxWutTwv85/s4ju3EizyMtaVYZSWLjaqgJHHpaZdFCPpSCJUr4Jg5h229Zr48s7v8WbJ+hNmTKAHvcY6nv9clHNtCiQG9FsnhAF/3szLEd1B9CuUKj49vsNptg71Vo7+2AbpqIT7Z7unyPUxIKsgktwckYNY0cJczYrtt5R+1PepkY2w4b1nuVtaVJoTH0QJcc/ZmCw9Py4sG1w5ZYZCdnox06MP5HysJw8BTNIAH44pbgqMsw1Vz4f0UFACatQtW5KUCYgDO7Je/7mECuOoriwQ2u39oHONI4WEtgb7bfAaDl5NFjr0P+rRucQXToNz4LNto1DaHRK/tJcdrWsQUnSMfcvtkWl7GI2zPn2Lp1Difhkn/htD4k6Jsz3hxaMMTX7KVsdryEzewyvLBavxpw0pl2GUmgrLuQQIQplHkA0acMfX3vLHLd8iL6c6YLk+LfwLjNAP31Lf9D6KPKo6kxl+N7Cxk9Y9WeINS3xJYrY6MqR8I4KRYTV72vHi+q5vp1MnvgvYnIgesQhCfWz4ti4NmZWC8ttcQFgnyU0H1feE4NCxH7kKyvMvG0c3u11T7kaEK5c2AEr+c4drKS67ziGgkebSpidtW7n9JmNcdOcj/HZkp5ww9HI+e/9FKlereyPOWLzQYext4KewIB38TlHeImp2kFXM5N76r9Lj+jNR83/PpvdV10wAqI3pg5XScWykxmrjzrImVVMaydHx7K3ZS2fXY+qGPAuq+rpwx8xfu73mz947bJdG5hlsG5XCdm1k0JsjmY2+Ik8MU+/ERMmvQUbHU5DSSZDmzWcltR/MJGjTV2Nvpz4vZ7yjJi0DkDQ8jNDJfsJK4k1M1R/e1Jq3JuGsU6ujNgay791S5cQ2shtVb60GHYwZ3r4hE79/7tprsE4PzzWA72Jb4GO+B9N60MUU4ALUAx5mxmGND+XL04KED7K3Cf9Wwy58T1Q5QD/2V2uK4xr9i+Ga/Nep1QRKref46JO1lqyp23nxrSMEViMNYYd9qSTXTDtaU6JcVS7bMJpPTQRQMkvKTNqVgHXxmKzmK7jK/z5FIXbeETfJV8DtxE3/Jd+aQKGOcCg0EshmjXnAsK6Rk5Z7nss1aoQ/pNva86zBVpFY5X1EGNevbbx2ZDVQ8xEPPLFC7bW0c9K56TZuxVWg6rtdVYtG3iWMn0HBypRvIvi6y7rZXblcf+UpoHjHIz0afHqRntKGKpHY2ge0hZtE6HUsoMAWjbKlYkDubZXrIl12/8HG2d99igCKnisgSq62QNVNgTlS9VD90K26+/dKdNoqR7YDQfCfW7NBIlOSF1BzyUzLxLZla8sngZrTKpyYo1vCnB2qEYUawT6tqRebk1kOagSrtHSHrUmLOBULeeZzuYp7llb4eAswWgNRBL6R7wi4Qf8ndMZyNu8dXcXUzEd+HCDAdc2qsuRd739jDQAVibDda5mJ3z2J4toeS+6Yzjz06jNRFJLODaVHFS3yPhDbsHCRgOoTxPSUdtE6/AVLyVJWMA9doorlIAfLpBKsfHMh/rJ01oYBVQT5v3b1NGpTVXxFNRsiHSveoVRoSZim74b0WqEy9lXX11/MGlnu176943ocn36c8aYI95sLV7eh/8p7oGHtE1RXbMcfg/pYaFr33Q/JoVIVPgtrrAmQP0LIgLYI0hk8FRC+Hy17Dtef4JEfWFEVU0+3H8qRCqIk1JQbmcdYvOANSs2+fzodxpSHPo+hkOU/5Qw6qJVZadw8/urODdePNStwdw5/Ax0BN2rQWxDSL6byHtexj/F4g3NPlAJT4yAzKq0U4jRomWml6EAwZ4igrcxlBVNVecw4uDrrMCd4O9JuZL5Ytojujgew/Okx7+Es5yW7zmIwCuxnioGkSHUvfDg5Cw3dd8cLqRQswoMkhSOE4DDznFt/yA+eq6lul06UZENSn2k56ty5RvtKztuVFDlySKvCHHhyfJ307QEvV9TAkoF1KgqQ7aWNaOxLeca294ujTNKYmEAgAaE9sRhiOXWQ5VEzMwNQ85MemWt6E6Ym5pEriRPMF6YeiEBl5N4z+4Jl7DyhtgsroscMhV/zWqvuG2rkBKWhqvCZx0dIW7tvnCdF20V+ls/9dCwiX89YOilc5Sm86qVBoWms4IZKNe2LAq3btt49daZpdL9Uw+X89em6CQZT4Ne0hxqm6Utfi/ibKV8gTS1Jzl3Q05CWRLqDEWfZr+aqGMAdwrpsLy6MAXQ18ws6M26BMvbJjT6vxlz38i6BsML/SoWRrmgQ4F6MibZXNtZIAaDfWToGnYGgA5I0sfUD2Tz/QLRpl7Kxwa564WUCVledmaFCBo/wbRxI8Q0fBV93G1lTnGJ6rXDryJqPGQK6IEZqXCWT6TPmenH2f4bBRfvhIf809MuFodjHIGfwGS+ov9tPdUUonnlZRIR5whhLFbK9Q1S+aAr6nYUjtsMeSYQM6ZNJbb2LZWjs6OTm/r1Xnx2g3RdkjCrFlncws65Ffl1n3l6ADzm/VTNHfMHL38TJqva01XQxvOsekJUfjPccEhfbGCcf4ZjYIOybWTmAnoLjiHR2JpB0dsAltjvUGsCijSHyc/qPFt2BmcF7H4u7EcNvSk3PJpkhIa+loH+VQZUVxz15pxRbbgDFo167HGeTXgl710Sdffe5MVU5WddFdI/jD4tNx42OHiQVIJXnYTIBYRADO7bbB0AdDR9reRjhCKdmwe5t/e/p4BwWPI7XmeWqBxJJsMV5XWa9y1/IRPvodMigW33Aldz2NKn3p4Xpnqojp2mtDF/DtTmdcUGZkgd4W+bZlo6sBsA9tFRZvQcZGMIiI2xLUh9mndnpHVKR3ZQ3oB/grYv5dJ9Vx2f9k/lEoqRcaGDG+3Rtdqg2LmdS5pAbdkExnR/Dzk9OxIOHUjbcYJuO+4Yrkcln1nExez40yGCyhfvPjGdus+LchG9QKUYlu5T9X1om1Fd5qdArgcqVAaTz7jM9WIBkQ716hzQNvbj5ir3Iki3Lce7DQRGzbx3Bq+Z3i2CRAsLr4rbOey5AZkt+D9mLTlZwDE8PXGrkyWFYvLzUJJrnk1zeTfprm79LlI9emZVng3PzhiwB7bsWfLpClIHCVtffJwQhksRRyZXDihCsfpyWkZPR5dVthdSXrPo2NMrS1T4Rsah34CujZC/dqgKZ+Qst6e3sLOQ2y4b1avX4SvjP14KDxW2/G44B54AqGtaqjh0mikQETybFhOohmmBwvh/LThnHFojS8PPw2RqsF3+BP28XMBQxMgqMgP4i6UG1nwEbCxze1AD0S8b52kOdyNJrQT2VFPoRpfXyOcNXYd0STPq+42+zfqS/1AOZ3hrOscObrYBuaIh//nC942x6fVmX5NuFlj95FrBJUkz4gjrHaZ8yHTO0mta2sp7rVK65itnVn9FnsZEk7vsnmlaPImpIRw5DpNFtIdm/o2N61lLJr3ljdeVInAQZxsIX0KOSvrwP4OFt/BRpeYEtbr6PhjETIBrDfH+vle9tNdDVUWj+vCmkyG/eQ0UA9bPgYKkuXdBucIawoyGG4h9hbdZZMQSOfuupqOlfjChseJ5k6+GvEHzeKghyntLhbdD4pexYmikCgYd0SFbmK4WoCzdN7qy+X0k4YfJ78Y4eMo32Ijt2Y+cAGG2Mz6dRp7Ir81yg7hrJPgVNUkzMnPnmtZt8wLnce4053cUn/uuXS+GHIzXP1iM6MDvHnElUI61y70ZDQBgSM7Ej5cf4fCmQFDj+gPSOPytMFzezYPnPF9l1eBd8dWHl1MIjRMjtG6Hg//4LR+7CfDVxZqIDdYheiYiWy+fpoYTFQQcgv2uVmZIHBA9c9ri6NAzDYlBxOnnnPRY7Tjr8N9dElz+gbE0RV+eyfJjcjyHJhGSXz0Bnr7Teitj7EEFI95B6K31OaTF0cyTEWNwD4cfEOV61VzYR5DTtNxYbyaSHdy4Hkyw0BzqU9SrRXl2dHbdLaP0joKgwPh5Tc/vNpBbSuKXQz2QrCXs/Kjfswsp1T2e4eOltwEFc1ygwv23Qz5GkSZUYll4vivBb8LUuIhRDyAxYA9BjKue8xCswZn7Vz9M2T2r+ClJ3Wl1PMTKB1Swsy3vCSsD1CIUr1zXVBICWqo/gGqRrnVhME+1EnTkRGWXgGJT6bHblX6kjq49OuZuv2pShbZSE7O8vh+a5qx346sMaduqU3dpl5dcaRTv5Nm6l0A8qSdFEPHlPgGo4lzlEAKIefcRInWKqx6QIORCJ21K45PZ9aPxiCU/liNtVX3vlXL51b5tI4VzQBWkCAvE5HoRUg6jRkuR6QRIGYgpcKupeCUICYL6J6S9ttK/X65g3vvbM0h0mLIqLY9vmGoEI71Rg3CUlAlGcf2UpZ3umpGqwHRITzLxYlkV+Tv9JhtKV18bAX7FlJURcRzEl/+uYip2OW1mkHzrSVbxisjqQKGRAtSgnff6z/vbJI3q0i5yKTCDevr2zsxHZ4oRBTIB/ioLBl9hDQPbG6ZUbwuxwsa37K8P/Mp1kHClRal9/9QholcmmFjwzSkxzQp9tE7feHbua+SDVOuZyrGGRZeWfOQdsgF6si7bS7YGn0JjyWhK1/SsiNWmBvjuT3pPMIQCFlA7WmA+Ev4U5h90q2obaZ2+X8QUIdWFEq5rFNOt3ELpCskpsqE8y4uOCwo+ZcAyNjLWtVXjIYICGEcEKWagjOy5v4RLLzcSGMCuj34zGUm0jWq91gAq983CgXHHE53P8Iqjqp36as8Rt6ITxLAUoQhqPigzpezqP80vWqnoMy1KGpfCHP3o763/UtyglocCkKwA0x6k49Ww1dLuSoR8XuzsU2fdVSi1d86vN6TBsLtySNNY4H85Do4D87+nRpcBjUgmUkAUqgVA36fMS1pqepk1v+LkSvm7rrDrMU9hCv/xIaK0xNHokdn5JJ/Nkfp3Qui9Cw2yJ1NWoM1HYEbC8MteEW/BHTmR09+iZwDVP6qJr53rkuXOYzwUoekt3G/Ck8vGJzHlc3k91/WSflJNMdgw7X/HSIsdxZS502bxCFCATa4kYcrBMDvMasJ1wavhmHjqNFwp7RcsDsX/65xpeTb9D+v5XkvYs/VWfC73LmGUOeogqMDMV1Q9A2z8SFwMkyIa9sefZVSrR2kTuPOBGABEVOSC1iWRa9Zze7A8ySOIF1W5d6PNgjcvM3iJk5y4ggmMmzXIo5Z+L4jIXxcZrrbl2+eZdj8thP22Ixmwsg37pZJH5yx6L9w62I8ZtAANRsAyhHnhcJ+8gCFw3Th707gg5lbP+Gr6k0oqd8e0WVk1aACzTSUJU2pDBFd+Tuc2lBZFB62tBoWWZKrFr2OND0LOUxvxjtUkBTmg/FiWfUKCprCDpM0PeEHjAYnXBso6P83nEJlPhtQzUasRf7i/ohmzwA/M6dvbiQEtIIWDiK0DuYaV6WuGNECVZzczRAvdxMZKugSaYPddQB8a8WKEkcUPjLC/RJ3E9ar4fKp1NEuCdd/9CleoM57wfowXbZ+bd6ck2laUNT1LCHz89ccT082sGz7O4UvzoSf+2bS8wE0NNk/25i6bxryd+Wk0mcDJWHIDTeVVUm1pz/Ajz98ZXmQIDtNcIIo9APNGWmXDSoz7xf0pR3ldSb1cgaNDt7ba9v6jZt03NeJLFR5g7uL2Qs+LqFZNRsNAId5CZe5JJ3oTf0yShKqYMIi/KCYpk3UowP8Zy7S/q1lLvvP6yDZrY0lyB17u1ZTcMOHDix1EgwNpN+Qbp/es4nbriJQ/hUvR35w/hkP9J8K0FVaiguUy9fecKTExlDGnzdbyve1pWx2Wl9Xbf9KN9lH8CnjAQP8yYJt+H0UD5Vi1avMNwct3IPvUo12Ivlhjb2GwFKbFFrwqIYY8W0OdsIgCml0KUpHJcGMXuCZpA2K0MyPb820ATH4KJyxBC9S418pbNUMe4Mrl/pZu5FwFG9XStr9kaCYKh3Rv0mEX6XZwfz4UpN8QvaGk3LcnWcsLIeyPOQNQPoIhljIIgRhyeqEKAsH4NIQ8HucWCk38A+dOBitTkRX2BHYuEqVepLsJT785vhEzWMt2qRNtegr2cbv0xeK6BYZLdXsmXpqBKHQuy5Te9HRWLu4kEWHUXdOm+NU3NumtIFdmNP67hVS5VR9n8OZvELul++44L6lQi+hrp96CVFQNKgt1wf4kpjTq5nfzdtLidSgnvKYada+SH2w1bq+MJfDhXfAALvrIKoDV4WI6Ki9eUJZhTMj4nbj9rTWpqAAzRMVhYVbhl6CkxMBq92V5S2csDIIA4HYFVptWR8az3xeeLCJWKIW8oliRAMQDmGOo8Lzz7cw8RfOZB+TN8gQQkJ4XgcUpoAe3rKdqlBdV4nJheGOFNxdKd22YyqLtpnO0kZ5YQZMsMSFQX7+j6VBBFSQ242b+q+aQ2xSoZXtaLHDBkarf8jLHWhArIyBQdZP4gTQk9DyUi3igzvaLoFl8uJPXNfKRYuZHF4mSXf53wi06G2Tmk9LGgYKpJoqNpDZghugzw9ny4Jwmin56JRXOjzRBWAgzeH2D02g8lkSAwO6gP7vvIZx86D2+5X8qXcx6aXqNwo3AnRGLQORxoa+Y7b8EJe2vAOXU3kthmtJZBqVOhm/9LfoNoTVBl8Rvw+RrKBNj/Z1DXs+2+MCYJbfwLATSDN10x5Cs/f4h2K/H2j2Po2idVrGCXoEpUD5hzHtCU4+vMc5uHVhkO37wLNqz8X946RItbTxdwr//o5iAdFrm+50Ii1eNUTRB6Brggp+jt7pDXj5OYb2HxJBbtS2s0lGaPOjnH7j/HoBl4yKb8GR1AKwiM2cf6CGQENHdyyn/Mmfhb/qS4mpkdBbTSIFAPGljra7cOqcYm6P01OLYy6ZaTlpVqhSeDPxhxYOU0XjGmvpJaoJdf6ajkyiDg5EYgpl5ommwt1aksyN0kF21Yqen8WQJ3iybDuQ4d9hMxfC8BXYqRleawMIEJ7Vf2zgXtkI3p0+rrKJAVo2aE/yPPscnPYHQ9BJK+xUuj+a1Zgl+QcihO5o0EXP6TAncDlKZ4iM690jG/MYgy0UWnWqZqiXGAQZLayTgi8ki1sLxgLeP7PR1nGSPICQ4fnqcYzNjilHCc8Dyan0sGYOxuqfBuWBpJ8XSFEcq1VxuuNhDwjdKD//DFj+TsvR26akm15/aFVYtK+BPVrPW2nroAimxQFANDslYrzYMOmxjVwrTB14BYd0q1cUPPSqWdhXr29q9tdN1o98E5agcKpNr37K4Eiihjsc5+6PmH5XpreG8dAbrrsdfvVSk17rvvF+bfn191qOysS+wkhho4jMqMKRvOv5OsC7dZWoVOJ10T06RfXiKjTtWjNDWz131DByAuHNZh//G7YPzKWBof57Xd0Du50IOjWYvjJl268hNF+HdqL1wV0DanTI5PuGT4O3RMIyvlQnmUP6rJEZCMjRBMAKZWeLBRdRo1QnevmblSkUgZmCljsnbcLK0LRCPktZcD/u1k1Y9XF4u2FWjuk+kXcuRgteHHHU+JDYSkkeMdMyTWKp0EYX3Akg5X1dLV8PcRb0iV2h3assddleMdBEC/wkXVImWYaL65sSkSoyIs37I68MPbVYpfbz2gm1wBl1ODULmHhdcAy8CtgCVBeXw83HxxjxPux4j9kOjCpUjgp8KMdkaRXV9iNZu6Pau7l8twlugzFOpBMWmua423FCQctD1vF3RHPN8SYO5j7K8Cj2Xm7XE1CDmGx8K2g6p2sZcqTSVml3aDNY7d17hj/36uUaF4IUBtJwyT52M7fF4eln6hxqPj69/M6d7um7e1LTEGRI4AOXGj3OBJ+Ra8hhrBZUns2QxilRPmwp1mhhLEE7XrfyzqSIo0Io0Cagv0V/eBhp7JO28ZAmArpO4fgtsFXOcVy+kb4hcCTTa6y2ExCMRq8OGrlSRZpD2y3+VarWUb3Tia43Zwjb6fg2drRVyNbBLXk3OHd96oRys9PgGi5kZ0wCz9eL2v6IUhL7/hPhO5ztPOB5GFJKwSLmUxrF6Dy0bCZuGKFiM69k5L1vmb0tluXw0wZ1wxJiNGm1aq6McdI1780SkNmamH33+bIGNUq57ZlpKgKDR9nQL9DEPl2VgcsbufczEeNZqyYiteOQ7jscH2o5Aq4RNEvTINhWLBYyc8en06OdnswzXBLDcZElQXadsmaMmvbvDy0aK9c+IxaU4usQbmQENYwhY/tOeSw74Kx6ePBbiiR8CxeWcq59tzigg17ZDkLQJSIhhhiqFMen7UHY7lcpfJBRFWvKnYhY+xsrlxko3XlyqW0+BGjb9eCn+aOw/fttmxo+h/t8xC5ocSI2C+UbHplaILVd2DTlNnufa/CS/odGpWwxd0rX0f3Pmgh6Q0TiHPx4Ayz3/zVvDyegmlioz5uWkzUUOFFAFFKF4izHTvYyotsPcpps9/YHGZK/fcIqooPiL1S64S+x7+wQMvduf0FbzSq9QezqI689C2FxdCSV5HIsambOBM10wGxQ31ygRh1crk23A5XyQV1H4JB7J8+Lc7sRgzP4/yvBFeKh9b5r1Z2Qurtd5Xm8+HalMPTnVaaivU0Mkm4EvM4/zn/Vb/DEcFF5Ck6hK5u9YJeHmcvv2r4bn/SQTYUIq02KV2FTZSvqVsrXrolDb2iphwynq+RAwpO8HeV0nmC8NBRlIsxWp07LDQo7ImnNiLHsG8gcrDc88N7THI36BQ6VMhTUmMO5xLe/k4E+lyuozlvlbRYLbIkEXfhZV8O7HQUmtV5PJTpUOz+vNIvDXgszs/uUFaWA4DtL0QSnGGhFvaGg07hAhkZmZ5D+1oh1FitK7OMu68BWdIOkCSdA/0S/EQBMPW5PgyPPI8Z2y0xFoDa9QNfW8vlti1802J04mtMpqVQXBoiDFVBWuDjuzGerJh0KdVCV3CjpejY2xFo2CMTTqvQekdy11DgK7DiBF5lcP8EN0PBIFm1AaAg278+Fh6qMetWIU8dH+Nw9UTK+3JWyjvUKtRmkDnq0GUR+2qGOg30NcQBgk1rMI6+JT4qEh2cFcelbCKp+GOeoWWfz3mtw3E2GPpWMw4GQ+sCFXV0uNvWIzSokeRrQUkrBq/Vf6dt3cSMf4PUgRvkEYc3XJ04+9ZAxWApF19sxWn3qWrp9k0KwUrsINVhjB1PRCVW1USQmCbvM7weENzgjecKh7bsnwXtoN3vMiAaiI9A70Thb6o2/MMR3RJhOxlWR2UtMtLnDWkJ2OQV7N6iHjM8rjFjjRSbivWwD7JE+F/p5h52L9VN4d2W2Kv7BKs3SalVBdq/AbAgB1V5yZF5avWDmz45M2ZqO8pSkGbINNTEM1BeGMZJs7jjscrJjhynHNfBQ7J0q+qjM7+YpUwFk2kVg5KYaANvqR0A8CNqV3tw3U9w9e2AS1r3dmStbZ95a+lf/MSs2Tngvv/FgCKU2zCSvIZIaO4YqbiZSyUULomonLLaZkQ/dyakfjcR9dbENOTgAyKmOeXrfQqFOqEpusg8Vy856zVjRnjHIpwQewOtVL0RaPFzBvjMb3bjWOWTmOixEOW5T2uIHdy1ZQdCIK3I8zvaVbBpCD5u81D5PqqdgJ1UGbqapB/OOG0kl2+Cfv+43j7KQSJLCDTae7fHF0JZiAA/HfjxQWFbxnKUERvaCMYG40kVt5gfitAm2bl12hCgRjKuIdb1x3Jj/uGpuA5PiY4jzqlqCpGMOo6dE75QngOte6vZ9KcZ5ujrBGHhld040vgZEAIpYmrCUAdpN3lKNokreoXx9R9+CCxHyllxnro4ddwjzeiMTFxir8/cXdxrp8GxZjv0dYWlpCIOGLIF8csfPgZ/LGVeh+E2JQMD4qKEV7vwjApdlIhtLxkVWMBf7n0FTZfeq/OLDCMX/gpqNIRcT0uJ7v0Fx32vUjGmW22BueXmGAx80sZ+9mWVwtnQGg9tVmlf8cJrUo2loV/9Y1PWNhyIRKbo2HMKvdmk1OaVlk6IVvGNqbSqBsad9QA6wz96Sg7h5xIa0qu48uTxzAyU6pHIFg3QqzC90JljynKlfgGTBhSa997nCK63dvfqnf995eIwASSWq/LTcgzNq5wDkLmcAMMqVZXLA5tUBwwno2ZrNZLD0o89YvPIcIkpq30IY2ETtM6trTHePQP5w9zBWD7oBcWOExrYtLKdxjHvL+MzP6yPrS1hQn9CEnOPH+zKQsFVcGoAllo/2dFpX06VzlpilEzo37asHzuPHbZfUyASofX0QS/0o2uyEFchU+W6Hhkfu2kRFyJDQM/cT5jRyGEvufQiwG0zjHv94lVXMLhNeOYweHUVk0USVOiqGUpaJj9eXW1IJ4uhqQyK8FyJArQJ4qLEVov6LwiC5An9eXtYXC3G7tlkOp8oDibbNzZlZnw5CiOmtB+8m3Frpa+qBdMQ7t2abqcC3RbPtP9+Pl4qL4v/vQOGO0v3uUftbvW/1a2mFm9MlVbWMvJksoXB5hMZcqjkbmZBx3nVYAmWJJe8PnaZspH+PhVRf75MLeDmj26zrIryVtA/6X44y05SRoNF3ea4teSs2pgCFCs8S17hYvVBX+IjARnn2qXTmIk5tA5pDAxA0waB48ex0ARpKQpOUWAJVruMOx3d71OElcEYzep96Sum4f5wL/RpAE5q0oubCHRpCmE226JBN7fBua2ClvjjIlnAObS7oxUr+aFsHsKdt3RAoPPix5IwGOViT9Axqob8PUOIhYln2tdmilFNk/rS7CmDJ1+FS4DDGKYbluXJ6vrfPeJoxQ1sqjRfO9lN9npWRcFnaFe42HaI4s5fTbt54+7cThiG1fhxSgldT+DHjKcKRACASLv3RLDdBSkaFEbP7YFvbI/HaLOgWFUiAwOLVc2HkZmAmECmyo1MTFYUlw/q9J1QxcvvvMiMcTcOnwzQwjwuHHjtWlb1kE9Klw4dtyND9goJrUpxbernzbdfS3PTj30KQMPpG5+mC/22hVUMUz50sF9U1UCi54PyoMnO/i+WKk09HmIvBna6KVOnLTnXXuukMg6LK/O5DUOP7E3a9Uxiy7lvzv3ee/2Sikau2NNiWjOGXA/qxrPAe1+/wokpp3PDAvkHo4Ewit8RIEn5edKwoYQFeGgq9HHt0R8ECX+BITsiTWdtGUNZHUSKfhRC8oJ2yK6r2R2hO0kzGNJf3DMe/EZTItOfvnlkK6JOeKCSzat1WtwtIkX3WTkno09YmcYyIpa80fBN6n8Lr48szqiv1O6brwVvHjNQyNwYfpMirCPkxUTMHbiUtyHwk1EmKv6ZbkQ45MnQoH90e3Xu7qnF4rK5QmaZvcvd0BgfFP8tSYVhpqIvsA0xjU5KA7aDwxCf0rDBN5om6HhmhHuOdSqVme/hRS1me+9jkwbOvixfZHoEzsofQis5lSwLQt8pRF6+VDMFoJ2kAZy95iRFL4NXuejV7x2Ia2+7iuj+mpK2Kg/jFsSgKC564A8LfIlN2wGSVxYseD98XE2IpYnTO9B+AeTx47XsxXn346sivhNwU7FqkRzV4lQwEgE27qn6D3eazRY32QQci2UFJqRR6BG2E8JRIx71vFxBCl9h3Zs3/zY+vU27h+ukub/14MLFtZ/7zkciQoc5r37yItWCpUBu8VG26ZY2hJ61wZ3TMxnpIQg3FtGYw4YFMazBamt7NmTaRrByYeDILWmtpKOnzRt17VKYJFAJ+3wUXb6vdKNNA9SzM2GS866EHFDP7Lgb6W7hxit8R0XqmJI3HzGCw8Ogmw6PifDqSfoQJEzmTQgMVTCB2fhDO8J2iea2Hk9Ot+kmNQwSebUyWJXK5InOCPpMjQAF58n2tZyBJKeMrneFb8QdVLCWc0HvrtTkzXG06K26W3sTn1HoM/mPyRiy9GySULBkZ8tc1a1Za3sDRVBToGaWC8ZFXyUkOaxpLNxdd5ECPcduHnpzFXXkXe4nXFXAvAR4WH5AoYR/2LwzHB04iOVPxgTss69Lwvi3PNFC6QEVLDUJVHhAJXDHiRB0zNyfc69SXrvQqBcJTrXLRbGATsNdxOJ8Zyq7ybv62sCEJcmGvAf5VmuIMxj3Y3hGUJvMooLm/aq6RfR/Yt6yegImrF3+BTMp6GKqz+QdEkijfBlvPuE0AVUxagb8Fm/8VZwu4OsVVG/BxxQTHTUsvOd254VVwzBogyDrn8p/FftKINDhrHiE0lKC1Up7qfpJrD7PVB+vZjc4SGxt5N0HdI7TjcIOzWBwVninNATY8Cj8t8yGaZe7alAYOGVCEQIhKGwstAYqQlcKPoM4mTgBQrUSTmLxy8bh0Z2sabzB6OQTTMfF4+OP73gIV3YeZBmMQzwbmG/WQPU7nfL6r5C5oB1K0B4IeDbB0r4vsJXvj+GnPhhulB9tgZ2qxT/pnWAM+4+mJ/3PT9ZgOvllDogOEOU24oP+krvA8YkccPEXDk4TkDig81tGVjnEQKfrrzVY5466Msgx0Iq4gt78dEPVJDo0vgv1lpQMXDJD8OPGZPd5ig1yYtxDEE5SpHiGu3lSZflDzoTi02GDI50nhN0UugcJ1xn5rzrFBJy66VBFxYGPw9pKxV9xuF40LBKtzgc0cpfDfRmcdCwPzhbm1aI+bGKfgIvxASqt8QP0wkgWrPSXs/frZL8tl1ehbyGz4utokGJLAzqpuHFAfWZh8AR1FTP8530tYuYMKdkHa03GnUy+ObV1ihxWn4pO/UE8ZAoAeAPcIuMtF136UffqF036YmQiIeLgEQGUSBwmCbbC0NwZGL08pwynbhQytGEQUis4Iy3F32S2XIgUq2rpRAd76CYlGwSwBPCJKMkFouwRGCR7bYYXokRzoU5j88lidERUgAaQTQDenQXDjwpeG446T7q6k9u/mjU9gpqGS5GMTtntDWyCX2wj3V6HIuxTU+SRec3JR4Dz1WElcQBO518e7SKIEoJteaDbvBZ+dCpfrbRBohfBs/4KCvQoIL+rze2gEKi4fbvo3Xr0QPEQwz9NO0IpNzAxwYpzD6d5cFLrZLEw7GfPcNMFMVu5iF6ZMOV7KOYZXC7KsjHB6OxF/GhsAnD0QXjb73eAkc5cl3hj5C/ycq9FoAipbdhhLgx4f+ekCrcEattnDUuOLBt6wOUnFeMk8QfjjcaKDtewBGm6HIn03L1QAqyD4dgGThVdLhRs+tTJwfcyr3c2rKb4AofAJnHYF81Hv/JNY5d9PX38HZDM8pVUZ0MRnyC9Dv0qoyftW8rT6Sj+x9cm6Zt9iZsO719CIlY0fTQKJFma/GaPmFlSlB1O6E18HQqLa/vMOTT64D07qxG6SIL/67GKIMi91w4BW1s6Q/3igSRgUAGE2eqnHh6x6qI7v8mvhfqBhMDEYPyEQqf8ICiV2p0o6dkpNfqUoD0e0reN2OFLX2ePcnTB1sQJ5pnaMpP5bynVlbg9GCcNT2J6RLtpJR6UpTDLJNI8AVtDlrOl4/DmU18FjMBF7ZtByHJ5+MEDK9Vv8ond63m1jJFPsUh+SGmHWSMDBiotAAmMmWWhd4nYGA5fokXlTH5pCoOy7tVFUP2EvOP4khsDHONb7j3czMUd5FYH7MVOXGzx2v/8IZM8OlBJbKiCBSgy98rGciBk3tB6RCExAwxIOtPIFP/VH8ry3OrIhWABwXJtSbr0J41IggBXyKG0JKWZJDhMnRUX21iENssKWM/QSNQ+p4ePs/fRl5kd0g/T36XCen2h58OfznxH9iyHyn8Jci6ncZO1b5xAhjJnvYDRn03fre+WMKQgLbB3wEebzmHkkZxv54jVDN74b3h0RQV3ITB4xMppT3rEJTYwAfLFj8mYkIKRyDodBRawO94892+3j3Cx1ZWGEZ0d0SHOLmO7sf0U+wRmM10JvND10bekFuSObPbVk4pQGARVcNWqPQ8A4Kyot2cbGhPGnjraP0MO0diGMUMtaq0CT/YlrqumaJDVXaCG4Gt1tC0/KrJR1jNB/O/NoqLEk4nj1kp3dr2PmXXuskwE27oPDjDAn/siPq7gi8ea7Ra+g4ZaZI07z3ynYpU/gTidml3sJXeWZi2K5gUPOt3nMXyaaEQscUO01hWz+yFb9b3t/H0CUhHMO5C4f8uCHuhtOsEP+2ROriUpwTQ9Z68qXyiBmDOk41Fzs1AAPr005l4V6HIfbvuZyhEnGDc6v/Ub0Fi2y2/Uul4dier2X++5BH6A5y+0T/iHPnzzh4P4i92+YqHf94RpSZ5YgNlSevxvYqRU0lvxLoljf7HcgZvBko8SVFiKY09MVWGnanl1flIrulz8oMLiahM4Uv/7O/GNlR3Kq4wu0etcWTmoZnePyAoSvP3dKEmVs/TTHDYgUix96+8kTtKQIeaG6CFiiaYuqw1NCimo1V8eUOArHusj42PL7JjqGGQidLLloLL8ExlYMgWJxX9qauAMwbF+oPhLkQbaqyEx/mJirXDUw/Q2/DGYCk/X6KjWUCLBoPT8YtnDNG5Cpap3diVbogKNYJoqGRMOKsyhJZHa6Mtz3EhmcfmgW9LHZQ9nJvO20On6vwpw4+sLB6rCRM3NGyzS3TZm0Qne/CqATgWgSxIY3MzwzAq7zMWAcG0LnphDIu4SMqzOWZQLV1X+EUpLKX3hagmtXz14XUNdd2BylRoKz/Ku9RT083n5XYG+QOfpZPbHoJpcW+UZJmoq81Nt/bZOaqPBRsvcOWYWHcFS9m3Ly++p5pqnvxuVMEGjQgpqAS6zaTZXBokL9Bf13P7lXgAEir8G5OVVPwKlNiskIYbTZlHLgB13jVTNKJQOZovX3KmpZ0KE8XkIb5bKOIGV5Ctz7W/Hk++KP6fwUWdoMJ/W+/8SGGixubfoRFfqazt23fB5sawOnQG/RU+FpD/ZWKypb4teDtDK2Yz84N75OBdzqSInyYvAaI1bu5Z8JV2BJ5PN6wnL7lVqwvPZpTBmS6+emt7khATpx0dde4IfDgI6quXVKa+5dnVg8jg2ckGxWojHhdC6DWbxXCA8mleC7A/HHbgeFGu8ZHzjiAQr/fue7X/0X2lF7CVP6p48s6uC1dxGkx2jXW44WwiuR8r5PLNJibtC5J6n9+NYkdmyNyt6Jrm+2lCU/jELZOnZqwJEMwYJBS/gnyVVaRPep3K25AsSSa5JJIyT/QdjGea7iqY0N9jQ5xe1BhQnPkB8ECMTMfueLwuggsMK0JsGerUIrS6bWqV0dv8Dr7/+t8itnacKLSl84LQYWXon/o0mFQ4pJvcyD1Dx4UAgQLgLFFWP6EpWnbl1O0ZYqkRnhFNps0buCgKPenunJpr6opk/nXCCfSYQ9BDMvf4BIJ+aXq7ntGi16/ZK1Rz0l06m0dJg+ZvDtQvogdADXPU99j/MpWw9d2fhkwCl/k5rLqRQj5ekT//it57lRYlbtZsAkag6L7Xc6A5PSykTaDX+vwIThDTneq3nvEwaN3Zd+rQCbGQDM096vhNZIKxO4N5qTyfOLvFWPpSSeeYzLOOWet0Yre2BVrYID6fYDozfmSbRlucJ0KbQ6yeN0V6w5DoqieDoBVR+9o5ekaVEZs9acidPC4eAQsZbMkqzprNxAUPqCBAfqMqqQkFm7qXNNxrA8Y9/IOvXScPqDrxuiyEt3NBJwGE1yUN1579p7JldAVH/hcisG89E29KWnmstBLs6W/JhSpjc0L/xQo75iDLYTiUrxdsxmAWDid9w+Bbp06/sYZCawTnohEBfl59cdKN7MUp4xZ0l2Ysurd9fPgL+nyIMe1vuPgx2EvuMOfF8fJ8iX3FzD01qQfPUYCWX04imkzg8/syOkufTKIKUjzUruzTZRQ8A2G3j89TCcfjdmjsleUCK1EQIcN5x7zdSIofjRU+TrEpHDZRK8K2qj/QK7cBVA9vYlCFpJUo+OoXwoWFt5ezWNtUAjNdm73wgUFk0YlHgN5F9JPsc5qgGzSeGYSd0bjzYMp148SwHrsTiFdiuV5lxKnjOJszNuS8aNwZ8qCwC8eplMYV3nM4E3rBCjYGkva6tUS6+m6zgtou1QTjmM3+y6wtzR/NvQYYoIJkx8llV95lfxW4kCbcCDr9YgaERTJ1BdyGjCbAXJqYZ1xnMg7gixJhd16+oc7oTFiEb+VMSMDZf47R25gsuV7ABj3KPjXPJiMUvGVrTN3oyvs1RdHgu1sxD5ckw1ofAcCfxxQIUE9ORtQUauXbueNkFsde+P3Z+1f8PlUHUvPVEqmIhaaTxZg1pUyGQxnjd3Y3b8rO7vQphnOVG2qeALn2p3TnVbFe7mmvSUV5uWWaHeE4umIfSCsGYMD+kqjJseW/7+299q3s7yCgSlSZGSpZbj52Lel3qslYE2/cQeMX0xaVC9tWfXPElT+Zb0BaVZu77xFlIjQ0C+s/x/p9cA/31+Zs4TITRTkcUbvGl585UfaIv69Ztzb4rk8ZkIbQRCFh8EKWZ6Lq2GcvsytxRYPwGS89UE2CHjorZ6Q0YYrkcnKrDfG6bE+uoNfE7/8WCM/a6FeXzDe116wIUv75HwEgq+U4OZCj6USYYUM3Fl1A828ytZLaFyty9+QPnx7a26GGxst7Ur2hTF/UhfnnAMfIvQBzniEltdd6Vba4LKZPPGOzIeYmerZqIiRV5iQlAjcejzaE1aNT0Mna9tjjNi3Yyvtk3bYD8OJjBZpXmGdH02D6a7PRPB5U1ydjqQUBKEOrDSbQzPCkDlerPu3cmVrmWvgLfoKUN8OHDY3S3sxq/FvCRbWQ6snTnodeGM5gSecS9SOylUMKSW9mVqaC/0vMKXHEqmKxTAoiSxQkX93TXcP9q4foYyJWRIqELl20sKEuflzFriJKBddUZqgJMtqbV4YelIWVQddBNOFLSayMZweWAu10uP48Hkj/yCYWXiw7iUIlKumI1nXcSVOtZwW2il2/HpjzSwCfoWx3HwhcnN882prWPzzOARoFsMTndYL7m9txIW3pl56zuuu3n/sF4kZA/i+4IZnbklmz/v9GAvWuqVwFZ2gOfIdmkuiAWIxDPCZvegNYGoXT7oodx5/V7Zwtj4URDUxlCbE/pHordQzMsckTq0fR8F0gwxv+GcijCEBMf92FQGxkOkCPEBHP3vnLkxlKX+NY8x5sw+N4gBM+QzVYPPOE57zElvDWshCkpzLs22jVbGWunjYRbYB7K9Gx9l2j/JW5jBSwAwPDbSN3+Fr4Z22B2eMAqXBCtgvmSuEH8oVyd5LZcRQQRBG5O93M2CQ724Yz30M4shKc2Bv2LG5sgzJxZeFqbacRr0mgQVJpmKgu7wSrsRq7o4NNeGsW5+Qb9voE5s1lRXSCcLCMQ5X8bR38Q1ND//r9Q2flqMU1n6ry4WEydWTa5dDV3ziuKWi3xk9ZJUqgoEhlj4vom4DDI9AAkrfE4oDmNlcs+bo4fJQeLgBGForcH3sA8rnU2CTyRSkNjp31tvfQoMUN3LN9etsJt7HCO7qr1f6eFRmf7N7KB4FPmINMhWEVcyoe9DCBY9La7zRM6KSU+e78kdpSN4HMdZiYFl4NlOQxVO2RzbrJ4b179Kp4/RkRb7R0krUQUQ+nAUkekPR4oJDOPLWODSLzwBIGLuVkv7ibW6i5+DHvNDlRwD+kcWPRf7k+CDZNzHmORdywbERAqs1E727tAYjKlsVw7UkIO4uxAEW/nKk+vRtE6x3h+JswOrYvXlIIWieVUtzcdLw0tP4K38bHv/PV/r4LE0KYtAkMidN+YQKt4B2lafk7MWRwSIejcqgtNawYTXomDtn/S9A5Yp4pd38RHsykgqxH9cowaiEQxZXiFUG7dO8ET8bRIUV7qAO9oMMmng66NRKyUn5FbV1DS1sC2Urxe0KxN2+7yUmH8Rey7wHAW8ENUqfcCo4+ohDiefCbAXrlnxR7KELLl5SMA+H1mJlX6o51I+DMlm4RehliOkx1tILIvGHAZF+cn+OrjPWnq9+o3t0VmEHMEsutVMQ7K1v9DZvAZFBXdN2jKDs3vjekiEW7rr3P9oPAvRrEwCJRYfHmyDxCxdqMcBsm9aluLqGE+pAuXQcFZOsT97JnHN3QoXj7H8o8oKThohw2FrojR0JLfecO4Nk3BUEbz4tsJI6Ld8lk3ZRJgBmNXNQ4RsZAPYAGGX929TS4s2jJINgauBGrYDtz+YGeHX85O2FIJZIe4G83+H/dwlyOsyYT/e1muEnI738/1KfTzkNHetDmqYe20zrcCZTjI0t6jqrutwTr9PNM7UGs/ik6iIFjiGeVlZGK1HvM9G4mBsXOzj92Eglsp+gHXDh2EQnhtQE1a1Uf2bF1q7i3g1NCkZ7b3yqjtfdqV8Vwafu8/It2peN+X1s559m7lDJZ+wax1S5e+fFImmykfxYtHQyk1jJvICU0jvdJ/mx4ZW30zjLGnXT44/9jDNvsyswiAsZqRmw0Ir/zW+qFs0Z3uWapiE22bzCym3oMKGfA1aeSEw9BiYul6g/1vFC4UZ7C4cHcPi450IcXTURE307pMmxtcEa4ExFWCyP2SPC7HhLw+stI2wU29Mi+TkIJO0nuJhT4NnT0bUaTzT5qbf3VUdMMXSQhGIVSOb1HzGaNjBxY/quNNTxepzyP4IE9lVE1ps+pG+Fej8ehOqE7Hfzh2b89n8OAdWYzJOY9WIUlG3MvwaEMgIcrG97xvHDspQFLKkUevIufFCtwkCBe89gQ/SG7DDHyZJIOHFJMfd/qfx8hXhoJPX2d1K16rPATtrhmsT1b8d2G88ru8zPKLYDLbK+zcT3tiZH8YHSD7tZHvq/DEDVD41/5xCuL5Wv4k8uOA6p6WoIIVYQVlorfU2M0kkr5tzE2220UA7uRa1KHT8Ph5rfsN4DQ7S1kOAt80SWvlefFVU0hGLMYG3bDy6XUatPrCUZu+/ZdLyO96qlSuBDt2XThMlXh+0yDIyiMtZkhNTQL9i/oLXudpNQ6UUceXtjuB9RW2EKLK5CQM53SZGJdCCYJne4lOMjqzXJ0gy37VTo/TLGyUCb4uWt6NvLp4NESrXa47k7b1AtnMDW+J4EqfxnCsq5cXotmMynJO7PCGUsChlA9tdkPcgGYc2oRi+qgxJbDZuQxGsnkqFs4+UeVNWtLSxG2tOnBzx+RB/HxXjuL1YIVmK1S4tTmR2Dcqn2rgrVjwNZkg32b8Rr+ZX9RBpVgDz0Xwu9PAh1VvyIhzTlSxLeVUCJ69W2AlbiyjHVaV7oG6r8ttW5GHx/8i98lDt7CSUnz78zPI7cYx9MB29sxavUi7JUQZmjriNW/CS59zfA4YqjfTwyIM6QMS74lQxCeEzQgnvIMtLe0M72HelxkSaWYK/x6o64wpdgwEldYBTd7SyApuqdPgwJSodwLTF6J+Gvm/88MDwFqLyogCANL8bAiY5TtJgpqEA0cTY/LY+TQXv6HsLVlEt3MWtiydr192ul9cnvl2MeDeROJgpsVbbnLjXdYjvSTrWYCBTCD4ciDS2jOLTWVs6FI0Xiaes/DqbvqL4ryGhdg+NHkeSJkCHwq9gYOzAvk1FH83rW1d+Vixxl4q8wy4Mo1bSFzfg03+V7+vuHEQk2ggkrUsIVpRxmJGv85ivPcQg/xeKYqwVECdNQ5bb/f+3wElidAXUO4/Ivq62YxpiYGujamV2Dxgz74CyhAWgZx1C4r4E226N4yHLsqiWXlmbddTAiHsKvSG7MmPrudHzv1audOKAk/caWxVvkvDMOvn5H/yCCT0lr+H4G3PNY/l0CdFK4P0VkxAx1zMZZvVxA5PQBslTUzoGAaOifEtR7XTV/BmYa1LOmXB9I1aVSbmnhGpdQy69KOmUYUWnsNwEQHZ2AIYkCTMr21mmGHhAV+5dr88uXx1YoVX5ycmKY4wD6QU/yWM7AnqhtTPT90aG1LbUyXzzOF9x+fSE0hxjxhz4kZ4c6b7TwC+y60JGmrrHpt/+vXm7MG1a3dr2yg8f0rxS/iLUzme283iRKF7NTrRkXp1KUV8UFuu5Fpi+oRGAzAIdqoSLNrg7KpGbcpst7sUQlwJ5jqTz+7OYWG53vAF0R7gYcil2plHb3XPvaSnruFBvwpfS0FkIKsICflhGBZsyg/m9nA/7p3t7uofHFxuLKLwXYvgmn9hRzv4mumFJVBD3Z5cjTsD1tFh3gSuci2jIpm5s7TUUYToJ3XeiDRHrrS3Fn77tzq6kqTZhJR9MrjC+ZNuE6V/NSMOSly84T95SKyat9KzKCKezg6xijWmba5XdQGzKTTvjGMIrbJBEHehTPTDAOCpcD2rDu1DA5IwyYfpw74QfozMYaHaTL9dgtX62s2y8HemQDLIMI2giPUz5g4eUogRM5WaEfR3jOPkVKK6hpKdN2BQ3b0QvJcVopIzOfmgWVXTLT65NwrdDd90tkak9brbrXZe3cPrZSJdrtB1BUc56stj6NotfCDEEZZqk62JVHjs+J+IEt/N+caShpSWgyPk1Pi1GokSet+HnWzVv7aCRord8k9Ca6KhJyogfkgjaCsxuMlBfbMWl7i4PWi937XJj0zRljPVPj4QB+rhiyzbsGCmpHN8V2KnX3rZEmu2AM4/PLxoqzkljx+jcWTF/AIa3e3srIq/FMn3R5+YSAdkWHhPS9CPZeReEFtV0S6hlGS3B2fsaC41bfsojAciLrG2nUiKM7HEOyAPbUJLQjejsvEVJ5Pfuynm2MxuwvZ2vChmBHef3UwqIm/176k5DVhViRW6WCBdh79sby8k/onBvf9aAuE0FjuB5imLej3jMgoUqEzWZMnBZHmn/PuyRMKrQ851edUR7d2zLZ+gNafVkGOMRUoRd4Pcx3ZD/uhzqcIuajExwhFdV3dDaDzxgJCMLDaIlEI5OzV6eUeXB21vfOUCg8ggSYID8aIZ7aiiVIUk9CdfCondlLG9mCj8kvxoL7faUs1y5TN+moTpYvW8DAVkHup4HmEdk9V/tavWA50nTKisdkGrxRti+h3pGIFh1nXWMiNqpwWUlEQNg3DfYiRmrj2oATYitueuKeQ2mhIxCb6oj7a/tzjAD4uSMjeGpf5wdYjauyw4giT0CjWdiHhmY13L9gkzz9wsnSvNRVkshTdPDbUp38fC9QwrsX5GZyjGsPxDQR0E0qldgTik49IMOYFci5EvdYj+wizPhCMMjulE2zhd78Ck0Q8c4y7/GhRi57+sD210vwywlsUMqWnAh+aMNxSrfDKLZViI2JAnwyelID2QsYJApqQhc2UotM142VAboToHr6+lvM4EGgUHw7tb61EieqyVrGDYuQarD4+r6IMtvaY+aY5fBOw5jK25BitoFZE2fpwUYXFf0dfCdPj6Saoty9jfPQhh4OdFcbl5UQDayAMUYrLSRWddd3r+z1CD2K1YcYxjcdXpI0DWnByKJqkaEs6vNUa2p72ss1YwKCVpuMO4KaKwz+K9ERgF2dIfySXQzrePjmCACmcNHa2GHlnUvAulGSVyS4v72CpJijAO7aFWQRNudtSENdBy0SwpT3dwHN0pbEfM0dy/lFgp2idfDfrNNR8MUe/KioIxF10wyST+ONTId3SsP4ga6YNHDJhxNV8SOKJROfNUmx1n2pqMKoTYqgyoM2yvIl7pAuGY/b9nTfKEyGCIa7XteAr2iNLYRilDI/sx0Gjlw6DfM9TiUyiHSyB1F11mbydMnNOCL34E/eVRlQ7r6pRhqeFpIUoQR5U5gbEnYZaMB1I6sCuGbvTeBB6V5I4tzx2BOce2WwoKn4P4vGUmSuGLymWzsJCp1Tf10xBuy2nbK0fwUq74YBPJZzBGv7qjB3i3POwuVkoTWsenyl9NyT8K1tcbbL+JmS/BHIxK5tRoDQRPwBYeaIBleM8INJz5vWPrCu38cFglrAcdeitBlrysK/ULa5IZ3SYmG9IfZQgAlzVvoyo8QcgZeGPcOcHa3kwwR1fWqYm8xF1dOYjnorppu/ig5Vb8hKA/NSpL2t964n52gv98Bi2rYWmjRBh7myvNgR+FS6v0olF+02qypX2IZTvqdQLTlVdwMYBVq8JkJxT0W8uj+RFCiqjNibHb4EWxFgQo9Rss1b50JZlqrw/x3lO6kFYxn0ZpbzIGOt/3n44NmeN3vmAklKP2OxRRbS5zwHMohwK6rpsir3edFMokHJArCV+7/X8JO5Hk+0CnPPtPGx+2vmIjULaYdh+h9n/2fBG6Y+1sf/e/H/mGR91OihwAZ3Ci32WmuVWi+Aed+cSOKY2N0GmuimShWFS13d4xnHP2XUFjmaZLByUxwsFEtxztyaVBYBYQxH330fhJlnvAZoQ850fTkQNla1cEl2hf4oCNcyXrtHrHUlwejjrOW3D8l4xRAx4qO5TIkxFHLmI/xl6oill8zIfa5pJumlcfgVT38ewDbugUPpXnJ7aT3ocZB3rzJFNsMMY3xrfXT/lnoNQ2ZaOL6/YzDPjzBi0b/g/M5X3T5WJt+H7tW3buOMIXm3R7MGf/20GcYBzCQC24PcE9aZDKSR7fazQ7pPliUh6qTmjNsbNdGIrD4RTsyYDrOsXd+BmubL5Pzs36PoXVZuLsBtrVV1WU/AcsiZwoBHSMBMwhC+4OrP2aVdki5D7+gL71dKA5iZ4ZQMg925i7mhJ5VxeA5Wk0a3511yAvMI8p5i/zHIijKu4gdLd1ssB5HVA9U36tEYClo2WP331qPtmCIs1S2OdHuSi7MFxuVVK0b8Ep8CEXDGvf3suHXfJeKimr9iyxa5gsW8XLXXTMHHgJRxY68V2x6N4wLAJzM0UWb57/eQcQ/SA/PTfhycs66QgfxB/uEg2zdUFHxKFKN6XMTZDY697jbUDraWtBpLxpHLt8kpRUxgvtGc/i3Tgusi7+o7TcgHOgMPmdjn2mcoOY6/pmxGfYRC48A9ij/FBPD/Na1PbSfL+Eryn8QGpHRsEr/gD1qJFBPGteOJMIxdCW+yaBFse4T4fFWqipMlEcmNi9/kdlts1OiDwaPA49Od0sCbvkd0Qtrg4FSR149OT4CSqaBtQ4z72cKeifIfjUKpIoRA1X0vHdlbMlXsPyvlYHh3jhkNqru94sphaVYt2PSHM8JvLV2lTdUdjjyY90ByQSVZI61H1GV6jzCA7k5TaFmK71lNv9z4A3umFo59aqRhmiygRh1HsrXpVfkUC5Iv77lJjPW9Rq1yGqrTmbN2j5Fw8MqITZvPhIgPH80CHn50F9+z9p86VytBBa15gQ55CK7xKDS5sC6iUP6sYhHOllyvKG3T5MAuwELQNAQh6gA/acbwFwQVuzJkWuExEnZC97wsEG45kUC9kHJDsbndecPcXlCEW9l3DIN7fGocb8oLTsCW6rClbomenlRdQhlv5XxA8IevC+dGJn3zFb5o+D99xoduMgEiXsMS5os4B0nvWDFVX57GiP5AXlOopheEVwjhq3mSZL8096IBjl7Z8qoWo1vtyJVPHgvYKnCByBpRKRUtifS/lEQK0Jfxh0MtglZ92y7V968CqowSQBdfrDOZPH89zNsqub72EpwvsGIFzX6iR1UnedOUoxGW2svOqhhlb2YTq4k42N93ontkPydrWrGTTSXcdG4z7S5Z9EKlgwTTRCxJdCESqxyFtiuPBLjWz+jgtMtAezM95VZmAlVmD761pZ86wME+q8BQBJBcjV/O+taWe4e2KufySMAPjEVVnAkDhgw9iBeBhdfvDeC2sJLfleYs927UV6SpuAxUVvHfNOORKtF45Ic7C0iRwGKNQs6HuLHNCPY64T7v00RbrH9I6+c/Ngmr9bBZf/+Qp4FTTxtgjD+SjuWiEkm9uPe6GnejXej9dyOykiQmsV6TpfwK1hpILW/BqnPamOeORvW0NhPKTNfr876xoj2y/lkzjLTHlIxyuuta5U61Y1VayE6ToM1R0cG73tRJCl40zBUt2i2l8Ocfa9RvP89DK7iAzOi4Ol4AaCQHztgeghseaozDmyqRPVq2BLBfy1wXnTw6WPTbw6XtPB8UIv8v011LYSx5WUh9+c22d0WELb/prv5Wi/uoc9ui2RJ/s400u6hzHr9DijeMah+k2cBg+sIJVjv03UtUv9y11Lwy3wlv0b/IVdVTWT1any9ohJ4aevVGwN436ds+vsamve/i36a9L1Opc1UeV0une7QPkjS692u3Z+u2Tlc8tU28asoVTk+HOoevLOSI2V4MYN/O768SiNiW99w7uj+OK5MIjpBaEIDpxvK4QG8Itt0oHZe4s9VDl6/BbN/jzGj+rju2sjMLRNxjAr45Nfn+ca+wKdUAT+SptnjBDa0thJtWNmw2pNl2fI+R95hGZhLFDeeezZ0yTD9oghB+/wlSem5bEvr8eql9OVzMX4LlDsYaLzcoFC3yycZRT9oawJhaP6N3Ngzs6OAERON+FpXzELnbIH2Z+xHKqCS6BIbDPBHL3JMhdBcMX6BI42wY067tf/xc2y7gagkuI2KJvqCPv5gtdezr/NnoBdEPW/MdqfXMA6v+xkKYin2S1v8TJtiG5wrTuuoviISjd0f/ai49/ALupO6zQsFipAykU1XJAylHXvQhdxQ7W4YSBNqdaFTBn5ZGkZ4k+5Ln2OJnMKZOX5Lg6u8VJMkPmq+BioHWKecrB01ikDU+rgs+LEUakvRRuXpsjkTZHuHSDsRat65XBQin0ss4enXztEF/CmOQZAs9U6v6+jB2sc5ThTIgp+DBLPIDE2oxgmBeUSZZLzEYGbHFHFgg3/wiqRr88ONI1OR3fBfTE8B+QvwXbBZ9SZlJze4KHuH7cRcKuMBtx8DtqhHHxUdXGo613Xko4j/toJpduHGBGLbFwV6XcZ19ezo1T4neyHV+/qn728U8fqaF8oA90iJ+BRh0yYSgBimgULNgIEq/IF7QP/MHlmT+gY0tPz99SVbLM7kSbH9a/K0GkI8D91o7W1pRGLN/TEaFKUETgriGo0hbu6sYqRK18/eKkzc/Yf5rJHtM6xWZzmEQ4Ce6rLhfUHyhic3OfyOD73MuqWKellJPDu5LNOWb+Wa0+dvUJk37muGpl5pBG8cBTMFTxKxc00FGlCW1FiuH5/2P2KIWh/DZQ7ing1NMbENAxXXEZDIO+1TDjzx95p/Hx40G6UF6Tcns/wOQceihohdnni60AY68RnCdnd/UrDXPOEV01OVepFDPgvVE3eRykflTVkAMFppF5+cObr+TzAPbmQoFOfxW90kfq+INKzPObh1/Umkx3X8AqWf5WiBcx9z3LAffe9edawp5g3Oed2HciBgju8JqEtfyYnsKtgXEQNDSMr8G3rbTLiYDbk5PKzc/4sl/QxB2guYAlBUf3dk/+/8xmQHwEbttcOIy0q8WZtL08sFIHlm7FX6NV8IX/BRY6JKt7qIfu9yPY8H1bENBOtAbg1bBzlThwpxfnIYRNYHO3ZhMcNmwRAfmK41HXtfJFxQb1g9g8aOSoWMyu3RUiRrU/8murRQtWZZmhc+qHYuxzZ97jqQP85h8WrDHotHBeOEumHHBf8JJqYik2xUD7fo6tIQTH8eOy+FC6B//ljSX7hArJMZiq5gGX2j3Z8r3khXLYrJSm3+RGke79QGTz5YCtwlowYs7yFDPai10CG6SWjPFy+D9lbDNkcbj2IY7ooXIYADtAvKF3rTx1WJ9x9dMOZ2R7JuGSgFw550vRyycHmIlmGwsbGAa2XH7ZCEGpckZexBKQ1DcbucHHGsQjCMRaMckoBrzSoh/XpqFJwqxdvbrS9RXiH5QoXOrb1T5bowBqaO+Rc+NNIlaohS4W75JVqmXl913iwBfQfpx2J4fNr30cuZvZZGnT8NyVBsjldVIt8wgBbkzs3U8S+8zQmRAk0jTU2uHPAJnE2yaiozCe1HmRXWgPVNJPGsyLjAt9jSNUT9T16mIan7Lyg8SIQBeUYpfU/UX3DmRRyy2/ZSTDhjilH5ETADvzUBhSd7o9N+/9L9MUaJ/AGUvH4rK9C15P4lk8u3MT3lxlwjA5OuDCr+0b50uyAGGb1U03Ezb1kcHUhgPVN+bduOYfvPrgzKjbrxiLAtom3qdGy2skWpWbNeFc0ZLKsFcod3GyvSE/qR6mwAcFbqUl5+T3kwhes86EXsR9odry3aUKVehFct4U8BfNB7IpzAKl/OJdy8msa9yTpwADlr6LPRV4gFpJJEwOXx9xqNtFqc3iZzUPcN9ThVqvBQXfSP3YBJUpx3Gnpk6akd2Pf9rRM4ViL1DEBdFgZ6fKL9rnBUBFlGr11uXS4nEg65YA0v6x2MX5G01nGc6Q79iKqzdSNm+TAg37QOE5FwYP5cZBT3sZlF0RMilkyKQKVXyex79ovbBrg+aaYjX+tdy0501RQ6r5Qsn7PDaVz/LZlmp3wAJYFRhkDrO+rGzokrt1QJaKMsSPThotF/IzQ7TfPeFAr/s18KhqggkrJnRcCmOoeNj5SAc6YcE5aXWTTk6ptDu1IcBZBYgI5NH+EuE6wRsJkzKss8ellExRHoNW2P+6SUa1bpW4BUnSzcGwwF8z2vVvYtBPY9V26nMwlqfVv7W9s5FKUlt/UaBetsCYE4BejSnm8wGjcvfIEaLoY1zIlpBT8JM2DN4J+/ZPihhDyeZh6/VO53GnwyoQJzlsb+aM3iQbTgoz0Y9Ao4lx7cyx3uKVH/UdIMOt5VA4oFvZfz758i6P5EmAJesrjd75iyghWIsnjzkmO2sCEQC4rSC5R63hNoXP0PGFUwnYSNBA+50LNY04PlkfmxRj+7BH42ulrRdNDxqK6LjLe0i2BtzM3GInTdVV/nADPwbJnN3NdeNgxtgnpu+k8lMrLPnG7e8y8LillEmdTTeuJVxC5rOGACtH1cuFTdj1j+e2l0Eza/NV6KNkjs2b2cAVcLq9sjNRWFhUca1ZFC2uju6s7FH7OTUh2yJWWAEfU4/wYBoQ5hmKY5DMNKgbVsjPGlXq5Z9tmZAUScxnmHVxFSfpJXkghihrLAJmgHxut3k/8SsW5EvyjUyBDSZSOdJiSX+WoMG7Apgv/SoPKJUwO8w61H0G7uDcj1aKsQfYmItvz6rqph3o5UOTimN6vZHuktRa7bw3h+fw2bu3TqhCi4OqIkWrKpmkTtgLcUhF2bVNWqiu/d+UVcz7C6Ul5HwGT5iVcVZCzqSItFSXymPljdtsVgEoV49H3yhDelj0jVAeV0kf7zvEaHMH4j4ay9/ewNx8hnYveHTrjM35tA4+jneuewpR4LxhhCTRr+qH4NUJuISdr16LmXt6IUTOaqFZmSa9dVAR6BhHjvouwC5B9Kf2z3zVZzBhOvN9oVHWPbciahxKv3ZKiqc+gxemu3JAX2bEfYmrev3jc9w6EljV0FIIuVAttCBQWkbehSWnu48s/c6NK6B5a4/6D3fQhF222FArNFuHSC+DEBOIISAlp3yNS3SKLD9nCaAPUl54jV3ErI1tq/mUdphqFyxblaKWKHOztkfRbBQrklcF4rG2WO2WUsjmqda+1qjbJrweCuNu2LD+0vVtRWuN5cpOAB7nj4lSthG+2se2Ceknvu7lE9l4GB2iY2WRJ5TbyUOc8WmQb0Yhsyn5elMZhwCP8mG5bS0Wv7NZf5/4rVj3xTAvYMKhyKDe+TGZLH3TnbrO1XMVTnMpQN1LbH73vgUQLPICVLszg9iqLqpPC7mqskB+6QmtGrPx6tZwnWYKrrJxdLoi2KyBV60soHRTE7/22CVyM7peZJ8LTExl2VVvh9wpojAmPPxLrQTQ/lrh+uUYxziLwapyhpBf4ZWNn5rg+tWpIpy2FpKXs5w/+xDluekPyYNJOZcER9A8NZIEXp0c+n76L2Ov+lSpBquQzsuCdcsKhaKgpIRMFQLrzBo/IecmdCJATe9IUWriUUA+dfiP7ekozrO9ieIXKhdRYREZYUOi08kV3RAUO8lfS9e3vzr8yt9U9OGCsZqYAK+UKU3MalFu4ec16KskYscGrb5vYUO/l0CWXX7ZAxkHyrVlZMTkVv4x5SL+3LK58Np5AYfPXdYCWd9HpiAxqpE9OknyyZStdKDgbuz/dZwfvOoZacoHg9lq8gnUi6C1iZeKmUPSK5KqKaKBebAki01a4thQp0vl2RtyX7oOFuWlgwsb4HJ7cvW9IpKTZVK2iWMJbYbh4dc2TvCT+kQUCHimNaHPzcfb553Tiqlmm9obBMr3qf2nvAFN3fxliSvjm5pxHSacxvNvU3RxhholsVWZ9hgzjznDdKUXCwEDYEJ44/QVrZ9WCVOanL/FA8vj0oApHnLKNTQbv7Y8x/EFalOqpEg1oobZyVAsr+wxXpH9aQm4LJiLeXwApkmVL+AYpFyQ3xFRJltxLzd0Wb8RDp16sHwQ57/c8L1dmbOShtyqlzZNncZkyhVyI7mPNB2X80wOd3G/WoduI0Py5ynifUxod8gVRgitc5FHApO0XzPCRuesut3Tw0tzAEFiVpFmx9oaAWNkKdtL9LBngy8wo8G+2xS8c7+elSMdnpXqoGG8+hd+2GvPRzhZLWhvpiovcdVc3O74K9pBrYroF6fVGLyqm9yl23gKwHrSal7ZVsSWJ8ZyFo9jhSvRJNuOBQv2zgpinn4453RI//dqgNYmM4Q08WdLpU1wTRokRHzjOfAljNcJ++wj62I9+12LRFUdD1kZu5Bsb/Pxq8J8vlzG9A+rUEttSIov2Ne4FxQEXaVUQH58nz/4UR+2rVQa/B4wk5MUOU7JoZvH4gX1/ROFpYMx1iBf2ZqgHdbzxvSEivwXCyohHcLr0ffYj3TB2OSl9WiFgRFIwWCS2m+/TfZZj9tZUizOFPFeu8snotEs6nzqF6DueMnFvLtpCJdlsMWLGfqU6W7//K3ah/koY1COOGtdeSX9yywrqFNHbcqctXvYUBrGrVpTrHWgtvsHKr9OBbS6nSYu0t7xpTn0vCttI4H/wxlz/XxyVVf5Wim4tHEtKR/7Y1XX1wCJte1PsxJ5eLovYpnR59JBgbpUzz228Se0jmvqOGxJf2aVxfgEYCwQ5fVQBwVOR2g84mMjqm9p+MXIo3D7IKHQHC2mAHaX9UT0tk4KMWZAYHxIrt2knjvg0aHxnFAUFHbe5WU0w0b5knJkHVgUg01e4pCd2U8uB//aPJdM3+/q+RSSkvdjChQdU3kmDjbscGt+fRrmQnSEKfg6GfldYWLbhLshYsWLMo9EqdViiKpM5I1ceU06KzuPP3S0HqoVPNHQVwrPmfRD+LKr2CFRkejbQNaEyYbNqDzbuLckiobsvCBBaqWOq8L7AcSCghPrE7g3R3OPuKEgY5jF4nYeqWQlhgRGw1JODX6irBeHjlN0BKOQWkeLTaHKwGFfgCMDDWMAIjfFFR8il1ArwZTl4yJMspz50XpiNLvVSLggpZEXa6ef0xjXa4CuOnd4EeuS/R9qZMBCyqryxo8t0dac4KLKCfhuHDPHTVNy120emvX1Wy+DdTRTOjqeNzNUWfJqNaJFdQRmQoJF5Ms6mwPXDhziuoJQDvrqyj8PMHi4ug/IxfINUUPjTY8WkwbzObdLYTewBY0m2zbVTkuPtPDsj14L8ehtwortctDFYYSlnRHOlJrjUuTSpbWVDx6Wl43pFDr2w/Y0Vr5fNpqTOcRZxJA+CsrJAmzu8sJk29L8++UvaQZJTnreAPht2x0tyN2VzPjqzptjgLTya6YVtlqfNkaIK1tS8JxxTy1u9bxo4in9tf1TRtf0VazRtfsseCEQitPtp75Zes7PA3WWGIyJKTNj0QnrpP8IYophf2sAIy3OQ2OQyzK73P6x+il5TGiTmDdHmA3yg4J3oY0/7vUPGF1Fw/Eq2326bb23cLYaR4fMyqdJf0CSopmFNTzZ5tQ6/BeToGLzYO4YjMGv6z1WA3zrVJwfEiD4afwejby0AVSYD1Tblysyy2A8kVvo/KdkpomiLcabK+MBdVsKwThdgtvYzKff7u/TfBR+z5okVDbOchY1vs0zdDc51mVB8rE5mq3upY1x5JFdyyThbAhcrDzRcOWZxI8gkzIYYCCn50CNMOz6PGM+WJ4QFePDmvvBAYDEH4vwXv/3b21MHnRxZuirFrYrgjtqT0bK0eYg1ZelBSvmQ4lOntorYApRRn3mUFdpwIibwlD174bhmxh8xZbTVVe6cxULWiqazYLP7/QPAh5+waxMEbWaevSmodVojAUEyu8gN9wqptg4B9jy8NPAo9Q2ypfQcpOshjrZoTz4HQkaCXjONhOH4q7eZguwKquS+uUTz5rUy7kzFftIuN16C8RrZJhFei4r9bmmFwIOglDosSZ3XKcj37CdmBUqn75RCgpyfJpZaAZi9bvt95f3hMETleTp2F6aKEUQa+ndQSBMTXWOKF5/VGEVWZUEP7jqs7jhv2je62cJCYFSNw9Y00UcMaK1JUG+Y0iMiSiLK42vJpH9ytfJifHCj3/qqJk6TghxCHui+OHpOrfP5LONw2yf7G6m7LbJ+nc5q/T9TadcVHejMjMsv6XaeTMiYdUZzLAZ5ur3y0/HhHXNapsGZCKxeMvBbpbqWhE+iGsUXNZkqtW4deESIul8k9CPu1F0U+3w3FZ9bV+dejNmWEaxIqZfFpY7S6BIXszUJQVkN5W4uvE21yfso0WEJYFzKOcIxOGjoC8+Md0Of3QQi3fwarShRtQxCxKuGqE7DJQWAHS/qHdWHU0qg46dF4gxMA2kLFMNfJt5ALBEg51Ola9zaHJ48jwxrtfgQdUnnAEqAi2NbIf6r473nCgqzq7SHVYogzETM7wB2pyUXmxBZNz8PNoE+/Yo8rwMKHhfvfVlIeTv+qy6oopA5Fc4cb6PfRYP/ESLFvYvZrDrnSX0wgJNew0ioKbT6bRnCISK0Uo8ZmHLvaPVoRC/njVFuK5XYsXvcuNPGqrgui+S7lLfQ308ivnYtwHrbPLD4TVsxktsgoBiu7dIUTW8a+h9LuBi5TGB09OSfEv9m0aRHPwapdz+gUU37fK+X+H1OB6mpnsAjvpfIbg11Bmu4IsRG4bh9vM2j5xWa8cDQSAVSTmZyo7EpkBr2Q6UcjsVkEWbQX3W/9PY4dI4f/owfmD55xw5yDqktCwIuHkTntjHk+niiupQjhA/sofXOMgkVzOaiy1y4GRZjxjICJFExpsjg77nUzISPE+eUA0/Fs98B4YAL/YehP+HWOtQRKhL4zUwn+sHC+KTi1oRgXxqwk/NMlTPJfZGgRciheuLLXP280KWiAv9Xxsy9eTe235qhPughqXhqGes8R0GwuKnY+OaEePVYv444LGwnnLEU8em/1k+3go+IZk+dHgTQnIE8SDCbiMzzccZYwFf1gZs9aESy0UTDawaid6guMhbJVy9vehBg+khFDjs4c5sKcrVP5yeFMnUDH6ibAcY+ZCKxEIrpjtdP2YkJ/ne/jBSD2XkQWUc2lnV17hXZoDqxrwS480B3z2w0iPI9UCNh8wrvRPBZV1VyNBvcdsfshRT/TmpqdjZlFxIXbaT4Bv5GkolDlVejWFXqw5YHbhf5WeHXfgMHdbgZmXbMktzzXmNiLYYB9Z7p6AqI7107F1X+CNQL51Dfc2EKhtSky/AlrN71o93Zfjcl+4nn0xNoqE1sJMpc7gQmrh1J0oBYDaOEGsHA6qjnuYazf6i0zxnEiE3VcxYUshECHlYS7mgTTneuYmwPiJMKOfIbmQOT8Zsqb+4ptLCyQ+0W8jOW8hFMxsumsuY7EJQmY5UY8wlLTJtcn/O4OqIcD/FberVK/dBE6N9tNrypvwbmKPN2bXLNfgVbo60cTqLUx6U1UyI47AcSJ8QXVEkDhckOnYeiGdEPyMWBEYVpHrtPx7Gt+InMTyWZ83bPzCewmuGVgNNPpOAR1wgaBKFvvkW5qzDlDVSUFUufHgIZdU34h7hKXSqu7d7pZX6H3FcmvoYXKOBNtNKMYs5HhPbXKw+FOeR2DSp30yisGm2R1mkWQ8IJudBW9b/b1BoMasCV2K5TKt5bO9uvvkGqkyO1EVVSNsaHhT/HDTfHsHWWJJSvA3QbaavHo26ghgufNcnLBS8vSpnAi8fGu7MN8PgBKJNLNzGik0KRxBEqqkW0OHF9puVY0BUkup3VGi0KqET+o9VMSu+WbHU68P8xfSwkLyQn85mem1dPTFAfAi1WdaI20o2AxwHDdRoWzavjvVVVT4f+CsMspM+NTSDTlHhMycn9IMUwMU/p49KlkrLSEIDQbsdTZmguxhrtXYLCtf7fO8fTTmURa4udb1Ev+ri4fNMQuKqsP9RsjLNVrklt6p4ceStMJq1zAhoOBeh+RxEY7QipDYjCWgEsBDFyBjPG0sEVQm27zggyaodN0DnpUFwSH7U2kSIGGWCSV0gs6reNBJ2NGTTINW8CY7VHoc2Vc+cQl3SvX3EfdM5hVuYnar0dYD6wl3Cp9GOUSYtMOaSOGyHTvKIcKlusmO5e4qIolby+VZ9+gukNRIaxcEWnk+1RoMSf0+paQzTndVCr1U1Z5eFoXxAEtKKv9mJ7HfRoMgjVEI0Y+jvO6hFGTaoJdPLeiTL659TD9kRsDtH1DrHW+UJRsFmpwu0eThjDiCQ1gFoRphPCrkjonecMiYJeGz9WIknBCHu6hAm6PHxoA5RJ9QnFxBZHdxo0sCpoBAIijXcawsaHUSSGwa3z5Ep7XwkSAYJTi6rpyOeVS4FFkQQ/4IEdXCPf7hjuttymc97fLMuyQ3XoSbyNM7V4Jpukwkx/HsIaQ1Z+VLgpMgx5S1pRcxYD3Q5JNX8tdoUeXqXIZ7vgfEQf7CPETEgvfOX1qIyiHtAClZZqKfW41R02f7hJRB017Rd5/KDQ8vYWiP60GGkmrC28cl9H3Ebi2+iTMbwnnFK7KRCMW1CR1XM0Gf3llay9wpohnvg6X7Uy4mVMSoM//rBGEnecCJs80UMzVtP1QB4ExmVrjkwXq4WNYqPZ4Sw0rwK03TJUOo9ysNYDZxlAChspH4tlXO8gmGVNMr1cVgYnvCs264LrO4if9m5/aK6QCugXabt48WEyRvWFjLOgVUvFCh4osB2MuUolhEzy4AU57oKC+4MUOFovLrwZiUL9JFViTGohQ5MTuGzyThVc3FWEN0yrguJD4J122sSwkpCC/GyWt+/rMhQ1bWhcCSdFgOfJJr5i6EtLLcQ/Grz+RzpukXm4Nz2skzeqHIQ2fJhNh1v+zjLBDr1ZRrFnbWhLaL28GcZ6qPiVW7p/WKCz0E8xhVt2BKORDRacw/sZm00pSWNMNWHj19jJlMy1jVzA/q2NOokHDuA8taq0rC90/NlgdPzaLMcwbFFVQwt7FkMirTr9IQSJPrl2CRV9aX1r9+zrOIlUUd28hhzKw+zryocggi5e0YSVX52FPKD5NiMWV5kjDW2azC9DOpu7WpYG1AB5bJIoCz7RM3aNU+qTlkhPyY0LWnD2ZhiGOkcxozyga6zHSJSpLFpsILYQaYKyjRzn4ag8VAteGOh1B47Tutec804I993u1LGcvEsE+vnoxAmbTsdQGCXx1R/4JG0ymTgYXEt/CCFioOCQNzg6SOVMx3ZEso4o3bdomGXbnJh1fepNz4PPb4ju/w9iRRjg7X6DNlfW8ufI6FT8lQ6wQdXoPJYqGtRb7FwaQsxLCWMjNC8Et39R/rcyDAsY7E+18ilJQfXzim/MoVqEzxbkoq5BKP9QG8Mc/0gnBlBlRS9nFplvIA5qIW8vPAm0+GWZHFzsSjSOSpGErQO365HauWY1tH5x8pTwMZioavqelCaoc5rSdxBeiG73de18hU3FQLgrI3lH5ok9b7g6W4hRJb6K2e4n6d6N5ihcm3YpNhvNI//b+f90WQ4nIqTpBQnpT39KlNBzyWy7lVjklcVoS/3vLbx6jO7EoL+JFSiXzMgs3KEVsf/At/ekdtzkifAFCC95WwWQa/OTbpzUk7I2m90uVZ7hiQOZCMkPvT6Idj1fb4BOa2PIsVmxfrhKEwYGgwYTr+tx+M1bFXV2AGQeE9jx0QO8CgDAOlwGgl97I2pj4aEf66slnLNxusHGX4RzkpoI9gdFDRo34zbn6NzsvNk51fNL0qHWjuTJLrH3CyERUICBqNSZf1/Y9tSJHY1A11+50q1mAj047YpYyVyho8kFadK8qzcBqNEoPrz+KBNFtlQCopLB2LQsI3z9Zki6JGNJL3dBInSw5xA9hX72cDhvVz116tE9cSTqeIcT3hCFlEaUWPvpTW15N38phZ+6ETZVW1/8d2x7COjQFs4l2bsaj8W1YEVkcW+QzRh4vo+nYvVptds/lIenjBTITEs6sqyelERN1duYiZQq40VsynVbV1mTzC/rnTr9nwDoOtbxcuNMRUTICTMzsbGOgF8M4MDjgMEBzvGN/wsBODXQ42j7H2bP/2a229f6t5qnOiXzPBstRkRTXVyLpD3edAjY5qN6fF2gCQ3K6q8PUEU6LbMT7GCDL1DY0erwTzXGASah9DYP2x2vjSd0v06YcI46p2UJFJO0HCOJavvAzu8nZ7toUKRdbychzEyspXhoaIXjokYSZfUr9ccen+meiHwiHJ40c4xx7x1X4/kVZURINyA7OiRRigp37YWOWXZfT7pH+s3SwRaT2HaLuVUz19HPRTpHhWNohsYRchOfBb0H5tYcJdiOwT8QA5/0+RVUmM2AP34W195TdZf94FAkLXjWZWGr2v/Dz//nZVJHlxnFBkVIE+cHSQAyyTBlM4Wx3PCFzQVwTitDdQvIFeafDz/dQxPwc+fgl14UX5uFnmQ+3a0WY+unSgcsIv9n6vdmgpnTH36hBJZt7MxTX6oxFzXtzzbT+jUmfna1d+YVsXJ/dauvL64vvif8jcst5JOV/fKWHX0A4k/0+Cal9dhAHsZnIhqNnUFoe4SrBsCvF3y/d09GestrhScY2wjXvOqK99TOHx98UwnZZcbbu+2aL/pYySDvhhhi5O/Q76x073gPzMR3WzsZZBha6QHUFha3RsCtusYyg58qM31Sa4zxgcvmfG3BJYmD/KKl7m84CbbwnBxhBtUR33IdtWYfR7TP5qq2fZJSd4vqmBOEswzAa/rTy6YtaqpPEmRZ9rwMZ7SFG3Q/ly+QtJKRZqp70URzSrTkdfrBo9cTV6eL73qInB12EsiIXxwAS/PJKMi6oGivIZ2hLOfBDiXlNHNUZjIJU6AI1Ptu7puqvxUkvs44mBA2AgSRplSEpUt30s00/IUrUtvJqjwdlfCzYTuFfQU/764iAedM1Vi9GoXH+HktZBRUi90fAvKuDL5cBg/vIFOXb2s50vQwE8O6oXOWFeJHh/HOIc0jqQd/dtTbXeJIxt86PTlVqQG0VGcMWUXLUaWagMXPfW9utIB4gcV+n54LYKU/xP86mvVu4mPCm/DcSjAKmhSuTMsfSeSEkxYCLqulKHqVtNvBHYj1B1kq5lngwOWglSqJndMuxupGqiEqhgU1Z4jXgUPh96Zqh+5S60CxM6R0lVTGFFSO/+TMkHQahoAtIKShXjKcA7fUjRijO+ULgFCV7ia9M5Hd/jgTGzhHaRd47Ba2fm6fTstIoN1P9NDGsO4Xvuj79HDkIr7UjhJXlMqY7VaxjVUey/9X+ld82lwap2lJzFJM1I1BfGeuqlxhKgX1RYfEfbdcMfYKS1ngOOx5DfqYdCjST2ep+1zFHdlvr343R2u84I4tKUIW09kdyHSBY+AFRmuj5iwfVhnXWkLQIADJOERXzjET9lca82EQYOplMuHYAorRKRJNdMRYVeZOfVe1McSE/hvkyWwkkJOxY9GpKJFqZd4vxDY6SIAXKwDHkkKKUDHv8XHtwp0MCzYkNuzFb7l/BpQaxgCshMyIMSmtao+5ZBqk2IfPnWpL9Xk1teBqoO2Ol1q/YKadKsYk1J8s+CacOIEQGwjFYe7eZ28JAGlstlNVuFVrt+nQn3WsvaZ29RgjQVNjaNUWvMQoN/htSOvFJTSh+1co/Llc+40VImYidJ+yl3o8SxBqNjQ2RYCtssNu5Osk9Tbpjdkrw4Vo3frGhLLVNfHSdrw5NF5KT4yc6kaMeCg3F20rQbjyfS8mt7WsTgokI6xaez7QNxB8audhc4qd0V9lOzupvsjfpNTkLVYnMMH9MTj2JIofRnkx0I9bgeBEZwiikAfTkISwVvN5QxaqPN7YLkwHtyScAaIO15HUgi5fJoW7/wimmOlx03Gq9sRVriLkScixFln0N1TsybDydW5dPh6LcXFTW5txxw2AqnuuOqWJQJSXRomMmTyR1CpKDA7Lyi6p+K9WADXZNUUOBwT3blStFCTF/bd11tNNJWpvx4AX1jp205kQoqARTSz0rFlffoSiDphpZbzF8wC4b4+/VIBy1kncllNVl3O2GvGVE52XfMZPYYR4GIuTIK8JfJWlx0OD/yOMiI5P5JqRsxyTY7ZDxJmHGccQBqErg89k/CFI1mbF+Vuq8Yq5kJs7WqCIK0wfDWjNPMBpSt/1Z0oMM5SuVLNkdOaGoKhR5BVj+ImpwCAuDM669bJomCeJaRMkGDerto2R6iJ1DNwYe/ccBd1bkfSybZD42qdphbPoW4koo0ASF3+ShLtcwYi9gJn/kxqWRIsZlHoSttnIQwgapr/BHJZO1fga9OAz7m+5Hv+S2OHjLyBeEqsrMwFWsWm6ezqFbEb1QQorAwYIZqWNkEla2lC+/czH8TbvQRYpWGxDKVr+2ekhWiQhCoGdmQBbRSdhkR4+vgdTiEID1PwCMzOzPYHeaHq71+zpZtPPZaYVYGwX8+6EHsMPeCWrWsupqf9NlfDeKV9i7uc1lXBW2+MhJXEwIin1vfWZXGu4ki3uBJaDNhnFxU+0cE7/0d2VLvT8KfqOHZ9U6J3ojzm9yjQqwUvv0JyyV/0yQJNvWAhLWus4l001XA3ezeO1Ysggq7UjUA0bxKgOy8xc5GzoE28bxwnb3Rj7U1dtJhPIwUSOQTdovhmnolGyicXkb1DibR/WVNqBH/kXg9nTTwRunCWSykRg/RDZFujn6nQuTBvqb4/W4/FO+ChnvdfqstoMRYPVHdvmMB/BqktmnnqIIvqThQSny4mVVnQLa97svok9uajFb80EUsO4xSpkWrkDMiTHu4k23iuJC2zpvEkhHNttdRWd43C7kUGERIKYzCLfQG5EER+kkS17AvB9PSVpf1+RylUD5pRV3goFUvERTJVEbRi8hyJoqFbOaySwsiIWoz5mKvQBUPvxeltTE2wD2p76+ndrcHym0glEPGNrPzhGZtGxBEvbqyTtyRFwK9NcBu94Do6H4qCO7h2Lv5s4sd11dx1Im4iWsGy3BJHHHYMqUgqKw/CCKv5YMoihklVqZl25MTEyIzaeakq0XTX7CpLL3BVgQwnvElSoRv0jjPErw9//XJnQUAmfDav00Ps85Jk2/bS5wRgb8i7kGsVXHLDGw0YbiSK25xGF7zBOgnHgwnfnM9dNebW+hw/sqB3V9qjaywJwZDFLl2H41K5gWkxTQjDLHZO+EF8BQON8jebnAG2mcsS1z9Pv9RJoEA7OKveFG29l+AucIlKGNH99dKZQSqSfJZfgJCEe0lX076x7HQ6PrAv1PgG9izQvnPsa1S0bhSwCKJx+LVL9Ez+LwTeS7Fi6JyRscJKZMVw+kKNpJ85ufxXOqoW3Rd6vB+OdPTZmPfOJJHVPDvanGhgHNv4vi1+Oe3Uko8OHyyspNRADbFsu74LaShw5pML9a519kl7Avxh0tB1YjSfZ95QJd/sLHK8aaVQUeqOYW6y9tEKtmJpcy89w42NdAorLdgmIWXYbdP12EM1Hp5EtkYGje0QCf4FGw2Dsxt5AvBOAAh0buDYsr4AB0Ued3OL5Ba1YNkiJlo2KRICTaskb5NYK9vZhWUxfcr5Ei1H3zddzuS/Kwa/xWUcvM1XDQJZvngVaS6u/BndnMSJdBnaJ+ttwOyKhhjJ73Rso3RHE3HzaBQg/dqlLFqsaBzrk5No/GbCGoXM35IASb87L2TzvZH8s8mt3mEiOJ8kA1fiD+LvfGq/qk605UuDb96miyL7H6It9AEngpSkvwzwZh3MzWW9E398Kc+ZDwitri15zbJIWsoCW3tjEos/VL7TYgNWze0dKR+2g5lSwfr4iOU6ReogolsZkU1ANhuaOKcL1d8niQ8TzK+Ig7p9ocx7c5YjZxS9P/2Wb2r2/MZmsNFtvDuffOxOTC4gDUcTgNR/nrEBY5mrIOXxt1FB9kNJKmw+b14wuGHOhIs4ktBnhgME0/CxhdCZen8cbXd4QM4qsMOQgY6z9XLAjroIFgeZAGUULBTEYzfkWtSB/LNcWnxkvWMdBv2iPAk4K3g09xRy/9W4yfwkQk1PRMpUcioBVd15P58vT+A6osgFHmnmxgKTJS1Oxnoy+XY2F5srZINybaDQ2nSIKFbgusf8+zFz7vD/NqEDZ+zQHmerqKCQabHpPWPPIYkPrRO3g579cXYv4Q5UCKVI7zkx3qWodygiPtXRifzF43so5sxO2ZvcSrnbV79osE8/6Whq7Smyvm0wU13EHj+guWWpD5Mzno5AK4lGGsv5IqHVRcNycW55sr59Rzfp2GWglJktzX7Yw9tlrpUkbZ3NrLUB3BNxjsMoIAsjLoQO5YCy4oZjMFtQDvy3OWYMMSrF+8g3PglRwJmubH6tieQHbXshfdboOonke8PPRzaQhDNOMrNDrotz6dKBvDxauZ6KsLng/1of39fGKUU2EbCdjerDAg4QdVrqXcr6tAMuGqqhvrmVM36nkhCNRZM68MTI/Xx73vuJCJX/GbqWxmuMQsaZT1gjoX5sgZ+2jqSCNVhUAWKb3EIbraomMmsiZc++Xtd6eanfAT3ZlPAHa3vYGiTw7IK51HzT2nB2DF40NUBB5f6Lywnyt/Icyod3dRog1n9SdW17FsIY9J929uwB67W7krSuQkaAqULlCYiVYQAvQQ4fvy95swXLvF+uiRBBoT+krAIoDhqACOgxvHPlUWRGAmJNRwSvG0oJUURJLFVe0zqZjl6lglJN9AJwqejzc244QBUadMNVknCGVWmHsnXH5OBOYnxhLSzoyUHq0TkKDKnSSakrzQ/aEGHhpPs82o+GMyBgRPvRWwtFom6C9E00lBL7I+mrUfDgITjeAUPF8qc7ZHMjXILcHlMc5aDSYRcKOFfYy0Wzdc9nbDs62jQi1sp+QwInFTvN8tcXpp1jXpM20YzreH3iqmw5/jkEQWN5s6TuA6+1W3zjtl0ybjdOyo8kqC+7TITvKzgM6MdOEquXhUSydgx0AjUiEnZsfWINK4d7vgu2iwQQTMmmQ8Y5ZpUki53VKHLXw1aoznCct2G1e6TFZsa2HdZwm/yGT6ZInk66gcSDfaR2HDQb+XNvPaQH1c+jZRKV9Cw4Nf4h7c9mxqf2PvjmVFXaCNUDBZIP50EzKmVhMru51bHula0jVIOBb/pi0TV3hTZFLfj6Cl5c41+hWnbfE8nLfK+c7UyT72R0ydJuMqyrVDPg5iV1cihEEs71+dTpdqU7Evh6WIj6/PVLJQEhoLMwbCp1anBDJpvWLfGmIuq8iJU+ge0pmwVm4c/8EE/pT5LhXam860JAxriO3eQVBxslHkG3RpFvVi6I0cgrXiX+LWJlPnDqAvIQzA/zqfVDvBMgBoLJZEJAB3do+6UvlKDfaKU7wMjhe6EX9H4cxOTAlrFDweYUvUBgE8s8rQs2bBnPJ8Q7TpJRIKg9t14QimBmn6gsV+L+r7mkZpngXSWFkgXzlFVqqfewUjuFzBFEQn7wAfKnMKmX5jIIe/ri5HY20LYRq20gOU3nSAPjNlXSITI86eWDZATudOiAJOTqq16+DXdWQ6ti/wmsFXy8RplyNK+8t7fKXxQYogRhO5AMPFgCV/ANr9LETTHHBqIQGPvJVLXWfOOOrp0cz+pazTl04raBKm7wLySrqJesFdI4KTUe8kMaN1i7hh8RP8x6mC1cxvsuMd9DzV+tCokS1UlX8quriQF+HXpgkZLG25nak0V9YJTEgu4ZT2RwZXeN6xPAKSOD1S/jBTLcoK9MyhdPabkkj6z85udjsqitSWVVTcx15QXX8Ast6aA5dtzHdktBfkpEux6kPJVjqrUudRWBBMsCQMwl3olt+nq9aA0TT9E2kLo5QtLHe3hZXtncdgGXHrlzxKFkEJFnAY0THK80fmUcdNiiJ3NbQSKs2SVq9EnxVv248/DIHeIYmSiqTjDGAYKZSIaCxHc7VCsIRJ1uY0EO9lOtxf45dywBlwxSvKIS1TvE5/MJNL2XkCbH4p39PUpR5zIKCWbWh4pn4sLwXkhcWOedzWXJynQNt0V5zIbtmyZtvrmyZgGJ61fb6RuM2wz8soz+uy192N74DxUL58xVoeAyIyKiJgVQVGc1tN84BFO/bV0v1rA0N29ZenYU29OLBeUGk0iw673VuC3AKSesspTgkneuzl/UtQt60gL95rVJRgyqz2J1E+UaUwRiT6VGVje0FUTl5aI64NQsCSr8w6Rs3zIQQy5MSZ63dpksj1rxp03XspzBvGzm4ZKmzbqnMeO9E+I7EgPE3klawNVA1onKKdJ9IzsSR3yKwGKA0vE7m0xDHmnzHAhsxQz2Z7UQEL680febQkP4/A9V93CTMSDL3IEjLDraBx8qDXB+08M/IdzqSuohaiaI30B9wBWyxTl130osNjaRRhdEjCz2h+0Tpe95zpSMawOj3BuX6kxghVYJRSUl2/dMGmSYp5nPbD6uZTKffT1CP+PX48U86uLsBNQBCh0xLkv4cfoLj3v2IP2Nc6CD1j8eCJs+78FTWrkSOQJe7yAP98ab3zsEuyHHD1/jxuA4/zJ8HinWCC3+zDzCQL+lccNtKE99L6Q7/ZyYm2xg+3jCgMXLs8Mmk7NLy3IUnGkdfHIPuW1DGd2wVnkUGz7Pyh2SrUhuKfcV7JijNH6E4XPM5ABZvGf7u+O6oO9ySGzGsfwpQ523Q5wKlbq4hs+8/RNE/TpJZRvaLEQxVTcwuI04c6n4ltc6wQOe0AHOdAku5wxO35wCU0+L4hgEp9Ww4fLJ3gk4RnB5+lrUY8kKxYxFm/sI2qBdXoA7jOJpYDSHC+BWKLzSg0LZWW4u9A6w+Jkeb6VA+ExuHJMNYf7e4biN21ucH/qgI7GQlJSyRp9UIhcSSpFQI8IePjGr7Z4gVdfvoP9MBLh5HjeQThD2al5ustosRUrWU9HWxBYyncQtojo9MCBny13IykkGEFoyVxPTNY7nt1Tb7XAWOOSRdydy8Mif9Fz1sZDYTWGngxEWhZyip2Mvzqq+pqPOmrcgp3k1w6I/5bWZAckhYQdOG4vOtrnooFbeI3VcBPJfSSyz4aJ4wNa2DuT/y/ChIYt/ebZAQycLNYX9NRgNLwtXwCgRh0CDaj9iQlR3IMoeQFYP74rorN/AIYD3ewLZ80xH/rav4RZI56AWKRpdWL9Yi6PJgwu7M6qaIk73YH1voEhaZFG7GxVNFNmObGNg/aYj528TCVDfBmduVqoohXNdKUWbb23tAUwQBZuUE4KeNg5cv5H45l5OnB/oC1AzpgOnteDB2Np7Vl/VT4wrU1vVwbqj4s4w7mGzCnnAn1i7WpB2guvMynIXF2Te8p1V+s6mq2h6N33JsLScHIqK06DogG3gHXaZYplCjivscFImWQstYfH43fKsCdUYcEL7zzAYAzCrHX4oeVNh8qQn9sMKnk+SCTI0OGwovIQ9ZTerSebUmTqUaCvFr5Ee2cAyEV/oGUjsESzy4I2Aod7xWPA2d7RZxKDz8I+HCo2bts6tfofzKQFQOJ0d8LGkeTHFFujyIDGRgwY2Uyx6wlAZHZom7AtMTX3uu9TU+TYkWs5JVRqQFAG5FmHBTcoNKSEAxb5PN/hmGyxmqz5+86EoKTVPnVlZAqJGs0WBQ8MyuzRw910oddczN05LpDDoKSCoSMoPUE9tCc8AgN7rcSBlDKkMZUn26KczweVEA9UdAjwXs868Si1kx+pbDtX7oYkZ9ZSctWIoQ8YwHlXjsUs9NyqxvLqSrtno9399ph94VBJSXwL5EYKn06z8knRhJMeiR+vuBhWpLsFKZ8Bn7mxoMRQrd92vnk9Qlk+y664oSaVNnWT07i1HLNS+LiyBeYLxkTZKiMTsKnexc+dDbI4XLWnqfgukX8gvbgM5CVy+qP4q9KJZSZQANjDzjJLlqSxvV9dlo6DM1W8j9D6zM0Ype+9AkrwUKhnSITANEaiI1wpA0zfpUpHoqxzsR6q36nJqmmgtx0oMbIbLzl8TEkMJfOSKjsxFgHRER4V5EHePA/N+87VtkwuaeN6qWGzIOoBT5Iz1bmPRxe2s+Hp7jbrmdwpYaxBsWE1ZTcddoVmOQYujtDfH+Da9KG9d3Re4gQ0AepA+qO/IM9e99u/AtZlg5kqAxSx4t14prH0bBPp3xI03Dgvi1y/nFDA1q7+H8R2enOtd4+ccwHqvrBXqBFuTFqSdfV8vGJSEq8fSapBEe6aijddHooVJ66qmPpgSicREmAAF4HdVEwQ3ByoqawAFjJIekAgs8+rq6YBQxtqWMJHjtNggFj1JrerXhtIwIJjrDWj8AyDuQz1sUd81kxrNxnfiNnaYYq/QqNSFp12zjr2k+KXaBdj+MA6V/Zn+xD/7nDFZnqyDYsFrqa1DtZ7Iztp13x4VW4h+g2rQI7jdL40WyBes9Mnvo55BKIAW3nKIdxXI+6MCKstidPJHOgtc07+yMrWZAr0szxt0TucfiXEJqGfO8N2G0pxqOzO/J2Kpfx0TnP74pz9TlDBV9ls2fgPLncOc9xP7iTn6CZK59gT279skzflp5Lsh+x7EQgRSLn5T7nUSMtNvabjw8yLdHPgJd0fXjfatnjQyV+Z/ejsNyli2kqZj7xQxh+D4BuCk7dSr39T7Eg5PuONfabCDe8DBEkTdrvd568Thoh4WECzo7vSia1lXsf4CqtLGxxjOWRSUkaG5fF6H+ZAj4HJ3t0huSuIwvXM4A2ZO8Yis5qOj8qAWX2vxHLJ1wiWxccEC3dd6aXayUJ3c9k5D7j2SoF47Kn7ErRY7j9cEr38iADJYJyYJ06ydDD3e3aPhyfknRShsgM0AVUXC/uyUI4I1uZkM+/54HrqGuSAi/RSyhs5Fz5/N+5yV7JiGkSQ/wkuVCrqfDXsLMEKq0wYDZ/Jtkw8Bmz6m9cECqFKH+MvU91+HoSh6567zq2ajJnBC38cypSq0M4c8l7SbBDyp52J788I1vhPoq5EsXSfRizu6FJ0DnIpFdyGUu/f3/YHrIw4lhAYzcoTnVjnRMApLbC/JiDpMXp6zFSpqBjcVXthBa7Yw5VD0OG8WAPqQDjOMx1sJk7huKBpLnxalW98wSWGvcyB7rIMshY8FLDLWa//q8y1QG42bC8OnDDRDDsGXYmURzgeMoGeqZhM68qS8SDEjqeGhMYgzUCurjIPw74Ho9vrr5BaClaBI8XzWm41CmKFQU+EGwS0MmDXCnYb9OZuvjBgy9jtNIEXZk1c6l8aje3rRUWmJN9Wx7IRvGvuaPWeHtWzHH0V2lrdpwJcTH3eZ6mKQbLjgPeJ4IewaisAGExs4KnHWstblw9URMGpOtrzUSE3ImE9YSpEhx0kvSbCIicN4Ja3EitoWNFkLhQ+IAEzHsHcYgerXDI71Ej/q+ZOiL9dXs+avvt+AMyl8vUTHbjl4vH+ci1GHfA4b1+BzY4A+GhXuSnfjb09PODSU4vW6RYp1LDKGw24V3R6R/JdXWk6ERyJ8FSvbpy9oLeAnsRq9gRIajJAQ/ALKhb/NsdQhYKOAD/pLo0gPGOeM6SeO0Yam6s+4No847i+gjIPhtXeDyU2nab7y94lzUCbAIy/Jhs6iNhd9809q0PTJRm0hmME1XP/EDh/hBJ27jfM9GFUVZxqv9MjV0AfmrDdvOKYfL6T5d+xUbEfThbnBAoIKfL7ruy14dLUB84q9a+k3hmRs044ryTXdcDmghXWekTJZNW0/Tqv0q4ZWAu/vke/Occflds6jp3bMl+Ul2AQ+WpiRLYwWBSAWlYBy22Qcz4yJn9bbP0gspJpOjSIIosgPlikD5yO0BY/42nCi+/1HjaPk1Y5P1kZKuHtVDYotHZUkEhmbVJNTA2ZC7qrYhoGbUz6UCvuRz8NDqcm/IORhrXLjgzIdTuBjiI+rBIfanmtUoydxhxwnJT9C4bSb3WmkJFTKBZtREJ9N+keMmZRbPbJ1FF//61GgoBjrnyiRoBhcbte4mQ0wwSyry+vTcoBmnkm3GK8EqVFwjury8eLC5K4/vO7YWpGDYHgVaMvMc7xV3G1/PYIZJoK5qNtehMOBNOxKsiDZG3tR2T0W+dcnuwZQ58KZlPhxaczIMNJLNA3XMdysjX/1bylleU2U+JzdSbxJQ6qABZFFpDkFgnAjRF+VvS2SLnxXnFFo+xtoNDEsOGM4olZSHsLMVvYU5vQew1/5O5Rzxl0HNfP4bqdr1sQPXNFoqh7XNq3/NlKIIRP+eAecpr744Pn+KHcSmjUGaqmJyYlsVtf7h24ChTEWwnHFZc3F53ETLvf7JZZKfJEl8frnC4qrKpfqDryFH1sFY5QOqqYelt6tTCGiNnyUXoOcqySJ47FL3SQNQJnqcIwoGun7p8INAyAvOr6bmlyCOhGPBe6nxo1y2JAAsF7YuHXJeAvuLta+Cq3Y9bY6pUudlVIhyytDBYFbzCxO930TzNEPOVLOQEehTIYEaRtOyHgaegLsTiW6gjMb0fI7qP0HN1pRsS/4hj+x1HgB+U7TFEgVvBHSGAI0LfX9/uZeAwFwRNeG799OWgE4/JDX4txR8ZRzjlxMvyCpcG3bo+OawimysnzPY1VxoakHgqDy9jJEEm97IMWLjD3T7BTU5bNP1pbi48VLcws6FO7ue1jH81K8MwPLcInuLWkYH0oFAppUBK0Ip+xH1q/9TmbtgLggDagaRP7GspljY95Jr1uWPCIbfT6U0kNwSy8IBRyCvJwkYlxLmSQRZcFV7qKgowZBaeh9LzG+Mwp3rIlt4O9gchScGC2/LAXbMpVk830HKdZRtnWoqZ4ueRRSkb+GGWmeCY7Y2MyMo0OCvg9W5Pzixk21pUxFtC9Wn92ig1eTmSv0BeegflrMK3DqJmUEdZgr+R8ADiUWT2uxykKC8akVu338JRtX6SkhbPL/Gw6pAXu0GQuom7VvZbN4i69yRPgFXkiQumtiN4Ke/koErvnIEVabKSZ3UYqMIBXg2HFkxUI16gPSS39+cbiHqXPvQD2Vy8nXmASFbbNhznaviXxktw0I3rJK4wgB1V+gmwg2UbfOEAb4mLODeSUZCuqdvuc0MeGJJL2vhK16CJvW0sbFpZ2btnTkgp+n/Sy5eDeovJgO7CgoZEAylkrrSvSfZU4WKPbh4E6LTI7eGqGy9BmnFPYy14844xAW8Sin/Mjh/3iEvEf1N+KpPXP5W6e4Cyr9e+g2EfnOuB91c6wGKYQ0uqYWuv2qu44VbCQ9tgIe4Bw/z4d3gSvUgX5Cj6CnC/tpvE6aWtR7dU+mHaq2Q8oOhZu/1ryNUB4I/jB4qA/mAngp89d33vUJLy2Y3oVQSrL+fmCokMYYtGoiuXh19gXWAuB2YNwoJpwrvOVTFHHDgNZLA9geVwFKX41YYikvMubMPQwWwHoC2UEX2lVdD+H7C9kOToLwkZg5CC5+wpo4fNEGjNCtyBs1j50qvvBT1d2IRCZytfN+jkrYs5S2zVS4B47CgiQKN3LAhnbDoOZ+Sbj3PR9x8qGQtXThTrwlHiIbnL9Syz0CvHyU8eGWZc7QMXFvco1siUF9yocWxK863rMUK/53XO96b1TDjWygtz1daJKdh0VQyQMwrzwVFTvPOV1Vit/lBOKb06uf+BaHBzizIclI4do0c27Bq9mHH37Farx1XcS3n8QP/hT4LOhG+5YntkHHhjjBeNo5RE4F1mzuM/Rot8sRG2oXmCEZQwx6igGGOi1PYfPaBxcEAff9wDZmu0BbwmCizB19m7cIIwOcpQwgrjYekY0zom5X55YOOt9r0RY94AARbXTZPehne0iQd3tyL4DkCwjUtFQINf1bagkxEwCWkkL1LNxPCdXU5Y/Bpqc5RSOTFPgNkpi4XuxBYcc21cYFKWRcJMRicrq1vmKfj1G+rUEq501kP8qC2Kz5L2T8kiErblxZ8dqjKcB8qalSeKnGh8OvWdLmpuam2Dq6CNzRU9zWZsV+Q7wixzfX2Dm++oNBr3JuV36gc32LXnttl5NELqiWAfKe8CbVPbNICa/kRz9ja0AsSGDHt5VI0CZipuCfBGUH7+b8l9EP3UtoPJBcaso+2zRmMhBBO5yHfviAbQhCjfSOlsCM4TGQwdhU7Ge1UyIpiQ1GPmreiIq8wwt4KtgwphD4qM/HlsGbLa2vQ8RiJNDJjJPqMWxn7nNyRtCELuC3NitNvyHkwb3fqQX1a1BhW4y6zD3bUEzH6KP1dZHUOa7bg5SRNCPJwGKsL4xTb3bHPL0P5Oyf/wrwC0YTSf13Qa1eJhKkg9sYQiJmj0XldtQr9r40jVA21W2RIQRxVsAZbjc4T8u/YNHs5cNsnlpx1CYfWuhntwxl+XJt/9q5zo2vjdzjNTYKy5PF9Ahboz85DmRidbmyeoY5s+gQ2Yh0YiiFoLiC7208GuLRpsMWhN1fJNToDdGDg2KfpfbTSShL/oj6nbznpPC+eHzlezcmwHP6q/7Ai9qKOvLa+fQaGJrF8pDCtzsWIruKazLPS2NJajGhivzkoorNdJ+UFM8CecpanQqrlDc6uTgGtfVmR6LPaUVm2WPRsHtvhBYOqVXaboR78mbLGDSmy59FsSHICosHRSqMShxxc4YD6LEblBe9+Yhsgl7nwke3pkYM7TXRRiOKYaZU2a+MRfy8QAIhA+X/AMXItguQqACDQa22lRoEfUF9W3whnlM76aAGkMZnfZ+RUol6wN9OERmoKHtflVWNfampAUSBKbgFkqCntoua0i8WUPGzdLr9JwvPGG4AHwEsetPEM3rGtsTCFGpR+Wg8ZaCpYoWnRQp+yG7XCzSCx/xeG4qMXzDgNd6nGlfBub/+JdLHZ3bXiMVW/iU5p7KoYNinIsMmjbNbxykDDA+YwgIJjZFEWZOvK2p3o5KgXDV4bb/mCYG+m8C7W4kKISOS8UI26TMMxdvTuUowmuVvV9BM7xt8F1cbb7sCWuqirzxzV7JVNhrT5KWqmnb0CKWBDiBk9lNlrt4LVQVLedNfE5VP+SVczuNVay6ZbVVXY5mzjmHkl0s7x+Mut8SPNdQruL6Gh1ia6iot2ck05bBu4PIlk7i5BNEU4RLa9gZtRbcGTXKpL31OdrVETUWJeA+9n14MsGAPMn0kbgisJeK+9OexgCH/e9FwWEZZ/xLcQlKE1A53n+wpVb8gfXonZqe/9leSUF6C3Us/uwu5Apw/aodJOFqGipwlQ32EeR/fSEvxWD0PW5/CRL4QubU8ffGQ3thaX6EmE/YQ/avgc1M6dbFMF2OQ3umvHTbSFmjPoOoOToIPSTISqHbn19ztCNt4nT/UVdHpVvmD/y7H0znRAU+toB3plu0eu3yqLQtUNd57D2immNLMifWk8hJRdI9Dr5/H1j4evV8k1f13In4aYOp+tkZuK6RiTVtTsPqIrWwcUV79Ex3vBjnweKdDmlRyw+53jfOLs5+31m1dJIMBUCWGHL6A5+Ei/UBY1twtOYk5mBkvESye+GcvrX8vY5YstaRuRhoHOzU2Tq2qMWj7iYwcK1qeCSyh5BjPM7gU2FM0qa0lLqgXNzeildYYL4ZU+kuRTQTDnmF3YthBPxjlibLm3gJRdpNNQxOnzfJmGbt6q6cVkiuCArB346VHKlLj0QHMAL49gFz+NI7gn2wNn+NkrC6dXPE9qUA+7CKsLFMZSawAAd3Kq23shEnHsBcSv1yahsKNMOj7oRbWRFfrEU6m6jHZblyMiaY6bb2hJEl8sciC0lSLU5K6uxQgVkj0FlRgV6I/cs5lW1o7cXdMlAx8pu6TJE/NwOOfRw7WZFQAdTEX+67rY2AKFMKX6cOsgjvbeHeeQ00PtPAP2OlEzk3OU0avTldzbFOFKbwN3Ik13iozmcu5CXkILidG6nJP9EMjLvtQmQtlXlcBTFrqGQWgJUBR1nd8FqPKa0vMMQORE21MRX7apM7NJMnhzWGdhvk4qQ3AYfr3cEiVP/scgb7kD7mrOVyzQp22ymYRz9SJc6bmqatqdE3V2ittDjp5x4hs5BwrpmpLFs0c0LfdVAXm0yQJ+h4G2gWk0EUZ2uvxhZb/LgyAllN7QCbHm6NLkOYjsiJFwxJ4ESSZ4C7xJYzKnk1hupbtRI4FlBcKq8eOB18s2DNbJuBg+meOqP8KOPFU0MDg0SfP/xaQ0vbZXjLEKs7Jh4Lfufu0MgxwP+7Me9nMLHB2H1tp4QO2HbimZp8UlYhmZ/iBtw0sCswu/kM/ubWT9rSTPgS4A+f44I1PdRcneCsKHK/BevTUamXqJwXVECIWOljwOga/+x2Ba0zXCb9le+xD3XHjFpuPoOgDbpcY38FkuXEgVdHd+BbMeqh3+Gyni5FBqT6+GFkG+uJ2rvHlsEtBuvH9QrCJ5r4FbSyz4vgCO7YwvQlbBkuGEyH9zqjcQ3MRqelVCU7+6WC3YaExiJTVmNb2TksaUeOspGzMwQrMjelN19w8mXpNl+mtZBeDQ7EREpTIfPiQrUX4ZgRsxk2RIWuc3YU2tzyVoMX6BIxbYLXBM9SZ6O0xxaDH5FqtfNPEzdPw0Np9OBWyRYANoryD0p2zhxfFznQqH8FmvZAMRn06c3ie7u40ocFeKXeg2xMAWoR0rX6lP16ep+lKIpHEL5S98ONSUHdZ1b6sSzGZzoHhRG2uDgeKshYgvB0inXePHL6ksSPS4aWvwg01fmWmgC4/vm7qmKJv6j/pWlTDqgrUoNkvUavgcSZQna8IZLzptd+WhlsYGBvl38vBMWWKUD4RqysbZvuXYlI0LctlOxibU00SgsKSxa5yCAJ6mpQ8GfnVvSGMUiCJd31elICBiN7jZlxIFQtuWvy3aL0GRNoWq2Wn2E+nbeF0KarxVdgZhlGyMVtK2l5yYgxf+3fzfJMr0eamYYW3cPbBtL3S3ENDqsrcA75WIVYR4wrRDFWpBCk3Q7EjP7iebtltYczoKSs/6o1RRzArAVx+wr63vpD9yX2cxOupEN7SnOjQIHLEnfpZTm43RUYPeOEaRpfYT3PhwLDW2FlN0OWRS3ShzhpYvDqNBNW+UGUeEt8ED3CDozrSMI15OxbtKNvis89tPdO1pwMC90Le1rzXK34i2MM/r0KngmQdOo8Wnq/KisGiHp2KRbtJ8IDgGyyVVJ8pz0b+T8+lt1yuNSnQZCH7CmPp0HRTtWrXq1iDedmus17/7LNnVrfoSUEXgW6xv0TRb8q2B/tQBkRrPJp39FDMorS974ZWuJWd9QKRD1XkU5F6629Ood+032VuqLS8H7r+Uexfls2/8M7lkZ9fQ0hkEW202AlcJ7S0JG6sN5Vlp/Ibub/HgPjPCjICes2Ax8Ks43OSOgM1+qY7NlM+tQMVoU7wh+FZRMD4l5bCz+gv/ljDVRqjsw0viwn/AIaP5Kf+I0fDOZCj37s5JVgncWmpc5H6ywreeMxeIXoyRZwEpoZbKfp/2frYbCYnpEVpfzAPxrZNb19XnP4W6p+3GTVRpz6oHdvHWMSlLdh6iHg5a9+8OJu/Mx/JV22xw1Q13Uul3cXojDc5HhCdVyCONxKjLNcKbSA8uc6JDJF+eNXJZ954ezFVDETfrredv1zQmruC6Gbi04mL641Y28uvwtE6XQDv15QtbceoqvqAHjyLGcucPyALwOLeEvFIzwU/r+bCJlHqAPpHhJu+SocFtuK9ePsyb3NfRFO2HTcs8ZT7jdJ0cACMn9yMaMwlrpVciRpvU8Llwv7ujONFx26jGUaNYSnG/idOdzrdPqXNdcaoa72bkdfQEiI8UdIF1u0GhVXL0CFop1O24H7htdkRNgIEfvOuZgCYXDdpRpp9/mf56rk7g3VV0xHAO2iZBt8WpasXIR/b0gVf9t8ZKeEGAliqSFImo0MKcvdzRkpUXMG1w3xV0uINZYESyir7nsVdkiYH9RJkvcHkfZeW1Gp/62pNAvaP/jquJ0aqYPvIt/Zd5NjfFISw0TnLQEFhz28mtKRMS8F90s4GEAUEJeON24KdM+pq+8XXhW2YvdIarz2A2jJsbPXVZd3N/aGqgSq0cInZMycPrqk94071JILYDdcrimtvcpffiJHwg6lakbeBfFqR+zI16x4k9bTMrJ6nz2JAna2Vo6FS3juGnqyY4Ap2P59D+5jSK7hobBHZvB6V9p+DKgqWvYCr9WUc/iV6dVykZfZtUmwK3koHD1mxC8XAO+FaPPH0vEtsnfWsBSyou+IaGY/XgeE6D2k5AJI/hsbppFoA5P3Xurby56oLLyvhBy1YL0zAqj99YvTiV/Nmlu20DPds/qsvTE6MIlEtKLklO8eFAg1WEQETHQpjlhmQY8WUub16TcgwKZIjVBqHOo4P/Yg6WyZkyBGL56t7tIFcpa6uTVlHP2daWJsB4pbjqGBR+z5jcxOl9nONVoHhWHDl5Oek8m/2MiWO8wk6Ucjl6YlHXuc/DVgHofvthzZNQBUBRLJ0LXdHEXk1EKRgTjHzfOjZSS1nHCmL3ozHGtGRbBs/IQ03nFUZiBPwdaL+nmz7RqBCLE6RYdH4aGq+W46QxaPpyf3mp9QnITOS4IKQTYXqPNWm0bf20tZGM32K1LIOqsLG9VcUvOMhzYFDyhCDSGsxKRunnJm0XOV+Cif888WD0WdtqZHvq0HkFXsRsYT0Vpct8EhtEniP5RT6BZjmMINowfgxa4BS+W6DWdIcCfUVJ85GVmJfLSWI7R2zGX66oWqXWvd2Rdq9Vfmv3X0TwRJdUBHRxr+9UIzyqV+BGwjFQJVTed4E/Aspnt2ecuWTzmahNlDpVzIWeaFX94LfV2w2qq71Rx3z8tyZy80EDUrUhUEnVOsIJ5cfwsffrtbfIZwtyFNrqvoZpu+TMGOwrXXEVpMWNR89Aydn8wh5glB6Va28NlNLj0OaXJ4FUk9I0h2h0j4ksRCiHXpPZwJRE1K6c7KOf5WHCGQ1Zv2m+cwD7uMY7ZfVK7BJp0mNHIGx05JbdRWkyusry2i3kXDqhW28aznbgGuzuHdK35JebEKSkBVkQZjV8Ue7eEhzg3zN/aS/uwzZfVxQsv0rMSZDW8gOkVjVgDnrBkQpRkSf/afHIl25YUvlfLAgDo0SO9HfmJq7K/TebrfyCvj+NRrABHt07YcM0430Luoq0WBZF3rZqe6NIK+KHOFgL54T/dLHog1NOVKqZ/OZlQDxuH3tBrsBGPSYXalEXtvAdpVWOQbkgomusfuFYprl8vCVjmqmad/DKowGIMcFdla2i8oql3VBpYdcpJuUbZKKohRkWp0m9QPlMjJPhcpnHth2+KLnxlYoLSp6nRHXQ4Bx9pIuDPpbw8yGvgTR9/4SOXx8szblABHFQWV19MGpfZqFpr4nYGJQpXJV+WNs8j3f75DDq5LjHMqJFC2q13Ny59Y4Xve/x+mhSf9G2QytaiNt/az/2GtQHQZ2OC9UxGsCsW/zAVCCdBPHf3yp7JO54iWIz4teur8OcoQeL3ow89Q5HIlgGyIBTnSNm3WLZKtuSSR/s1vncCecizBx8ppZs6fL5BknvNVz/Hv+C1r/g9H9cgiqyfY9JM7fMuaj1wx8OVZkH838UfcsOu4eD+20yvDbKOpBk9LaB3DtxpqB+dSXvsQWqWcX5oFomJB2ITdpvnHLWMFyWy8S1vTHjpO+rOQ6JktZiLPocYyrBZc1aFIK2i/8rkYniuWspd+SoM/D8pXtKD06ZcIgLSx79FOwsSszlgNjnhTiy170vlxSImC4N3PpEuW2eocwX3X0SwzeTrauZ3qtwOLnmOqmDnL4KRDVkCcRdNxj/l1yrZjqy2lgbG/FrQ2lBQ75vntaz6pcgodH21ttODcBJ/ciRcDN07mMtP92QLhcBAA7PhOWH8r2erwdSK0YZAwb3i1JqtR6BCUHahFZnLERNN930z46Qg95dtbdqfgVBvVknD0mthviBc2dhgNGa7zzQTulVMFuiDXjeynI9jUjRi3FiXUp5iQf0hy6uO2pz2/lnswog+qoBfMkeQ8gjMyaZHSTxa5mY9ObxKJ+EWkoFPg/S0qVOc/afAAbHxcTLvjQ/n44YwCQVgLuzhuZ4EmBNQGmYzfyyXpr3eKHPCVjgqx9D6Ya187Sv8NBLfnNQRHf7uzxMVYapuJ+aS2Y12EF+tHsOfVmGKRbPDhMrxcSp3pXkW/ZdGQtJpNWIkVUYR5skjMnF0EpNvLRl3H4jRDIHoCxC5qQgfcRJn14PSBClK2spR185jFp6OtFHe4jdQiomdNUfvgvOBx/wc2JA3e8U0tCN1tYQGGCUE+jtiselE/cJkvZxw16EJ62SvRnz19Zo3MYwRYY2YzHr7HONNpCM88MoTRmlCIE7mSUpKFhC3EoFhm4RhsZY6S6vcT+z+MExKcjtLLpJwgwNNH8hhD4B5rFSmq6vbh/7AqVtJyLbecS0xocYN3Cndb3yq1ScT2E6C2Rjh1CdNKLwf/mLG6eh9bsCDjj10l7VpS19jqIhWqNXtRLV1O0QOu2fPBHOqZBoo95BzC7A/ojz2nUoqsO2QMM6ym8yl/qtCBSChSZhuxdziCFDrcj6ki75KJXESbUlzysuXt4C7xVsVXnzVRYrqjz1ERNK5w42OGVHs2i0mc/OeCtAqOOQZciuB3y6uPGRk2tq3/J86dojVNMiLNfGrxfOAVC6OuZPbj+ydWmeAn3Uup9pLrAiCo3yzaMrLqOZPXse55vnnvvqsQz+4FBGpuUa0VK9xPkHJp3mOZh3vNAi1Rn1q8UVsNiQo/3iUr7U2NDLPUcs+zFoQ6BZd3JGHl+/cFhktHs0Zu7fiQED6VFI7gzCy/5QoFuJa1W8mM+d2IwSvL4pxMsmbKJx9S1/3BdSDySydRz0fPDVX9c0TVQAruSGcl+DLSQ9djPleUjpkoz2OwdFyV99dX+36ItboF/W4nIaolhuK4mxI1lET+xKwpTZq6sjwTpxoSry329LZ/b45S/ikvq1dkZxpzPg5/3/EaNKS1ICVzBFJ0e/ccxQzEu2pBtv1oAPvGK5htNmxgoUx7ogfwvTpNTU7aaKMtLFJJA2mkCSzi48tMjbY8C/sWLdxEA0X9ph7j+I4Ig35/rDulLcG8zcBwE/ypMVhhdIilTwnL4aAmVOvHOt094gD28GogHR3vqrNSC/gVEHNJLN9Ej5jlao2dHB6AAItZHrLs0ycTyUBbKcsfNhF8ek9piJhtx24OrMBG+pFpaD9e5ASvEjLM9IYcwdMHabUvW/qppcJO+6tIiLLRtWHgjmKdv9zDR+U+HfW+7BqEfHPczB9XlF5cINfmrrfArHBAjHUA6mOF8KDTkOKsb1J+fh3oCswB8WqmsRz/wCNi8h43mibrCgnhXu1bkTxJFEtzUrYG+F+A2xTZXZhGPizZz1cZfNaRaLgMQa0HhjWtnCSZMcYOQ+vHwG0eVtU5GwoyJTLEeBZix+JnlHTFFrgKoqf0oJ1O7xvTKdMMmeIgBXd87VekxpNuf6B3QoPBf1G5GrunCuhp9W+/aHx9ljflx9axnoeAF84iDlniSwAejVJeoS0MvER9wMyoHmftaCOOXb7q1D4tcryvDcrTG2O8ariiB7/bU3A6fD0Ulube0EDkJwLe04g4oGybkKJUrLV2QqbNbs/vs4gDNORIhvQbCtIrcwiZ7FQDtuikDD2JORbgZrNAn9AMnnBvnm/gKz8dbU9xu+ShAe7B23B/ZYspzyXiz7VxDNeRlZuoafnZH+Y1me2ec0s623EluSkv38mNwOQu3gbLVv588ljgNoyIQC7cb24ljyk4x59miF4FvQ3Ll2INgYkaFVKT+UvALcKpCWzR9X5bvSbMNqke9rZOGMO6KvBVtMVIet1CcUOzskkorQ3Ftl/wgyWN7OIbWBIcb10460O8NrRLmp31pGNz1t2C4jmb4sEuXgBqVI90Xwop1xBUBJUbF+QbCYFSptd4lgZU+gPeHnCTBQcRwjom90TaNYSUsxQTnkomoAhIMhY3pTDJUS+HAayumdkoFweCuDTsOGwAXoLUXHullQUHX259lqUegMH0UvUW3XS7p6A5UqL19qxYWJzHXSyUQhEWV96s40nm1iBWz+VdLjtbVW0f7dEzewCzszBQnma2nq+ZxIPY7tMdf/3AEfmkM42BICB9wwtEgUN7Ofi+GqmJbjN6gLpKiuRh7qczsu7zWIXLJ7DyHcZKfpFmFEsrim0hIKOGZAmKpAUXdJ7zVVWucO0/x7upItw2qKIBW3MdnBjCsuKO4sy6uqY0BdOb3QV7eyiIpRSK0xlmHjlEbxzNaLkYIB1vEpIu5BX3Grs5IneDdoS4dii8nTmI13HnGJCejtEKEbeMY5sbJmwr2P7obCddjNv+mgmjuNejXtqDQr2M4UZ2VjIGI+2uLHg31724KBttn0uN/u0qBGKyi68gBbvP1PckPQr3hII/d03QrBxeQ5c2of68XlQaQCuM9UN9KxbIesNa4XR/JQxehO0ryxqwE2hUVNJVoZUKO63yLfczzAbItThp0J3KMG+jp0LgnDxJ1f7jJZV0JRUn/PJ22vymlFUIJ17rz7yoWgbnq4sk3Yx/hAj05cqrGhDgPgTitK/9CDcJVjeHJoOO9pCd7LkrMIDW9BJfFZ3roUMqB8pmqiIjjz5aZpU409nHU+klIDZ8B7SEq8WmRWUx7BVvGmNrWpeWwDOcTvb55kgp65j18RCZ7hf84Euwm9KZJibKl9jbLe4wylfq8+L5ovK5dWUJOVRm1VH82/RjRKlTlDxa1GkFP+SDZ/qaBluV6hvbX6OH9yJn8y75rEUVRVo8ofqTqmBiAz7/9FdV3wicBd6A8NpVHvpxPthDgMBPRRVDEDp5umATjEaJqzQCXCcfidLYs1jmh/ySXrf91938az+QZ3oqcrA1nMXoqIALuPQAolIV4p9BJPT+E84MRT/gBWYyHCqCfRreJu/UpDfb4Fwj+bz487NhwybuaCLiUKsd1xK31l24aLahvm8nidoVbIkSMGY9FTUfnS0EkgzUPWUMSvIc4JePNeS9iQK+DapXCj7e4meo/197TwKx47IzaBX5Ith8SfHhGMkQgZ3NmdpKqoTvCHK5tf/qhLwoQnYOI3GD6J8H9aJhxaBxVQE1O+3xVMnf0NqLcaGbrQNIP44CIbS+mMTbGutmPI0+DcYzFuz6IYZaRzvPDq+3JqZyiAyjX35fmpA6T63Eth3uPcrPHDJVJVdg9bmvLCngEWxpgmVFeucn+0CTEDpznJ5g9MkSfGi7uA4N486Dg4dNZzjWrcdOw+CpZj6iQ9BgRZL3LNOd6De2Zne/1eJ6H+c99Hbb5Mhb7AaK1tEt93uqZo5XOwlwKTrRqbkym/yVSIUqOB0H21eBzVBcWg/B7IK06jul/O9rt9FV1uSNGlzTGRI5zv3DhTBTtgBO9xdw8otmbmRVjFcD+I2n964C6Eq9ApSyoAe3yC8AdH/HtJl9vMYL6mSXVzL06VbDYkcINXJhEKL6dcS50YGAKuXl1MsVuwg6sk9vUDW48f3iuzCfu2z3X8GAzsRaablTG4QWYhp0jQBjfuCveF3oOTj6nNgxzdsahVfMDBY4iL86kMgMPbazvpg3tNxQ0PzgIh9Lr9XQZHQM7yV51B/ooeaCzcuMlXkWcL7Qreq8VWFOLEwKkGTUb/TOrrB9SCcwbgsYmki3hq8bD8xP9f37ewTtuMp5FxRJL14WB7euATVWlbHaXoIa3rh4zfOyhwM7gGGI1T3kT7Of9DZIajr+c0HJhbGy6/KP/Ey8ji6wx/GAr3ClVLnJXeZEPabEgU/ruyBtCc3CCWEnFOP8XossDQpEEST7O5G7z1Tkg4DH4j5vIPZBAnWhLLNTqnPOrxK1BcMRdLcSwHjaP0s5UejZG+FnXk4xRy5GzO3TteNypA6DMwhfBdT4jofu8ic5P0n0kN/0bmgssuk6OeyETa4sESgyPAKNTI83ToF1PhbbMRqewBMWYVAM2dqN9zEWM5LyfMZyY4p8xgMmhKlnolEzfNDzCKwBKbEyOFh1sKgRnGlDYCUMZyrNrDnBdohxh0/3aYmuUgJtZi/5k4tlBU+VrLDvWyc0U0fjDm/RPVFxsLS5nlrIxcdI1m3BfvmWcQtaekxQyk540luPtLMyzQcBz/7KJnpUDu7+U7Kqji5t5joFxVGmLxVRSC3bkX9GtnMDn1FeWWYRgGD613dn2nR6wgI7sHyUU7pqkcLvXq5OJO0crRg18d9kA5mi1fVxF4duCWH2VAgHp9DdeRgyArnL35Dk6AGHqlLNIAEKohftn5LPTxWn9vroVZoQKcYBtmjGr6BRFOdtqe7cjotpb/LgnA1BIhrht1mkdK4AoBLVCi6PqN+04VhLWSIAlUhtsX/yQeyBaMdJqR6zvr1sZpvqpULPb0qtRP4UbyBMSDDrbDGOmJ3HkJ5+zIVbpGp0TYC1/IbOqV8I2uFCFLnVRiQ9BTfAHodBy/JlI9aDx+/S9iD6yjWAfS7N/8B1hJ5mqUIVrhG4Wv4K9zgcU5EHYG+H9kIz9f4pTCmE2ESl7SHywVByVKtovHE4SLDnZkXkKXaIHi7ZRiZkpBE64NbHgqMikpdl37ne4Gth6WRxDc7S+JnravBmy4m81fQ+3UyzPu7ttECqmTDRQmK0sAw6S52re8X2N6LjFW46TJq9Q6i/XGpa1M5s1T18OpE/Knwjgb/06gLetBPx9YOIyQdYKo2pAKlTarJKtcWBj85QMY5lOzxq2vYSjZZ47dBo8JF645PRlcdzKVQg5NHFJCMg2bZ33P9iKEqqgegvHhn9U5EOr+WJ5ScHKG7oYSTQVKHj0u8XoI5xanzmW9Ak8eGs9iqtKQCDbBIRpBr4P98xdLtaClmH9dU0lt5CNZdF8zSFCjTk+JXPy+n2iKvDgfRlXjxsyOq+OkXAcCUIjdAmKwyUOKB0JjFO6iXJkPTF5w9sPzlGzNAvzW/mblBrfF9AHY5fFVvaaops+jiYSZEpnO/D84Rn+TOiIn0Zhj9NuJ56xKu4eEflUPGq1rVbMNvBbQ2H8Ta0A1NVRMCdZrdDsB5PuEt4wn9Rfcown75PTi76RjrtIflPMeQ+5E2QxSJzefyK0huQD+AuWzSIDh9ib2rDMZX+hhNXeJsrDRj4azK3gIwMu5jFgu2UBWcnopl0imj6LDi0IJfViqbiLipiBYFn4j9iLvKd+ELUf/pxVMZGmPmCuNGvk90nbu53kYXKHhMhQY9Ixeq3HsSVPRHc40BR6DvsocA8bwwPgObkHr3w9XxPh1qBtr/IBJwWCW25f2mJldD+pVcrcKF6gZCE+bUVOvRNkJv9w8dxfPG9v1nKmaTWvHPF74U3fTV+bUhWBwfGm6JZb6QLtGdblaaIc7Qj449DLhUrgYBb2FHb2vuQzfvOENUnFx3arU3Nz0eLw6uRQbV9TZwLOaWs7+EG/hCvYctt1JaSRoRCnhbhV94qGj5dh3hUdCCG0Xp29EUxTUznobphxmGGa02Sm4mT67kHGHsX60p2K3EMguGK6WLnTV+CtJ/ea9SU29ysoCnsddxsf5iWyUeKbpyI4ye0KV5FAWWh9UJUUa3ivgYtg0cWX10E9LMeRu6lvOcI5VBn1xE+OVzm9tDKduk5yDbEOgIrhZ0jhRUKL8Y/WiVtFbECI8x/s9mbHbL5yHdVhyN2ZZmUuAk6ttLgkP16C5vN8JuTRL505X/KHrt6KqtXkbZPuABOHHSBbJTKWe4nm2DmMBxO9Vn1YuIf/FhFbRvlVjVVTxBrKW9jjlnFxGRp13x9fcYXZHZoTyNtlck3GdwB1RhoEp4XCWsC+N6y9mnHN0R9pOWucEsrnFlHvm71gs3+ijvFsTHknnpZ/KAQZyne+6uCFR21W8FxmPQMrcTMYloCHoG926OFMseXNms3MAJJHwzTdiavU4qdCD7ftWXLJgCqVCM3Loevn1fCMIjH8s3suKn/tLoYTO9lxQWluFzfgUlZYbWI4LmfP5joqMbxtYev89IFa88JehJIwdc6V6d5r51r9pNsyfjVILPBNZIjrHNePVm1KK88Lmnj1yTLIW7+CaAA5XvAyiNYlmsNQWhuBfWrdrmxW3rhZzc3twt4YjORQPvDz7vRcNC9Fb6MiAn8VLmdHuLvmK+SzUYRwPd4drP8F0qmFMzLsbilk+2hcECWK6vJoNwI09G7RyLGiEROfBlMRtr+y/il2wUmoJNtu9FPOCuqVmvLlKk3G7OOVOrTZpfMq4rlw5o8Bu6fDYfFd5udbKrA/2A4214ur2qUtMf5R1HH+9EUkBDxpv3UnwxuCaouRdWa4T9nJu54NzPmYLtai8vLlMsxNcuVee2krWglviLhTlrDQ4qCjNO0ATYKWCoh7Y4OL3HJiCdFhOeH+8F93jCjb8Wv0MruQw5gcv9k5kzZPcI4caJPtRf7UPae2dX+6QO2PMcmseACtHOcjKb3BgJXeSSS3BphG1N19Ihck79rQ2MnA1vUTy2oISF5miKpIhtQxZiw9ZmO+vu2UX58FIB8r1RpHQDTm15gjgRgnf8WqDBHRCSOe8U6evrLaPniD4lHvLUIVJK87xnbuoOSNMqsYR1iKMiZpk7mKZnNpb+97HYC5chnN58N1p5AznU84LJi5BrctS9QyqRPPueWG5IoZxRjEsw+1buA2DHBWw4XrZDYLNnX6vgU+G1y77SATvipFC+6WG4CdtNF5LsyTOmOuol2PNUJtrYSH6ZTmC6JP7tJ2IuMURS8fF88gGdlQOQ4TLg9KO3COiq4AlryI5PWmMgtt0+8vBQqlBrTx9omTgvvJSD2epi9gpSN0RKdccPJurV3JqZ1RJGgCN33mCh9Izw3KDFgW7KU4OJTM0cBckTM402PWxq+g37fLm02uJVW0HkKQ0pvFfzO+fIvvHUvD9iUg5E4d+EipW7sCaptt9eX+QfIM/uNadNqM3wZ8MjPe0h+m4PG6FaaCaEA65mQDDnTnOaysW/z6Mi4p686+0/JxZoWdjkU/yPayu9wL5PnGyBo8ZMt4yEUpjQYdWKPT8AWrrzuUe8eN710yVv0t4VsfJj/4Grx5khqPinZ60o/Y7Pr93B148GKlSIrY5fFtK+DJK28EHKyAZ4wsOSx48k0VzqPHSLHq3fNJkdH3P1es/Cvp80D5sDQkx+I/1Tc3Oe8IBwIDmduQLEVKoFV9L/WmJAcSi0DUW/RWWs0AQKkh0kbb2usx9xPDyFFB3rfEc0T1rM6h2XFzCOhGFcul272OEKrmpwp3KfWYTA13uISkqrMyA7KnPoPklqapbAsndbiYjhOOFdbNJ6SYCx2+wH1Pu4nGXG9bN9RPv5kChb9lt+k5TKbO45ktJTsAUzXdf6CeryaI3JZSlZoT6z+hUZrfJpW9FHvkjfIWbGYv7I0cV4z9vzUsaiZ49PJlrl9TkrS68KzCLRj9yqeFF28PJLF4l21jaSYyg41GegZ/N3Vub1dNwTxsowuxj9z9eS0oe/p1cWv5KGllHUipRqrgyGbJbsCJZp4YuyyrQkcwVImrdo2lfHQzQow3sNvbxxxdpvAXClYrh6GQ4PXdg1hppS5z8qPuzqgeugrFKjqoCU1xaigsYajdtV8afNs/v6TITnvImbdoTmGYfuC23Euk15UsW4CgkBkgdIaJkGM7LDenewqQKDMs3GXpAiZ8bOptbV8xqFWrs4uAOjB8BdFT4lAFVJfgSxH9UQ67aCGJX0LQ2c94mZhnuDOnrd6KkorttfVrn1DwCCuGdtRejivqAyAoDCI+Fmcc/F9wUR7W3QUfYiD3ijPaQ07jzA7+yWQTX37nXkFE6kBrA7oQGKpKnZt7uFA63kgDNATbWNUuZ5PA7tVGYQ06mJaM4LR3uLs0ATdKuBggN4U/VWO05lFEWD7Be+IJqS5lUHjxQRrK3FzbosrzpxlK2uQmn3j1dr6bx3i3B/KgkaBI4tMWgM755tB1CFWZ5tTkd6MZBkQRgpHdoWG+5QmpRBLmJPkh+ZMsPTnBWmeVemzqg6twdY5yh2Yl6bjFCBK63cXksCfZCjY7wcReSFlMPNYOIxclhjSyaa/FSMXAvA+KoWS5c7oUuLAxA+6l3UDz2uU9NCVrQVK9S+44FQKz5j4HH03ovnR84vRZs+80iJ49iI+ls9o1HBfX6MhzalsSqU2azDI8F0hitVdRF0ZxfEb2SwqbeTqTHuBHPMEzEHUVVKx/8mkGws9LDhLmEUpgU35GpRIzPmAMchXafdN/fGPZbf7X4sEC84YUm+LyN6Q1LWSZee6O0r781lHHt+RrCcLFP/ucTrYIxlRrhhvoTmh6VQqNxBGkuK+MGpZ9DtW10oaM6pwNF6O3w0ZfsZBV5SeGYvQStkO72aSvlXqHoP7DXkNLtyPkk26WhwnjSUWyBcXf6KiTuqqKU2gGupxH35CTI1gLj7h+GlxYk7cS5PInQVG5rDpifttH1fpLWduk5140W8M9C2jg6ba+1UAwk2ZNuq8Irp0RGz9A9QZdMiCAa2vrn4h2eTYFr8TSFV3SdvxdBQQw9xNMEXKqbn8w2el1Yy+RdB9FhJiX2Bw89lS3L6d9/X3J7m8HLPrf1dPX7OZagZo4ObncbbBpYNwQ7fSJKO7ufuv5vxoREmkockrNUUS0JSmvKz5iaOuT94LDY9kzVPS0MkpWhaBBGeJXV/vqXpV0mh3Y4EzVSHpbIfkIIwLaSVRMPYzlKwAdqShvkDtwXpK7SWheLHV6vs34LvwDcjbZF80aMxCxjK3lH1MB2XxuaJYCa8S8Wp4oQaJXqguSzHg1ssEQAFXRVsKm/lae0m1IdA43LF3EJ230RlZVF4FMitxubftcascOkSPEmvKJbKRsjY5dam5vAez+Z27IocCjdcYbHkWreuhLVLjH688KG9NIspQw2I9Ghdp+dkQkwNSHTSJ8YexRy4BOa/oYOpCKwAx1bUIrxnsC9K6ZwvJGhrXOZmt1MLwvH87Uqm/eWl25tjEz+VuFGYBqk//QT6+22AsXdDsj+cNde9pnlokgTd5pJ6tZJg5riLYyrs0k9mD1dlbKHRdJNpOXcaYWB6tKxk+PQc9eIIycfbY9lQ1NQwvcYMLaEs2Vj/LICLMH9LigBppiXi6XPIqlXWHL1qaJYT3xpuAZpClvCJZ9BMfzpTt3TBT0KVB7GJuci3WKEt5aBeRnoOuNxPBrEoaflwIJ/E1qJrWJseiaI2ODZLyacMAc60rhfoNfIyjvjXpsv8eKMIm+t5Ba6gIVIjE3aNqIloWTh/evEqphx3BqKmMvHQgJJAJ+3Rv5ntuSkNPFpq+yi7UWfvahbrpib520JQYqWOH5LS9/abqpbGAPGxqo/MOuN2zuu8obqy9/OiKtyEbHW51u6pOZY6RUBbpGb0PJu3PNIvYA9o1j7npQv0+Tl2IRoemvAsD/HU8MbMcOjvxFn1s8u5bEwDPHV1wtNdyc15As5KhuaDEEb4mYqB90RjdDr3utACP551cAZ9bGWIVYgWTLyIlEZWiyIKHoscb27fwLYYXqtKaiEcXk92sVI30SuHULWP2+WvZXME3QqTdWzF5zru4irb0iY00lF1gNphEEhTsRPvlsHXIAmZkW38oiUwIESR37iOafsQP2o5dVANu7DVsBJK0+hgvX72OOKQP8acEAKmS34sxXeIpCIofmAHGr8DcEhydP+0o2KQUVQmUH3n0dspwg9NxI4Pmqs0mf4ewMbGqrwVe0I2+mEI4XDb42nhleDtJ41amwqDDZ1+kpFeHpRswdkQ/6aTxFPf+dQOKtKao33wxW1wGNUbR7/p4frI+6RAsBmb7hYz9zqX+EtRjEsNFj60vXJ2LQDy6l44N/nkhh/IZ3N44KckmLXRr/n2pfcVgNgXMQ40pKLFVZDyeL3YDi1oAjmCvo+4N6M1yH1y8rEVDrOUCmrOf3fXgCgdFWmWDsRuOmBpwiqs97KMpD/v4JdhDy6baFiQ+pdOwd6qWoVIoQf4iqmcV4m45qYcondrZ5/6ukg0SAUSR7SJ7TWvml2E2D7+Pbfy4vrUDVgIyALX5CTh2tWmRNA3nRFBPRfIz21IUI+5B9LCAitKF+o/S97ksOHELudM1oNWLSn0NJ/u9QiQZ6Cvu8q55YmVA/elhefCwrSnpBk9EO2ca0pqDFHT2zFKdgn+Zw9GJ8qNzkEyyV1vm1qVEu7ulWzFc7SxJ9kYMREnMb0KqGvczc5xv36RplaPALkXsetmgdCkOG6V29l8mD7k0sdAUvROQxfhIsO10Z7gMVqbvHahjjnfmcdb5xErBl7tc+iynLoOAL2zQunrMzd9bFRd5qqeHtNWD2eB92L/jTNPHZLO+hmAkgNf1R+YPGfiB/EsEkQ+VqsAiPWRR1K2eKvLU5s+zeCtvR7F5Sk9/nYlhBrdSee0MLILc1GQzFXCRoqGDVmX3fC4h+jDL2kBv172bBIxXuSyq2UnZU1aTw7RQ8YghhTIlmFa8hFwYDwJzyqrPFBqz3MbtTAYQ9a8bhHYwyfdyBqhm4H0TI7y/oPEL//wvre4DtmqN+gKfI2wDr2s5EfyzMBkJDhHB1cxcbg2iUSmwKeGd0hNRW9ovvXzUySpkhFG5e0EiubDlnXfRlQ+IpD8nZGYe7XACYRDE0mj9JWBH5g96Jxb8yRfxSEcrm/PxnAYTqw+TteTwthR1/OnjwPoJQZTaTnOuNBIphCDQUvxfuGbnbX2OO/cVVgc/gW2v2tX8Qj06IBkr6oKXkc1xpKfcPrgmbmkbErko0TI6YwJtRhy5JpgLmmzSiqWHVlz1X7hEkjwvRltjbUSHa2XXSs5Pls8vGHUFSPvDHPxQF3D/TkCviXPBaEZYZFo2QKJ7GP9huy6V7TdDBurq94jEDtVMl+7k3LsCfCLHZY0Dn5M7Qc4wlZB2U4DUFPR+yeG0Rf/CsPBdAAU7H60TOC8atO99QpCF0hQ8QFx35T2MCUurB27/q/msE04ho2LbG8IOboFtjwVmgAvJlnkrLq4qFZo7T+Jtl1TcRxNxjPgn592LGwLd9XZmdgFwZA5j3BPkMMJxsc2WLGhVnZgqXYpbH9AwkvEx0UysbJ3JQBP7KBdFzttc1cnR1ySBRJXCPwGpdiNNKCBNDePjM+n1Wf1gckS+VpjmfG6JcPkqVfiG04vRkTeXc18k7P8j1zaqw86SKt7TRWxYYB2+jKxOXwnqxZY0FWAitJp5Y0dOI9NDuB29yI3oYMyvCG7dob9192vG6KQsltwqeBVNai8oizWGa8uSg8eWYyWY6ilsWY/mZOy3yLg/GJM8JMcJvc+K+2e2W9+rA4ZK+cLkE2xp9nJljYEVe6ZI3g64h+ibpDr9mAZft+YD5/nOCmgAYZDzlbIwTLE/Ov7LjFL1Dv0MtwjcFErNeqhzrxsuNrTWTE+LcXrzPuOkrnYotxbna29cDE7M3qeWbCI8ph5lPkN8LATNM5ctKkD9IscWn2YfWHZC8B4LKWzrdTQy0C1x5vZ1KhonLTXWwAjkhl54+2R6FyEnr8CgMm+RL2/VCSGFbbsEmwPuESZpKRbw7D7A9sBU7kMdyRhOSoNAlcbHFvWK/VleO3XcunMZ7fj3IsmZsJAfBUG+hLQn0sBFlM546nKRdxc68xp2nqMyE1z0vfJPpQ4tU1XheI3yfOUTxNwGIG5Z7zebwZgpL9wQ7EivfRpU4MReaPBq6UDV8Y0OCuVBuWfuFDPYtAoka3c8qkn32TWUrlK+Rz+TZ3O94MZBWJyWHV0V3SwT6S7FyIZCFOT1GKIqXJCbnsGDN1tixTBYnVCK80JtUb9O5un1sHXWmWN0ZQPQT7ZVmnAPwQu98A9CV7vdZMPfw61tDzmRozCNfxM94kgvEe1eHxmtVMJDBdD9WWkv30U/6wE0+HyMVQe3WmZ5bpmRUu3aWo/kIhYOgiq71u8Lu9uKuQSWOUY1R35d3cRZN0BQeyCq1SfRh/9mH/Rts4iRxXiOybex7KPYynyOsKbspllvzZVXUJw8We0ooN0vdLXrP7rTfw1vBHFNcKymtuTc0MYJLgKRJysmISMJ0rBi5YxjGy5o6ylq6v/AkjvEvUmioHN3yBujUJwezwndua8L/hN0r8h5SP9QQMGO8E2eT2VYYPGsoW9KYoR4xQp72Ghjg0TTNcjf0NS8WFZV9HfnEpOiOVDz4+v7cR7MPSBVL3O/GC//87/qomwDdI0o/5yU87zRsRVPJAfMPZES+aA3tVfL1tpNQmJB55p/hOfpSzUT4SNFNK1DuqwTWUB1bF3FSh3CPQtmi1ceBBReJvAIH737bwyWfC9BmGmc3ikmeWtUGGh7F4Rmf/ZnITcPPjRQGMIpdb9p3TPNqRl5Rf7nCktRPf+wGzOyMKB1j+7fI7TK6nxoxZRZeJuqzyw2gBwg2fzDFv0XlxwvdWFXivN9In8xiq6VA38kLord3XAl5xuGFgSoSBAifilxotZpHZ4x1FCXaeXVydIREEabz05UM8Tn3uhT3UtElHLKF7HeUlV67tgLaaOPKtB6saY/8cXHPYz4syzwYz6Xr0j9B55fPBcGw3qViy0K2DQXjpJ8j+4DJGBmMRAhPGvigUMzFAmlDBkg5Lj+T+MjbmZnirvUOP7XAKDWcWoUPoYGGIyJGe7KarN4AvDF/MuMNbaTpnlmwMrkRnadiV6uuPb6hpQR8UdTQXRMtspeL/fhFJz+MO+pnDu4kdJv9o73bhvLhk46PKKi3MJtkGKAuQlZ+yEWEuepylQWVpfoDa9CrDqbR/m465tQrCfjKxgvi6XLPu3qrN+XMUWR5yhPJrIQmou/jPpX2BwvBjbluYgV5Yxesisp+hbMeXgQVZlWZs81uqLNeJaH+zo0NvMwGlbIbkhsIkcNC/9ZwNzL+xld/FNi3HcSirPwfNwYtC3WB8+yWoUALV4VrXyeiu6FvyW9P+iK0n0ME/GsW3ODYk4on+RK/DJtJPZRI67kqokoxh5qsEpGqJPHoKEgmO4tVDcX5QPhCy1+DoT220LQnz/BS1ca5kybUzsHsYzTWdkUdTUy5qyOanloPuvki4Ozt5lS1c9kztaRvRK/qfAzipgraQxhcTJ+6rAEAAMvfbDpuG/IjquFaPZoRx38gQEu1MygZkCTJUTQYtVD0P3jckRQ9NJESI+h0HBY/Ciecv+6x4rtjKrwsm26jMW2pHsLy7LSTx0bRUk1/B/XRkg+R6DOOkB4o6IuswnO+C11745y7WincUbU8dajmz7rxHwFnkHmskvV+DjO7ybJGKGuyTm4oSjRVIiKsg3pYN2g4Z7NAxHq/IB9yM/jzZ/EETzkBRJublI5kRPCuhmkLVFSZWWTGqKhXiT82d8LCLOEeXHI4U0rR9qI/fHIdn6Y8S6F6JawRwLGS38k6vJ7MEW9+i0ftUoW3dxBvL/sJoqVjCcxQQJMpsb9BIT4GsKVvpYo/865GV9P944B8miB5skcgQ9MAvWjH8wExTQBEJTns2BDsi/z1UmC8NA2FsTDaFXR4L7gU6D/H4Ss80HlogakYV1vSBZCj3SbIyWpowxWAi8+W+OUmYh+KyELW2JfhT1jLtUY25p966vTyNDo3bIiHo/9NwcvyyGzQDSB/MIi5NBzbdFtcJ8MgS2sjoOn2Tiw2O+FRX06TTkhQNoKbzit/eNEpRnnlGuxuYWnWkx+6na7a+RVy4heVtVLhmGDRpuVWsvH5+tpp+Xrs9DMOYFn9BeKRJl0QA+pocTRWwJdF9N4xejnpVLzLY/plRUs8SjIND4dDQHzkQOJDd64UKJbdpYtiYokW8ghb/2RgYf9Vdoxp5nIjJhoDOjcVwJ10pTO8vGVvpMQdHbF4HtS6jfvRVEzzXzf8m3C5LIF+1a5qABB3DwqOwESNt4Mgoj8zoqSDxmvnEu73yxrlBQ8qi9cBezzRbnfdIOmbpRbBtAuC/e4vKJnzH5iDyC7FOqfe3VkvNtO3dhCqy+aMYFrG7f/d72MEmeYBuOr6bJeVGFU1skOinvuTcaMQM8Jfwp4WdhEk6rSFVfFiQEdDovUYdj2cCRd81MPcBWaXKCZj20xmS1hu8njoA9N13cLksuZZJd2LGGFi4k1uckJgkvVD84VFHwS2V8wUE3Sng1i4i0MfUgcDOxPJRKO51uQnFEwKWNSQQhjtpQRo1DJ0XgWv78qfWTbikDt84oQ/Y6qUOTkuo45FGj7iFlLagsYxWcKCc+ejFJJl/HczaM+GhTwjxtovVZQdOUy1Axt2S9rWGEz0qZRDwgZOHdUrxw4QOLwdfuRBQsDeLTqbAIo1r7TD4yxUv2pkYsqduS4fOmEOIuG6oMmeFk2X+CdT3sJzqXd66KKaBWI8pKiQm3sJiItCX7RAho4D8l35G3nWu02uICmCmsgaSIhFDEgPZCfJrtYL3QCJeFq/rNDR+AZv3eNtHut4wKz7wJRS9jajNTYdjIIypDtwqImiTjyU3hhkixSDTwwLHs26/0W91SDm0zjbinMC2mU503KY6OZuDeAZhUy6ZWP/TZG7HvNO1Yt62jmDji1tADi+u85iHQrnJk0Vby8cJvgbV/ymVkXnGheQdD+4ZwY4g9PZdBQk5NJvMGJKIF5MeGChaz0IWSKrTvJf3C0PavhHGxVYk5ijwTNwo9WtVyPKV7GtkolbZVylb9zmITrfJ4qT1evfXaR4GUiRU8+2nOEghS8ReobH7mxRDoE6y+da1ulB6RGPAqJDVXs4md2yWKKFmeJ0R5D8bobgQs8c/JpzUsqZC/8eMA6RkwdTk5M7UUa2C8OaNhSwGF9XA8tN+Hb+ZsTnb0jEaAYQ1JiGXWPRhygkccRviSM1RXOWayXjifHNlSJTienz5p3Ol34K8r/7ut9LzAfrDL+kEbijitrf90Q9aHNoRDCvYdL8dTBVNqiVaBajTiIFgQJbojncKjDHf0bTb6eAukqOI9hti8E33iAZb1zfA4YAsxo9La+iRBjg56eLy2qZMfLcDM5StsogG9q/krSMA6ciJoaILQf/o++DZ+ztIZHJ0cqyvybzmrrLLbWF1q1Fx+AYVxun5fQghqDKqb+BpSS9iCy/DzHxCRIpfxIJMALAewfVaq2qSGiReYIKdnr3DLGZhCUfryhEjLQk1EBNnbHjiJlC2ZNWTfWPoTGZ1uCLm6T8fPIjPdaaEq5uVjGlvhez+rI6N00NKRdzfAu45E94JkNQND5calZvMFH5+UnItxPb/q3fAgTpAKpn86Do+BuLmdRu7e1+NK+wpXHPaf518MnHsmdtMYRK+NZzBJHmpIPANYD63ngC/6ZfPblRYGmcsHB935YWpwTPaAyzyf5U8fU2L3eN2Jck93w06Ex9qcjJB2MWYhDVh9JoDz0EYvClMV4h96kf70HRVsBL0cL7uGAQqpGgDmXF7EDQ8GqR/OR86GC3yjh1uMc10N/lrA9Un4sBUQItarDu1CQbqBn2w+xL00Y0t7tm+GseJIfQ2fWm3A4qQVEfQkAXCfTTL+0lreMIhnzO1oOTHEbSr66T+SWwtyGBdrdyGu2x5YOhY822pGSnXL0eQg8UltiWEfsnnlhrahxc+vk94fjEpPdW9IaXq+gl8byTTSytyO2ZVOsGr3c2oA+oVTubuA7mPp+9MKPrIWCgklEAmZlriuh5UjZOXdARLVdElltWaiP7M8MOCgo90ANBT62c/ytHFnl5b6iMtXKxmKH46NXqw0JLSpHxk3JuZap3HLCwYzllWSy7y1QSrloQI1bu54ELWAmOmxStPQKl/CUvB8MF3xzR9TpQ4VT5WcAIISXcoP2FbXBSPsvbMc7zZICEzvaPAHLuv7+FZdyW9YtDE0UbeYjIKmfsMXevYbBVM5dxf4MoCf1Xgrr29l20dPT90VF6fGNOFAiQ3IRKAiuxt9i4yHyradEoiTISQic6MURrxyZogJx8NqTW+HK+4iSVpYfd0+i7kEUN1QklGiV+tDug6qVUQSeXyfLfG90FSSuN2PSUFWwadURIQ5grR2FBfcSylXgZUvj4NJDE11kyoeqM6ZNRAgCBa5TMriehdfPKlUfGPyIaBc1LiDIQfpx56uA11TvvlxOAU70am8gq+3Rm7H+Id13sCo6VRI0R4LfQUogTLdnqVyVXF4EeC54buH14P9Y2z/y9aNPwVKmqvAIN4t8+Y2HZ2cOSBxy1QT3QK0f3oy6WtDoKZVVKbG75c6OOMuK+cdjWfmny//1Xq1pulhhpY94iqedU5ucr/mDKImetgzvZKfPM6pxGUgtGJ1C8we6FK6IDycqShD8SdYKGSDpUOEBJq0ytyzEa/qfpz3V1XfXpBzjpYJyLvhLNNpMg+LrNKUBST/qYlpqulFyiSY/qkyAqZwW6nZCl1/NjiseHcpN31oSvoSPo1hP59eYGoGxXkNKkw18m1DyitWR8PfnE/cKsFcOI71kyUAuRoew1vujxnpuNhC8sz5Kyl6dqnR7Y4+hXPjBLNCMUfi6Oe6G6ULChlWvb9E9CpE4atsLNG3/XXvZMJ/Ho9+bKW2plX00osNEgHq8M3uU/5opHdaEexoQVrR5z6bc/tODk56Ce8PwubqrMEI+uz8pl8pzFtWihBzwcXSs7wPmgrUdNNszLyq70szrXcjc5cCpjCiOc/S5PwTKQ5AbZEc8SKDcGDWCNWSYIZDyxTpvz0UNEG4zqnMzFeMCOkCC0YI9WVrXQ3HY9MAMoVLak6WExyfh9S151dALk3uXBQJ3++587I2WVstBGf4l3oqlpVjAbmAJlQCO631UPkVKMFmhiuZGsENrB5l0T+GRX3EEBm8+FuQ5QifLbL+N3Vo95RR9rygP99p8LQW2PzTr746KDjOB3zprxVmYch9PKELDcZIZgBihI20JEGBI1BS1cdqMYpv657q2bvJ0iP5SPxaH3kZP8u3z9ywa04V9uX/WrYz2j9mxXdTooCYeG9yrY1r/ptOpLhvcthJSN4AfWXWs3YP7J50HbHGKNB+Le42XHSLySIqqNOLpBr1LuTZJLD4gIvcwAA3C5tO9P57BXNEId7NQDSTZB0v7iICCpavxwzb/+fQtjIg8EK+mBVmP4b9OiwnIWEjN0+1RnELZuDo3LbfSeYEybb1bxKkMicTf1FLnndeXpXzJu728KpdTQQ+FvSUXV6XHt6186Ab7DmjuG1A7XQjfO/w1rF4YN1OPGJODSWfn1Z3i0OHU7zPNJz23KtC/RxtybvPQwjUKbPZRNAn2aIfOHgCugxrW9rj2FK6EYv0rsPx/sLi6OsoeRfytalaano045CX1NAzRLCgWHvxMyxK+U5ekvQAgM9mXE1TT2zPasdLG1HM8tE7Lp+2oiklDzWkK/ck9kjOKc8rmpIx3FKxRmRIubYRx05Csw4M/69E9uUcxhLbg9zcxehW9j0UwE/f4mQbo9uX633sC4RqiA7D+cut0Fj+enbPJh+fAgd293nQWRcBnjCIeRsSKnmQtJIG9wjQ/yWUfTaCWDvZOFJPXJ+dNlomD7fZSu8ZIkMc2TN/pEM9Qrrkd21QBHeuG5egLrnP5+IJJWy/KYlcWMhPH8u4/iH4lMWDICB+bTEgnA7J9F4R81AqGUbM199idN8lHJ7KBAUa4E9Cv4PupIveYabpP/8Rn9jpTHgM+q4sDPZTjSfcQGTNzcCfo0OKgaKa6l/txhN0z3wqMfTCcB9NNM/QALMEFMGcfhonJwTkbwuZjDt9U/qOMWGZDaXkq/HoryLgqIPzIhzhuhaW7wq43dv5KjkYDKiOSZqtelWIionn89N6Tubh58+U8b0HhGSRCVEhcvkB8NwLIVAZXj1xdxjkxLl8hlAF07kh0I4QH2xLIZLm8cdUoyttg+imemHklYj5MGMF7Qjiq8/eJjxnaB3vHB3D5Q7API5y7RFrzrOpg8YTWvbUYmn4WrSAFN8mO1ixHCjf8GDCSy+4ZhBfWFrLJKmY1aNFkkCwIi6i3gzbKTR1XEQlyzBKDW4tPpv+UIHb+FghhcVyLy1kD2KvIOhG7wxadAyFy+LtbJLvsPuZAd7YfL0GOyEY8/br2xhkSs1B9KZTHXT2AUkBZAUJH+u4K+bfjbAbSHRZO99F98MByp9z2KZU8kFND/cZbOF7nVtBXFlNeAtdUNVhrL3MlVDylejdUckNkZwgW/8bSPYdeiGsy8/A9gj2EzSgVEGw5ki0o3Xa73+dDw/MfIpymkMuyjJPjgAHJ8FA8fSeUpunEs+LfYudqbJiAptWhREH8L1gKhwV81jF4WPi9/KDHOxKwfhI91yuNpnfF9/XdsWLRXRHjQ0WXuI6gh/QrSACvouMmz3TlAb7Ne30xebRPXVU2Xj6TDInaCp/6mZBHI69jJ8zNASLxlfzYvVToZtyB8UGyky9psFsBn33iLAx5NggIGtlRSaEygFuqlSWoKHevEiO7MbCpHgtwM7BoZUgFDbydcahFu+OlHqVVDggn58vwTFTzl8ROxs7h9dXV7N90Zv76A/eKXX2sRieZjbnMVaGzChxzltrmbRlEwqB6Be4hOEYLyhb175hW8U8y89HheN/XQ51EwTQ0MDkOGynMfLr6xNHNe91oPI9jnjg7fYOW86+kOXeuzCvCQN9NU/bMwz7hjryRcfnsiI/LkWDn+PI65f3Sz/uzHlg4jFlbjxtOXEAbnQ6Sk0Rd4JtZynBJlIbW1OlqXhWGSTOxzJmDx9hLZLlHoDHciAWCa3UScGOR+bEtJcUnF/bRSqVgp0ttL1EK9ITOMOjlEExWtOHHtRGtRKkRo73t6bBnHQzps2EBUzXfsQwtvYj5Y42pAaAze2Pv3OnNCjvYTdQIMH2QKNA9b9LMe2J4EhoTR+LvCQqRtacZQnyqqhz0/DOyODFprHQMyJILb657Jb17kFNGSRdIaICAz7bGva69pEUWKz3/Rrs+5rPvUS26tvYU4auQLUPG/olIfBZ24S8RWDKDcHZ8bUBa1mJESGA7Uoxx8CR9EtV+TekLK8bp/qt7sUVXs1dszgKylbm2L7TU+vXWxLT9PPSH9/lm4csS8qPZDiExWndkj1jr/jbYQVhPQRC4IDnYKq+rU2NfrauhZd5HEVCVIqYY67POH8uoj2EAgvqRXMqoGmSR44Y2Pax6QisJXuXyXqLuocdlxoQFfMQ48W40eYp+b5Xr69Xy9xBPuiGzMSIhJreSvOZHjITgbYstpcrmfhkuTjfBmglbjF3HtpTgxZZJ2kGbrPa64CDDLp4iqOrNxBQNnpP4I4qH5LcfHK2cuIWL+6VVKPZwFU91323v1ffmcDSz6vtLb8HcofOKS6TGN4/53bbK10GPQsV4RAfCaNFOGdRvcxNExJ4/2kUb+b8fNsyUxlWwRe5A3NxYwIrlcrlOMhkPcKvhOxrbUISGTebZowxrGkT00/uAwPid4QnIr00N2L8uk7iDZzMK2sIyMXjlc8rffjPJbh3SDzE5j78WHwHOSNFYaXEBG19PK5QYyNtK4wDXAlX7uGOGjnPvuSSdRaICLsb30/K09oCJZa9tcL/2NFdyA2l/d+l3JDLYaA2+FHFYGIg7zTdnMj9Xw5plrVLUtBl3uQBbHUfNSiFwOmADHMPfHFUDIPzYvXp7qfw1Q5tKvdEwuZXA7xQFBYgWqgSjC3XaT7EfJWy5ATHsnInuia41xzpnfPue45kgLtK8Zbf3ZQo5vFhVNdypkHUi2yh7F4BB+pbdCdwJGnSRI/l9ri+7tfyism4SIgXz3pKQzF+FjzTJb9xyDME654HrWUghgTxYYn4ewYwggX4CcLVOPnMoCAReWcsfYo3HZ8HAilPLCvjJeKaJ9Pb9d4txhriHPljN6fvSJPrTjb986BKMjftdD8ZC6JxEyGaCwY/OxVIaG+gbdvcOzKELuE05Va5YWEvPljsbiew544HFGqutt56GFULbUNeIxpHr0qlcSgYryYuG5RIwTlCUZNwFG9Ynn2zz9ZGAzOl3x57ynYyymum9GAHAmVyKC/vwvZQzjH0tieyQFkzob7RmJN2BnnuVuqDSZoR+4VsumH0Noz6Z3FQn2SciQ5vjdsWL1kFzZcfTrT5ZJa2+Ot8ELS4hwS/e1lofsg09mHJRGGliJsSHaR9abT7Cj50Xe8YisR5GgMXmmwa7+McjoqhXoM/pKPafRlihUHOWn1T6E3hccaeiKBKL9yYsaCA4kjJL0K3Vs3q9Wpj65yEx9E3cboGc9lnQA0IwOnPiafiuEiu4D2EmH+6O+NgGxM86bou8XrPyu+MofvEJNDVO+F7Hdi+uwavZVtyAly9ZPXh4Y6ZZspgOxhk+bjixc2K0UfDKKcEjIhlwgsX9bjuxe8LS1C0tMlupBghRRMc9ZAl9BYehTNLkH+gjwzA9HDwqZt2ivpU6QMbm0nGUmvguIntdqzqHJx7W9mxJyd/IYfOF9Wfk8vdOGW6cKJlqmnD7u0dZqd7Z90tZgkcU9cKkYMwK9okpfH3A8vknQ5TTmIsKgNpF/U+8fV6VVKiOQLPxiMXU7gZrotvjRVIa01BmMlvLC1gtKDadoiE471Oti9BZVDsVMb+oiXuqDBalEdQXv5CgjLFKZZ/wQqpi+Sx6BUusYmrBdGr+faP3qhGJGEU/V+aQuP0L1jIXvjKYryeYqdunDIpn4bmOYvehCJFWlsvrK7+bvgVj3RIerlCV6A1ZRjzUhmXvUHBQQg7X7g22+FmCmuv3CHtJrg3Ui5NyRLyf6eYIBHTXTUPfSovL7pDDxfRGz0eQqgg7Al0jq8tRc2Cgsjb54pjExF8ViQn6DlgZAYu0yxd6he7ACpNxVLwjf2WMCWqvkqkkSZpxAyd3KrUt8ExG8c7lTsE7JGFcPjB5UNqJmViJktKviYeq7prCkv6NjNCwxK2KdGSjBUYndRohiV98nWW5kyWRc/kae+V2JWuUB+dOQ74bKspX7KY5Xxr8/j8IqSmu+WtqY3fu3F8XMHsVPXEOOdKKkDVDnZqROK3FFotnUno9rJrMVm3umWxvfBqCmwJJGmjKGkeFDFsvJPt6aAeJJ0FosoD5ve4HWEN38fXUABxyODJWD30A9+nZjVRcG+kNmPPhIgc/FdYGGZT8UOaUG1icYcu3uoCAHT8oeehpazKBPJ3DUj9UPdlW9dsUKxEMM4hsJvtBGnM3/8sMmPb1P+OeipZR/1MZ/vLdtoLuClL9dibRc+2YFa31p3ucR5j/mzXdQT0rdM2s4JZKzpF1vyOhXlwTmRVjDEYtvwfWne3a6cJu/3fl+gtdEm7LlMHsMuwj4rUPdnx4wRc961ACk8OwxhxsrdQaTGTHLkZNJ+bt5fDtQh+2O5OrmzBPEi8G50tpfSEI54wqUCRpi3kcKMSFU78BYLuMooYjNsDGAeOMG/PtDAs8tD7oF9DKiTo3NBhmskNqxQlhhUPHmPN4aaa31vw3Ex9JPG3UWwrp3VFoBEsNrQA7Nc3t0BSkR4a9BFYouDW/r5Bh70gdYBbli7Dk+AL1UJ3OiLo4rSLIzvNpVmleN2WjQwXDULZkh8lewQdExUbvHzRqwnaXIYUNY/PiuiHJ1EeOh5E1vdP8btBwDRf+dBl3hQ1T1fRGfNDTY99ovQGZvaiKDb3nq7Ld3R+4AK4V1caajQKhC7xYXDOt75KJgrbs3ftlKZF4me8m1gT9P3MASbBVcwEcDJ2XIIvrNbKbVFbqbrLPkgVXJVyM9Vocgs5qxMLvhCaOMqyoa5xlgKEAugoH7y+Qv6vAkYkn5Xm3tqjSStPRLv5XPtJNjMdaa1plv34bsQPkcNGRClRRpB5T2XOajCd5t9/k2CV4AflcbKR7tothQn/oA0pbfTwzpdJwmh1C+04/kEKpJqzrqoP4zXfbE/z8EE6JXW94t8CHYfH4TpUr1y8ZY+Y5NS5ePIV6m9UuduxqYz1X+HJFnm78rwiGligFshhM/RU3JyiPkZ55FGGMtxauiRLsrCG+jlWC0wJxMAgVnQn/1Jg7iKTXIcIGkjMu6ykhumx9FoZ17C+UO3lnGdPiTQQAu1Dhhwc205quk4vkmqCwH8jWzQ1Y8I7xXMhWo+pQSKPv9n1e/VtIOSRw5PgwoKowZuSL47CnT36zkorSktE7QdkDgkMoV/6ABuWqFY6bk5JF8pwOmAdmDzXXrqDxPhzf+hVNPgPjfYWciil9br0OpL7KX+xyiLI3ltgFIRTv1UjFOMQaQUWYJ3EeXvKm5QNGzaxt0ezxjdfiaJN8+y2B4XBC3gLOIAjzmNElbJFztmFX92AR5vDvsWm8QjIXHK5nEtn0K9zVawCSwvTmaR4NOyzUaS7kOOTGxDgdj1/Bt6CQQCGdt1YQZATkKPzagH8O3VTKhcKl1qDRGuhw6psIuJ35Qs4TOeBtKJXqs+5Bz0pSUN3aeVHnT3VFUC2hnTiBr+n8M0wQSybF+zUViObixW0GAhIyClbIDjrrxl9BF52ECAvQ7r+WtzVzhTauv/MA6Ly6eFIJJtFn/udOzvDsimsqaLjgt80Czb9VK0d2WEK6asEoCjAM/en+kC30FogxpW2rg6mWtvWq4PFhqDtsEQtAjthbzkfjCcXmc9whzX3ocguVVBCa/hvBe5niKxdDiucr6J7EW+7GjOAznpOJsT6JqK9wSwShuPsHhWuDTfmVtrg/e4F6UkqkxFEbDFgoIFs2fvXDtmDrzJXXvDe52MoRExC/LTZWSCb9MFTg4LO8pWwLCjXx03o4MPsAQFFUuKza7zEBBBgUSAT/g5myMp7CdxkPOPj3sC/AbInRdvvEhYOC5qdhaPDGv7/w8Uw5jeTmE+SbFhfsURguQryf9YCU5/S1TuLvTYaDJpU55b9xuwbyzRblQ5HyTkis3GmvszBOzxEUBNh8EZOM7y6bnPcPoW4KSnr3VXFoaXPnvoThiew4UhZ7gY7ZFMZAGkxDFdZbHchamPMdojRBzBH53j/r82gPCD97qXLcDeWqRSSK2hx6+0V1xwXKdtqWRLNNU712dBVkEhBjpn+b6MO69KT5bbW6Wy8b/cbAAWNUUlWUIgtgz7GA/03HvyBofhkSHXWvseciAtFjekeu8JD24kZEr84w33vm04MX6rFMYAMjh5pBy0RKX01Di4itBLrmlXDo0FUk5y2ZV2E9+TzjjSvbrRcU7WIrKh2zW2X5+onzXitTvC+7m8IqjK1A7OsOkxhv6yIU2BTw4fmurn243FSO0wzsTL5qxSBCAF6qNF8hDDu0sbNKPqVIJaG0cIg3qjmhQQiaptrjfTRPo3zHB5pVNZ/WFfFQPO2wqppW+dqMdkWDzYhw2WaJ9GLgNkhf/hECvK00Qh0jbF4dy3in+LFFNnpt/OY9jK0DT4bqCJ6tagyRIx3j2dRQOhQiGOId6Bo+3yeq0OTzn99ltJo/iOm6W8XTcgDDjezRv73TUExCYI1Lo8tgF+qsYAZm2+hpLOWzXyb1c8rBXGux24kICTy+C1vID+RjU5fcwU6U3XLvQMfTWq0JR4q6CTdsc4QLR9vZ83nY8bllYC6Vl5a+SUL3vhOEX3YrUy6p46ePX9OXaHsv75vUqNpH1eJ3FLXHb/KSxLeRd2E5eCClCwkUrhxlGY0XLb1jDieoIo03KfUawAJzp9nAjadjXznK7LXk2NFSosREoB9TtWZRGJ9jx5hfEZA19TM4IuCr/TrGsZHwg8lNTvanpG+h1QeXJ8RIuT5c7L4Eriu6DcLznBxaF4H7ssxerRUB2rFEzfbGP9SuVd9HcqtvsqijHizufVNbB6ZAP2PaOxz003JxklbWL9lvXOHMMKyXEeLmFBrbFHgMw3Q96rrKIEnFUAr2+u03rTeWmgtfuPrRB8Z8BaQVOlnKh0/UXyRdJYg6+hS4eJvL4N+u95+FPcFMDOvncnMxNG3h2nSWVVW+cSgg+FLAEwbdG9GCWJtoKp74gblJpkFCixlTOYfSD0n99o8D0h6R0f+UnlA0vMDD0sezo/Naga5JxVrsiALs8OpACDN1GIzvp1cZT2ObSUztK4OdcYMzpR1tYAo1VHd+ZfF0rOrObFWPhzeKsLoplxeiLzq+NkR7tcju40LCKWx9m5MVFLKWJOnJHf+ZFfyWZ/2APtrX6nlAXyr7brZu0JBIqOqNGosh52ETZCS/tnrKGrvJ8BlUEWJRol7dvpZ8NrXjH1z+G8QcnradLKjJop4FZK+EX5IsiclJdofnHLDuFMmC7FmOKBS6DrjbFzubeXs0oqGPOsk/+DOiQ/S4ZaE2MTQHcOuMTjPeELsAmHf/Q4jwrlQ5aHNZ9z8RSIAUBakU6jR6ff03wDqjU/hf2dnsLMEdNELxIaTEpY7L06Ori1SFya08jpMSCHW7Eawjl6fNdmPHxNB+2dSwtNYjSSCWjdTxynfYHPQEDKnTtzhax7wllC8eQtNB2MffMAHUv1nb24RBETlyH3FmCqKREp5YsHvMMeT2yp9S7qZq6B8vGuQQ+jUQhNDXUp8p7LjJPzexaZ8KnSWsxHhDjSjNaKCadSTRQyuu1P4yrqIntpOUfn7R5OzWRrkCnGV/Oonh9vABy/6uasaeA5cfFuIdSpkXBafkacfAZG/znifOjzxAAqqpePc0AXjl0ggomux2HXfmuo+6TZKRngFy7yPchedMFzefsS6VQYVQ9anfnQ0QK4abvi+4XSExyEd2+a+dnXP0V7OOPUZ4z847+tWRT9jAXsIQwl2ih/oGgS2foZzZRu2UX0ZAodJ26wTQiEOlungnSUOvZU1W8HbxOZnYvdJLK5rwasC8zr22GCklE5uET4JiAlDiRT6/WTSrUxJe4qyAS0FqNYjd/IHF9f+RWy40f7K6FBj1cIJoqvXtD7PtjK3ER6q1TcaZ3y1fHWSu07Igzs9m8Ovh/X0SJ+QwvaQ2fWBC8EI+qq4Mnl0MCW2UhuO0/leY1g8O1c2EFY7fGxVHEoSPjcWrdF+VnEEmbUUlZxbvL+yrAituassgO461Z6k6hT21/I05uxZ1OX1HNu71GH8u+qfOd+FwqfN7lfd2RlOR3icJggBGN0vctBoJdEBus7+XOVr+P7brb3YSLbL/bTVT2t/ESiH2zdQuY2tWkPw0Nhg68VOLUJvF7grJTgUGTVlXkgZKEGdk3Z0sYmtv62M9ugRwBp580dshAKpZBJ8Q5fNdlz+TKZMP+37GVEJV8n0DHt2ZJ6YF70Kdub53OGN2AQQNJ31neONxfgAPeP1Xcljk9pT6TXyh2PxIYdEnBzJNIALrgsuPXotP+9v38vw7Wx9KopC4jUzIvsayLi4YY1HsBixtupYdElu454jQJgLjfM/8Od/rSQjCkhsxDqqRAmTdVXQyiUmPHeDjRyTPn53VRCbZsB7MkD+CytO2B+Ij3NqtaFlHnv+0ou/rM7rMruWr6t0+5v1fgJHNT9kb3INtaEAsKdkyk5goKfEBDGYnI+Q0wrNQ1Do2OhHYKlU3tvh/OPHykXE0BHzeoWg+BuzMj7sJT6pRPEB7v4BYKMVs/FMZiBgUzyuRE6ALKmpF11maCqs1TEIenGYSBp7Z+2A5feFB8+25nH35PwD7yJXbatbr2Io3HoswDgm3I6pQaRZe8RBUvN1PKgXQoSAzfEgYdq/VrLByKlvNOc+E1AMQvL+Jk6+kE3jfjWoBBOBxr8R+8pRnTJnyukE+qA2lvMKVQO9HKbCj/ybBYj6Q1pg4gLjqITT343yi8UUUMjUBVPND8oIuQzBSMHHI4c9PpOUR2uhJihUvY0dSLTtuHesSf/iTKlni3oAaZW1FrilgF8r8nkWYEwQzcnoVmCy6utCbfp2tfcMfLalwLr10WBwxmKyTIqRl1PoImwhaoYbmV0ofeI2UGXbTb0ul9Bu2mFlIJ5/t8wEDFX+gnlrN4pLBeiPt5WLCFSI862UKKNc7qYYaFzzM9/QcZqqQOhwSDvR+HC6DbrLLjVeb5UGqkdCT2pGIgOCBayv5TV7mjDsSIk2vMgd0ENeYmY6ujiTFsPRoAT7hesx41vDXX8IelW++hf0sFOujqGraQYV6O+Zo9KpTJLOnbHczleeSUyFt+WZaGlvw6zG5+9peUcTYs3DBPWiKok2Ky+gKRhFcZF4x+TacOu7DOxLcxXuQRbdp3JH1QGONzYGNn3W9our0yK+ykn7af9zCKQclB8ebzYFQ5he+aSqRcu3Z81bQ3y40V7ZQ9RytyG7PBOnkVlxsp3WgiQZV02O5fWMWPOVKxasRqSNy+nvxCmFrzk6cche8N6CRr9G0QYhduWmbHjSYBX0G5yfydSkg86GwNexHiCCOV1n5sGEJJZycyRcaTY143yT9j6lhLKSY+icP4DMY3ZPTyRRdaeR+W8PumsD75i9/zdZ9OoTuEBanF9DwWQcLL/iRWUdkjGcXeMA3IU70iIi9fK7gLjobPKDvhPNN1Qo+54l9r39cfyiICBjsCk/958rJDGOml7R/AKGhdlJ3GpMuXi8+0Vw4MvyrXlZPl5bB11yYzv3G2h3PwQlbUOcEUtmVJTHEPhbANwVNybRhCphFOnzo8/vhuz6Q/+3xBJxIrJFZiP5C6p+AtuRM8/Jur0DlqfQqI0YbjPnkIK4Xgzb/ZOvGDlGokYQ+yGRFLHPxgMLq7L2OFleVTxAyaAoozbtl1W2QEw+fgv/GvzMd4ZS87AsCDZQivt8nzEzXqVlHphiZ3faHu1nrna8TF6RTwl2jWKUQOdqP5g9qBobkw2MdLCv8NLbi7rTre/Z1RK28/DFZUFuIDJBaAJz020PSpFV6ZmVja6bmYtZ+nooOXwBR5iVRFfOcWUb805bfJOWDjXbVIbhcHx+3G3bMfJ49lM+TSald3brUNKfmXF9GZBepa1Enac4OXvf/QK6t93oID4rq+LbNdSBhMl8ECqMMSo3y9uK2yqrN84yPs3orhjjJlcTixVEWu0nBlqFzooIYoPt7gx8XCRTu4XG/Ne7NKZCDOFLCOMBaPodWvXyRqSIRDTHmwZPuu9nih7Ri3XSb6J4dMGDW42X/ycrvoo2jz2lLsiIdJs6zvV5ps9iIbKaEvEdqEpgD1Ako5zSF6XoHPaWA3iIp7kKLWzSZCa88asILnv5VSRSl86dsEEUanDBcWOp0DTOpPS9gNOL5xXG8JGrecvLtcKivR5kgu3j9VVMLJdp0PoXVOcD4svxmr4Sh0uts7sqmRuvhu0Z86DzZE9x3QyRKY84jE0byYxmZ7ltWfmZaSHMK8uttuHAV7sKwtc96jaJNXgtLkcPUemvcGNI+tXd65d4ygFUbr6cW9yscZM/+R0apl10TKA2yRmZDtQC8lNMedQpQojKdUnnGGeKDmtsew4adQQW3heDBBslCeT/l6tGMe0yQG6fBNOZjEJZvV5A67qw6+EMypzh1G6Qo31zHO5sm6F7Z9Ddf3qwmtXkyZU+eKttJUHMRSmqYmkqlMJVq7NVFap19OkTLhncOK1FOU8sUoIZMHl3mAIjh42u7DK21s4D1no0M3NLoM1gCh8FNCKt2Nr8Y/frctkY72qtRkxVQWqLOdtdZKCb4OKWtcoRERzZGxhC5u96AO2WGNuKIsNxKzilxJG/xLtfNbn9N4OIR6JKFIDmpdHGNmU2BFMEAuMmJKxhsy5JHtCKTPUNJVRPH7aDrOA4X1jOshDAufKCdidAI45YJWocQesfdUfqf9zHkINWLX0SNEYprWwcXuUQp7ESVebxJc0a/Qtz/8bXpbcT+qT86aTVTknk9WrzMXYlepKVNbj00yngclJABNgcbMQqDJ1WQsgIgLdPSgqu3WusMUXStG920ryE+iVFCTfJgyN2x+b1kALEo9TxgkY7TCBHJNjjE9hr1ou8F8T0KtgMAn4hdCywTGLyHsPtUmPtmumH7jjGeKUoTMy6Bjf0KE2OIG9TeRUagEtAV121OPIAJkAlB93T+eQz+ZZejY9sXUPXJ3patoIVPmBWKtl/pS9K/EicCNpEyt+5H3lzulOIhsd0iAGm0p3V4A/ULIKAC6oEiF4ZWySK1U6T/YyRSVszH8CLIpAfPkvT09bp/VP+IRGVgmhUCruGCpSLEuu1fVRNky8DEljxxihyzri6xSRepmxQgd+XVjYS6UgAZku/iLTA/Ds/kdwWXmlyLVhwZCLDRh/R1Qe1VeAo7+rSMXRgOuAVS0+KDP4aPE8802YvRkysM/uZwJF1vgM9+DyFc1hn3fjQOLjXvCo05hIKjSJXzDwIN0LFUbiYz5ENFVl0jLQgRt1/oqMN1RO84qdbLE/TFRSpNGFsTVOd7DdIMQEkl3Fqj+r6X2dYTjVsi3oSOdnAHPgGU1ojNzC5G5X5N1mUZy9qsnk5qEntColFyMAuOJHc98G53RKs+ZCHi3TCrS6HJLS1T/h78tDXcRLgHx795hiAZi7gz1/OwRzxNevSaPhq5uxfZFgLKNpiJTcExv2qRbfPGjRKZmBvBEpr7k/GhdI5aU1ENjsUC4zTSzRM88PJfcYZeCvIcncTxn9KKSlVeEhLHnXgFh3UeVcULfvU/1+FdtbwlpwVMPdcLoosle1wxDYdFBE83sGG9uMij0ibxk8hvMsPAkFGKJMKFFRTXKYWLTboM5fCQvLET54KrhYWOFNb5Yf9NMxnHb++hF6nO6CVprPUzjt38gJ1txc0wLkOYVkZvPz0ltMjUoEARN3ha0AqR+XkHqe6tk3MfquCV1J+kgcbLYzI+BFk05RzER2N57LDreWyBVgfb07gQf/0nhhVj1Xc66nUolANGugXd9LUHclc6akfG9ttUMWSKd47DJX9AEc/v0bXN+5PHMltWLftDaSbv9b2Je+nbQ5EOryABeRfY4QzHs/zebDFE8RIveA9z2yTf0XyY6J8OWFcsayn3dj78oNM+pDtnKvu+UpvuP5HsoWNqcVQVnGBVQAlnrk4RWl3R+oXz8xUBssu2K3WPfVB7zOx/k1cRXrbZJspceT5z6UY5b9TaF07bvlLXNtqb9U5IvsQfb8z5cJNH0Hd629OUsS6FuO+fTcActQeBgHGL66aSl86zD1pYvD6EGQFIMCcEaN1KNl3p6CVaHtPq0mdXNNHy5OuZSrPbNq4x+W+vSq5GlyYPPsHDq2Xq7031PF2Ehl5j1DcUoS4hVI1fusyaKL0/ovZYr1AX2705quXYk1CXSLQLMPdQEpKcwSaeb7vVmNx2JScxg2jQcPUfbn+/DQIQmnB63KzQY5k5L6p2ilDXsFv1BkO3ZN0KAc0oFJCiY/mJmYxbzVgtGTl+y+cVatdR8VEBGM3asPoEPOugW7ntxsMFmHl8Jklmtxs1eWn2vKzR6XPn5zru80qthGsMgHXvXFTLQiYnvFUPQPhk/08320yB0R5ScFVSyT+9H25jEK45i2W/L8PTCfzW3Er4pl6HD95WiGLG2mYAA0VJQerrj0v5IDBPXq16Hv2+vnntncpMAG7YDimh8MRG/khhwFxII+xEJRzJV38OEvCvc13HnnWAPLAxO7+iuTmiBkEnj0+kAhQfkNMuKMJO4zZdmaG/X5ObhD4HxkXobGfTIdiHxGkPY3G5dE1tJWC+JrO+aS5mP8vgkTNKkBW0J7uOPzlvEYVehmYWqVLm0+Z9EvKML3Wvq73Zd3IeSLtp4USv17cwOwyVfas6jWPbOFE2hBMNce+Wc1J+kmYFybpSpkyMbn2QhPFkKJcYlYNNjc6/8A9VbkzkOZzxBmldJ4E9kRLzEvIIKl/W2zCIXXaj3Am2rycuR78mNjl5q8pvKTbTRPkNBHnPgWco5w0cQHs/L8wAdDPymlcvaB8dMj8iiNDr0cG0CRnHzXMp6BdCuHE+l1K5NVCN0CiPB/LCwPkL0ov3Z1m0c+T1T4wGXrTcViybeMaxFVDUEkdUJtHkBeVDsNFF1yqL0dieuVynftHCsTCdCsvzAnXoNynQJTsMldZ8YQR/wagDxFJmpj0KaPxnbgM/JIKyph1eJNCQeCGlJUZswZdkWunfd5Chi3FpdHKfbnNu+NEISXDPaz4U+ukXc9i9KJHc6jJ0NzvE8ejWPJQGq/Ya2ry8Yp2vBc8BwRxPfGyshxBrR3h2oQRQJGhU6LLjg8g1tTOY9TRlB5OKzjS+D5Q6XxcSapJSfkS6LSvuGH2qIOFdpFd3HyQJ4BGIVygVRf1SIT7b/UYjBqUARG7Ob87tIldHS6TJOxNejiui4wTv3tWBP1MJa/s1K2a4rusJms1yx5C4klirr4uCvvO+ZRKjKNzgl4LNw2OZR0F0vnD55xmSGEBvlWZtMDSQuY/Yh92Zi2IuV/ZVzB6EHLImHsJ7GGA+TdmrZ+qafTK4iPvbePa6xELswXcuJ4tl4cZmf8oXp5NpgOstJXfcmCtwLOrlrULJOZG0HPNIybD8hm5KCstyfMuIT58udL2h3fdqeErKUbswlFjqs/GCnS7CB9Lng2eEq1faV04mVlwRvHjc5GxNmD4nZISlKcIgsNvIiFe3kc46a2jyKZAceXoNJfCIOscKkYFcrD6A0bAP6EaaaArGtJwp41XopG8rieR/zezFd93cXyC2TshtZVQW/BzxKvfi5vVnX2FaJ/Bo7DqQqqQMNiNni/wECaSBsfml35ne5RwZN+WL5Fof9C6Jk+dLXcSwRg+UrK5lr4YT6jtfP4748eVqBwc+6ZyqLhEmXRzuCEPj0hHhG4jDCog3mPM4X6brJXaDKi9zWoIRRicVEm3TGnVGcpUWBKYQs5lKT9eq2DaucWrtCLJVD8hnqOt+O+lm7+DE+qSR82Um5YrisPQpgW5FuQ3Cah27UBFk8KW3MSBvxgHm0JUVcIHJr+AKdRHCdt617g7rQcFq9nh7r90CNBd8Uu85EZzcoFxUoYUEn7QrRahQu68QyW913zoGOp0kIigvEjXCrzpMFfFusOSyYPdSGOBg4/BQT/0g3s6NUCff/XG2kITUxVucl909llmeNabS5rdtUhTMFQzQa16b9QjTUXaguIqgRe8qTMHIenkrwBDOJGd/mdbTeoQhtUfsHBnMcYpHF8MXpVkvztClrw5tDQfuF8OQ1llGCiHilMIaMetolHbh7piR9RMlWneXhGomKYYDI/VpX0GTxn1fWYPAvjjvBVwhlIk6DZP9au32lILenOWQhhC+boalGE1vXhkkUgeM/A6OhD+wAydRlvsGCjwPtLbzWxTeABf9fr0KGJFRPc6iOW67yT8+E4MbLX0J9VB/+bZ0Svy3Q4PSetgGUC2MFwtfa7n62rZxNuQ+1cfvxQ1yGxRCY3jfaotws+rXV7nlB2GeppCJeZ+S0d3ZbRqNqRfShwsoFNMbnq3194lG6ZY+VoEyT6e6kY+FzdrZN/3bbGiAjJ6sPLjCCFKrJkhQezd+5hF3WKxjnhsS/Z7EdAeKvLVxSHqPuPgBt+AmRA05joaHuSnvUhgxofh17+uXALZhU70CLUGe4PPlpEZj1hBf7xOjVG8qrOXBIMX5YDduRe58Iy/6mvFyMEuW67qw3SHDAUq2+VUBzyENqAsi46gqIHkuqPY5mEqkhdW6YigU1H3ZfS82kLMTdxumTrNx0xY7GSBlXjqeX9xFq6m573RBO6W1z+IMjieSVrkLl+Jo4RC+77Tf8K73mYPD6+XWvymTuARnzagJEvNhpK2uGCF271LY+Z4p019DXaLFhNs9JUx3640yBUEumcFDwqskt/5ixn1Z5EGHDoNRLishhbR4PIMAXo5FByGcHjsg31l6M4+3myeN0dyTbxlRDcWHnoZAMqJQZTz0Pd9ddXWU8tDLLzcV6lLWIWc9V4YInDA9q77Wz9wEXQWvY+HRwQFqFqUmXjYwnlbYcXEwY68prv0ciHeUv20P4cEY3luHu7lhUu4GcfrFVSV+YqkIP5HAzS3dtlk2EEveHD4soHQ9EkUUczAvgVZ+iMoJK9i2AdJzIx5ub5ks02iJGip85CvyZct33DqLjqotavY7uzGtHEA8dME6L/6umjR/WVYCtvoWoa0WigndGfza7FAqCaZuxwVmRaMoxhILpuqWf0555VgtPVj5spaNrVNfpfTBfAoWZ8MSIy2YEzjtkG4WvPWwmTeDcxpNl7kc1oCHo6SA5rglhdvPM6TOKhHik7TvmLKDvV67jaMOW5twR41jDOoeocLoEyKVpNnom8tfd5zH1ypa5Q7tcboGIodZp6DSCOTNaoaqE/s94Z4ylA+MsX6zxWdWeQ6PRr5EFwaAJQ2aq/O6O6/WzDjbQsjz5Z+YhJ6ukHcTJCMsDmLjrcCbysxovOQcDR9HjQvVuCj2u07zWGSB6ElcGfRiyxeyc90PYdHfW5mn2YbnxJTfm95oIdnTdErhWKrcfyjRD0mz44zgqIVrRXHqxe5gNYbMbNxp0GZwTzUjLtE/DT045/mdiiPdPs9F4r3qmGV9WnpEvF7i1ZdypoOlMmfmPpTPTPYjA9kIj4XXfZ27Kb7R8d5gPdyr/KdhgqxtQ+acbMBQmh3ATv253kixSlmSUD5tW5FyO0mLwfe4lPfeg+SGq97/bu8Uom39zM2SOhkF68uVOBf9OLd16TORhKdzsdE/shin8ktQ80u9ICPXrX5dXGl8sqqekk7V6sDr8aPV9hiw3+cxUdbdqBhF0e/xGl5cxujI3De3vAnOL9M/7Z6uJpMfyn/YDhCI5qVs2vLIZVEuSNGKVeoqGma2qy6jqhw3hweRrwXUM3SNBcAP49SEXqfB6oW4T5JEia1q58ot5ZYbcJBZUxqYZjHs6ka1IQCFUQfrpx3ydYapuJ4YHPjDjtjDxNPpoG8NsbRZedGWW/Ccm3EYYUzuqdLzpmUsoWRCnf/QMP1MXprFrRU1lMchtY5eQSLtVw32TVcSxcmJYUy6DB5kjcXr7+PnMkqQqotbS8BRR/8ZU5yN/fPQIV4hCLsg+1+2HtiaTsGYLqIgb9MjmiiEh5FN9YTVUv4fHHtCBxiRrgI+167FrO520MeajnlTXhu9oaQZxI8OmzZHon+ebk/dSIKSda1R71oQCJa/tVRg8px1U9NLZrX+mR3v3rptcy1odmWerSgVgb+b9+THNJt8gAHwpWS8hLFp8jsEdAQn2byncdRgJLopC44JnqTN3uPiiC51c8wCAVohEJFya3nW9i6ZMxlNbQTg4pQcgTJXgeN0oHT5Pi+RCxdMCfsf6krJ0hlFCJ9UajJEXaoevkYsg4DiNTqXRhg9TTr0/nvbEt6q9aN+dzOiW2y1tqf2NALpOdqQvOlqsllvBlOOJ0+dCayNYwfhSz96syopUR3vy6CqJnKz8/Np1K/2Nn25kFm7G7VlfdO3ebAp7HJpttg7WSHtXr3TCVhuFvL+cX067QKxiSjo+9P/peT1ZFx3EjBMkFCRUeg1vXi86xwPhs9qf/4mNL5VQvxZ2ZBU9bk6wI9dIz4/nQEk04eGVd5iMeDwX5+Cq8d3s5txz/Z6FbeYqW6iDEykmNich07jWJAq4rqNRC23dYU9MEhBwG7bg4ByH98hkvpID2gIawErWUjIx/bpGdkGhuAvW7S1N6fFCDRj2+0Cw/2NSCIl3ssxEbcR0V0zsf/bjj2yTmj4UwPKjmifDUq5FzI0qEG4OCojsnk2CftM0ef7LPDLqDZT0doaqu088RHkD/uQMA465kEVAip+q1z6F0Qng+mKiSXNCM0RROf65Ni1qm08Gu8hgAapTNS/ZMkonhMrxIO0js69Upq9bGm+A3fpWlfrzFzU0y4OY86i488K4YTihvlPO29zy1YHl27WpZakro9ChJEWjTZUx36Bf2/29FpgQ8BeakY4MMgjUSWIC6iSCx9BSnmnHlZIGBb8XqW+FZ1OXDBh0Sflq7Cf6HNOxvdl2y83SxKkt1s/oZaKZKRAfDAYg4up2mp/PtPt6SJaJYI8Kquxr0PwH948vJh8DfsSRRBkheIFbg5qEKsnj+3HhsCXSIbi9PjbkHY4tJMBc1dKBtdgl65LPpinNVUIZYbRkswRHtBYw7G3QiHjM33WPAD0iMxldKcOZNEhL9ddxvVJuoi3qghLD2UmcoiQIeMRlZ40uoCfGCp816udxZFkEMDzmZ7yLTCtTyhhYmhOKPz+URilEPkagVGkT30fFk021hLcyOPWUezsbpoHztZFEn7marcXzIsboJID+L6wTOQoRsbUfzOvG2Vg5yr8/wothXFqIpX5UcnEv9LAgNvS9JJpa4VEdkTjkdf5KbQAcvpcG1gEKIKuGf9g+Uga+vRyN+OUrj6q3K7ACJwOMD06BWV1wstGI/iuIkKTeY3EvscQlCuXnZ2Wdelt1E/ZJUvq6FxcY7iYn7wesDi6aEGfj5gz2hp57OnGM7JfIg+RL+lL4rqAUksJ/F9jDUIQbiq6CIqL+pyYF/oyxz5W+vakdUe8WuKNsLdvDk8wA09YrdSTEWCepclKMkEZHnF2utcaBduqgclNqXimdE8abCsVy/SUPMQB7D1urMIBM9rag7AJtg4pAUX94t8y7oFQNJvUepxIQBwSorkwJkfSW3/Gflbv16ibfQo5vTHbeypTbxFaV/ffgRfszStt+kVC/F3/L35QUTXyHSbaaWusLiGBb4x30RT3zIdKD7fW47HEImd3SrnQ1xvUNsKmQijA+cJsaLBO6rJPOSxu/zxRX5bK6oRuq1c17uLiQdtHDu9sRu2mkpak7+tc5feB0tJ6prKRWkzQn5pd3trCzleM47wwMxqcBhJzxFU0QZGyr2NxGwoGpIya/FmI22txTRmIxoug7RLjg+FOfySBMKL51QptB8+LMM0tMvUf3P+p6nYLMap4DgU2xN1b7a2LcdR+ar380l5euxcKHBctUXLf2I7A78FVeccvLos4ko5cxagHXl7AdcMX/RzjHYoOk+Y+PvkO5NHWf145u2KhNgdyWEQwUnp6KKgCdWOQFe1+wtHoMqsZg82lv1vCzxImQ307cyqlql+sGm0nj787ywERb42vC/ZRAjcK9UlqGCMsIpVaD02WwTFvNKnZv4z+eoXryFzVbRy1ZQhEHhOi2GmCG05jV/NFUN6mVkXOoxzKrYTY+Bw2AzQUGlraFiaG8uzatPyRSyG/EVpT54XQ3ZZQWvVzVAEl9Uh65IF1O/Ue5TYuQ0d+ZrvP+PhKFRKRRtINUqMvirsGMHPpsnOyzAsrFmBZNL5RONL+4Rd8ath7SY3kVudMxGgcq+lSlr7mRiFACkC7yXp+ctoBkkP0dTXcOv1YgHN0pLQGKJLOVhSbrVlxuKKpN4ZJOb/IUnVmSvr/RWLLHRJZFmu3glYjJAGa/3pubx6FdTXE6dnLJ0FlWXY5c00PgblAuVPYGQ57AfGEy3r3bOiFmhVAewNAszXjlJaRTXPyc2WVCQt/xLGvJfdYcxqHup1gEy5bkP7aVMHGQAPSWENFO57QGV71izYm4NOQdECl29cjjtNYrrYjL72c+OHSSVXayTJ+hkMC3ea+raXPyGxgDj+wuBenMA/XUlEYi/fQ7wNDYsM5j8Uzce0XEcoSvT7WQSpa9sRq27jkKlqIPenXUqS2LM10wHF/s1PPriI4CU8Xmov0X2fbWluqcaT8GodpKyY6i2klCTIqTFdMXrlJCZPP58Z7Gv5SqAGRKBPN/DPMmtP6LW11ajASQ8nInE0ukG+X8gvPy+Q5UFE0JLJipWTJj18mUe4nbLMs8wGdSAsIPSfbXyYGekDqSQdHxwoV8n8FZNzaiBY9Mlu8e/AdLA0KwDFwyJkxpNNaHnrHzverIeEOyZhf5LOUd8sO1b6Cp2VOERRwCGt+vvVk2WN0MB4PQ5u5jvOVH5I7rQbmlZjiOYI2heSmDkxR777qX9lxGMHWArGzIrsn1SnJiidDCugADn92QgCkTkUGiXR/89rnYiViWEp3e7x40492LJFzRXZss8m5H7mxp9N0PIHsHLsAvdpqqiQS4pxc+aioNDTIhoVO1YXU4B20odYvEjFyiL6To9XEJiT6B0V9TC3G2ItHAj1Sk2sKbD3rZs8rFDN44XD6hAhlBvO1GRx8t3NtADd887QOx1PIfZ2+NDCrO48FpwbUwV6lfy4CqPMj3h8Bltw7QQiauSSsdnAb2yY4DD9t5H0tgbUdVCtc5JpQed3nwtfPy0ddp+NJWx4B22v0SSULGpemIUXowfTnEAr6trK8bGsWAeG98h2P/az898i7jQSn+X0wWfPVZ5jz5m+UC3vbKLB9QCJ8hbtcUQAOLUaMVZsLCBCGXqNCUkzO8T6gQfRF40VeixSjzrY/4tvdCnVUbYey3cMfNnB5+niIAjD3nXOqkEocWjQkjPi8lGtFNfgdrC7wLE8ohQn78oDmZJGvU6+LtcKJAtYUPlYmuo0Z83YfMp+Ck+Q5/8uJmQtm4FQw2GOHHSNO3OvinBClnAMBvALActQpusrKyHrXhb0nNcKcXG//N8EcOr+MUOx2XH+Y+Q/s6NplwXiVrjxpjFZmUZETAgTiLv/NZgTsh7OvCUyUAprpjpBlfBmZKoFQwvlukK8cQY4fqMQRQvg8JnP5DRfOHCVH3YjuNZE6wTB0H3sRRJ6DIwPKaCZ9Rug5ZRnGlGZWPAAudzxAeSMh8OvRfYg8xNPzO7+Dc7RRw02LjSius61dZQ3OuTtcYztr0UQ+9Xn0a+nTrRawLLNLO4QQaaLKVRT0/6FAo2Z0GNO/NN7dqhoHRPRsp92vQqFbGSFYYLnt/BSb1s0lK3EskWNAzL84zJX4T/S19Il+2sGxIm32lt1wKvYLUchK9OlwRHhweSFnGjNm/lggCBppbCyP3blTV4pvYzaKe9BY3Q3d4o/Dt2BHAz+L2WJ99IODMWj5ETdypBCPoS6Y4U3a58EKV1H7MgpZiDrizCfJqIU1p5GsRnyGH4TNuDu1ReUCSuoOtlRwedzyBhCIHB0FGwmoitUiM+kaa5KaN/0OoFeW7dY4vKOh57UhDq2Tj9Pw3XfHR0Aie2zA0kgy9irmXboFTXWYQuCFvkAIU1y5zbxa1IKaPmw6VVfQZQxU2ASVx80t0y8SzQf9wrsj36zanqPy7to6TQuOT//BYMvPVkTJBCjoXouT8i+MISElkLMz+fU4LAMD333qYmltXYloI+W9nTKOAAFnoZH13WOtoVi076zjeah/7NYG4lAuErRCYgEkQYHlKiq3Q9YYJ1QrnqsULQrYVmaDZsytmR5p2M3w2wp3oETtSZEeZl7tHg5907SxZlVq+dgDrXWmWIbgyus6RkYGpVRbofbAI5J6o5u9w7IsoyF3q2h35VMZp+xsDUsIDlcBXanCCrZ2h6oUj7fqbdBf5satUhQY7ZrmTtxJXs/k+yZL0EmKB915UZnNz6ICAnae40SJnGZsxsHm/1I+rMuUl4hsxjTo6I29WYambYl4Yzf/oDGDkGYvJY3On15S/3B5UplXcRsLImMrdJeqRlKjOaP2vuq76xfbhmmoTPWrwcQqohW+CbmjtUacJup8/2HDVarEFP1QFz8oAlBWRKDZcWyOTT4Wq2ll++WQGN9GGieRPwFGZdQZOJC1m3gBqu5AkTQrjhuIQnqJwdY0whL80L35JvairIim8kK2hZqlJeMXmZyLDmX2+x4o6Qj908e4kHPjTebrjqutpUgteFyDvTjSVxPdX9k2onrDhrAaGDo4SAPRY3j6vLdNwZmejw1A2epmcCfpnn7gphuboBWUfMbPBlGImQkQKKCE1Hk2R0Ala31a3bJXFUf7z9UgWPVjiryg0wf8CNviDl/gTLb6s2e7iWVwlpo8A95382z1DYwdHes2Rn5/JZRtuyuaGx7fOZBazuw6a61rQQFYDEWUxSJf4RXufMPxS4KTQYk0ydvrhOAucw4vx1UUsa1+fsX+DQ8LOzX+JiyQ47zQWgg4bmF5uDhzRNes2j32S1vtQVKiyRKQ1OBa1pLr4xcXX91nyrJEGQguB3JvF4T+oT7d36xPUzNlBNcSF6Oq+fXWhQocu8wvTdQqmbxF/J5H7aJbuKLnmQVYZh4IdRBvPKbmGTYnvR59TFHEaWfbbTSGtwvzybPJYauUrRGER29VWANEDB43/eUj9kcWtbTgsN0vLw3NwvVmNfZ5eXr6zal4HuY+lg3Y9Daq4XHYEDAS1UiJfd2Em8z39zzQ8XV1WYqgv7FnHZ3IUKSWP3jDy8t6gXaHWAkEavA1m6NjVNLpwon89BBEU2S+ebF5lfqTynNLD67BYusG0S19hg1HGTKJ4L8vl79aD99q53c7X6PybSW1MiJxQLBijWQTnCS3MHdZngvfVqvkvwDwDVDDAYdvDKhaF5l9hoRriqNHtS6luXATcATXV13ZknMHxBL07Wch0n6POrJcSHTmCDdkR85s4qLZEyTD/4K0ll/zz35QRQ22CNH+rBzWirgsS0wRvyWtlqmd3kRSYH300NXIyp9i2P5DHsY2Je4zBiHgHaYCPJtWpADKuqBoUCuZj6ox8WkaY8qpO0EZye6SlmEydppS4w5ihTKEHcTNdNoQ4SJbWwPXQiIxAslXGQU/RkpE/69BuM+Qew5svZlu5S3GvPPvB2YHf8a0vDJpEMH3ZMD+vCNGijLNJYvg5hgiF8/H9HaNDGvfV6yfS6p82RBWkN8L4xE9+C3dp94kUoJA/AG0hHHZGZWKN8XcPUj8Oho4jhl5hxBrlWXdXenHv9+S3C6fTO2tI1amAbvLMPkHJJ7TGybctQBseWt838oJV7Gw7Dc2KB7RSllSsdsQWXrY0+E+VUw8cuVgG9LvFgeoLVzKBsMNYWKrpUa0pI80qeYt2nhv/WZCs/fq46S56kmyqaxt/Twe6keUYjYRKlVy2849dXil2Nn4LTsizQxe33OXJEXbusQUj3rIqoB+SVtVRUwvUnVPXlZUjl8n99aIVZ4Uu5CO3AxFsRz5c2eqRvGJ+2fqfgwwAURwjOnOU6L++tSYJPh+szSuN1KHPo0DygkjLmD4TP/sBWshcmsOLHrqKJm4NBo8HZ3TyVY0vtdmglxr7LyJcz5892hGVabj2lG+qkT2BU8pHtPJPVKztGOOsfyIYatbOeNIvd718cMyO0Y6V2b91Q2dTT5xICZ40qiZa5d2kJqGDH4ZdlTPA5MEkIlmvFjU9tWXZ3Z+xzfQsToGXxVg9ezL3i4fMKzNLYx58nM7GYpJF2aFMrY/AAF9sMRWGvdSaNBdaTicq/nlx2iZLJcYA79CKrwG3jkKaSwCtI1XF4eP+stWUQjykBazKR+GXOv6G8DXH9nJF8cdfnRmK7QjSV55nYeIxSchkRtr2EDtxfg4VMXilC1m4y/htcqv+WQYBPbcEyDYaeoTwfuIierrpCU+8w2wTSy6DuMOTqiiMzI2lcRHPP6R7/EOxEQkRjMAK3eZ/pukxWQQdDT93n0EA5eGhtXmF+THYCY6P1Ej3G0kpoTc4vJNWK83SKL2f8i/UOtUaDCDmHb7qR8RlGxITO8Jw1McDu4p6Y35hufobbaK49xv8Es/K46boiPnxQDEGmQjJ6HGxn2OZ/aZfE3lzYDgiai2E06wUcYkNyZX/CcX95aSuFG6PHQKpgqN5jlB2wAapsv4ILAvflOd4+uiRnY5ZxFSdShb7Y58DUbQ893TN/aLK7NN2beNQgsHMldR2Uw1yrMf8751ykl2v9drQyGnBpLFKWHL75137QjYxgRbX40a9Bhz1eTo5qIDN534Gs8w1ZOg6SCWFtNPs7fUmEMtvADyfL5/osgCl0vyg/4sIzXRg/5nvq4X1Q9e3K6XERuKg7uGUbla3Hbf5XEoGEcrtRwb7Wntyf+yz8x7rGYHQv3Y6uvCT1H6y3gahf1DqQFz+wNaqJizYFcrdimiEvGEQ0qogILIHJ8paVR53Q5ekJtsW/tHsXvaPM73fn9VR9/GRh1Y/hq4Jk3dmQaYlhWdJpSn8YyVGAcHhy5E7O8S9L5V3zz8+3WGVnyvV7Jgl4jIJuEvoT/vsJkjO/1vng2wbWpedrn2LQMXrzmwwtQn1c6rN5jE5jpoU/sZVhIFiQVhZIWVxOTRvI5PMfOtM7m82/353RXStkS9CJTOJ2RMbWw7+Taw1/lm/zuwdjAT9OBkxYc7HkOVjRd77kfhJDa2TSKTfdJNx0XFdI4OXbKski0xjYUyLkmeboeHgv/q4exFA0OW+49HQRaYK9DDjmE2WKh/htTEhofDPJelZbBR2+L1/4v0wLyZqee4Y9dtBe1y9PGR1gEP0qp5myhCnn57gHEhZK2NeDQUWTHXMUkhXPgXBtzYd6i7baDS82SiveK3x3gQ1Vfqsyt8myOWLZ/nyR7TXM8AFfzLljMsP2mGBIoI7EGbZOwfjcrA1D8C4iyrOFmtlJqj8VRXNBrfLvdAjKQlp+SOPHBZDa7b4WsKFVaQpHNQy/yvIOhS4WZ1eGiwL3ymruu8Vum1jVmmmPGmWaExh9Z4QFyH34WKQe/iv5Z9wIsvMT6aprYsLKXOgh7QLKO3BCmeonOper0llVU/Z97xDCLsoXiJm8C4U6huIPGMpI2OvGEJ2kFKb90yXFpeGG1/g7c9hfnddKvXbFNpFcAwe9HnfjphE+BhaxW8VUT8ZjFn3irZskchSCgEXVEX5gcIzSiDvIWzcH6V8G3sviIC48B8XSpYmgr5Q63TajP1WHypvKNkfDdEqMXsZ99zZy0MmQ60I9OZw5sgpEFLyBJ7OENxNPjPZtNeM16CkE29k5OQFtNKL6n0H0LWrBJDt0yS/rnvVQF3fyYb6sLe5bBvuCeNkFbpHYbvfXTS55gsjwBMfMsLdKSyoGiG/HOyOtR55hj/sjhTLMDpg8SDQ+OZseMyZl9yVaAAC5aB55E4O2a3gcMa8C2Q70U6/Of6ocf8ki/7UAw39EHKI5ubGsSm8Hgw2sGbWsiS7L90KolETyDMh7Mrw2zK7EX1sGnfrKsyVFSRIBgCM0mI26GIvQFCUNkin4u+Wafxy53V7Fv3se2acOWeDRzqPygkhv8XohLgzfPI31nS2HVZYVbgZ1tbgBMPdRmt4u9bbEsebZqlMbRroUYDmDyfwEOjYUrJxXrFwm1wez1nQfDZylAyuMgLx946hmRo7XQ7aBnOfPS/2vJKYcA92n27dOFQPsSuKAORBt9Xc9gsxORFjAEDu6c9UXbH0rIzOm3+M0hTBYZ24ABYC1RenGCzvblvfaNCS+AayO501yToAq1qx5WS/J9D461Le9ASp2wDQre1T+hH1LeF2EEEOSa5qAEDyRgC2FXCbjLK26mfIVjsw7WiI/Htsd9ZsiFwID26sg9GrG/pGh+HZHKNPfFD/bU3WAdHe4veG3EhbZx62ReO4VZm+8m8lrMimPwMfQK9sjrn38jZrBFVFADesH4A47xTgucGNKn/5ZCf4Q3upEePJniE4BoSp5tN/L8dveZULQowNzovMVVsj0Qs8x/Pe7kX/YU07Wuy8sApHJCEVafEP7Z96K9FOnBDVx8Iaq0AguhWcgrpcF9JxGhCwCi6uWx47gm48XZsUjDU7Sl26+aG7mEuPUhDpzALe9UHfaal06cu1zjxoeIwnuIoStUYja3DK8dUELVg3trXDZTvUDtD60zK714a6eTCdFm6jGZJK2sTnaoN8hgHCfz6GBhDFCLUQYx/jzO3UZm9eeEM1x6ve3M1QwEBwnqzIzo4W/6cy3YPGIhNBL0n2xhhP+bGZCR8swagQuY=</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      讲述C++中构造函数继承的一些问题、多继承、虚继承（加密文章）
    
    </summary>
    
      <category term="代码学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="C++学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/C-%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="C++" scheme="https://shuhaohwang.github.io/tags/C/"/>
    
      <category term="学习总结" scheme="https://shuhaohwang.github.io/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
      <category term="C++学习总结" scheme="https://shuhaohwang.github.io/tags/C-%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>C++进阶学习总结-（2.9）移动构造函数、移动运算符</title>
    <link href="https://shuhaohwang.github.io/2019/09/02/C-%E8%BF%9B%E9%98%B6%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%882-9%EF%BC%89%E7%A7%BB%E5%8A%A8%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E3%80%81%E7%A7%BB%E5%8A%A8%E8%BF%90%E7%AE%97%E7%AC%A6/"/>
    <id>https://shuhaohwang.github.io/2019/09/02/C-进阶学习总结-（2-9）移动构造函数、移动运算符/</id>
    <published>2019-09-01T23:00:24.000Z</published>
    <updated>2019-09-02T01:46:36.600Z</updated>
    
    <content type="html"><![CDATA[<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="此文章是加密文章，请输入密码后查看." />    <label for="pass">此文章是加密文章，请输入密码后查看.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">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</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      讲述C++11中的移动构造函数、移动赋值运算符、相关使用时的注意事项（加密文章）
    
    </summary>
    
      <category term="代码学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="C++学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/C-%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="C++" scheme="https://shuhaohwang.github.io/tags/C/"/>
    
      <category term="学习总结" scheme="https://shuhaohwang.github.io/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
      <category term="C++学习总结" scheme="https://shuhaohwang.github.io/tags/C-%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>概率论与数理统计（二）</title>
    <link href="https://shuhaohwang.github.io/2019/08/29/%E6%A6%82%E7%8E%87%E8%AE%BA%E4%B8%8E%E6%95%B0%E7%90%86%E7%BB%9F%E8%AE%A1%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>https://shuhaohwang.github.io/2019/08/29/概率论与数理统计（二）/</id>
    <published>2019-08-29T15:09:59.000Z</published>
    <updated>2019-08-29T15:33:01.175Z</updated>
    
    <content type="html"><![CDATA[<h4 id="条件概率与乘法公式"><a href="#条件概率与乘法公式" class="headerlink" title="条件概率与乘法公式"></a>条件概率与乘法公式</h4><ul><li><p>条件概率：</p><ul><li>P(B|A) = P(AB) / P(A)</li><li>P(A|B) = P(AB) / P(B)</li></ul></li><li><p>乘法公式</p><ul><li>P(AB) = P(A) - P(B|A) = P(B) - P(A|B)</li></ul></li></ul><hr><h4 id="全概率公式与贝叶斯公式"><a href="#全概率公式与贝叶斯公式" class="headerlink" title="全概率公式与贝叶斯公式"></a>全概率公式与贝叶斯公式</h4><ul><li><p>全概率公式：</p><ul><li><script type="math/tex; mode=display">P(A) = \sum_{i=1}^nP(B_i)P(A|B_i)</script></li><li><p>P(A) 要发生的事件的概率</p></li><li><p>P(B<sub>i</sub>)为A发生的前提事件的概率</p></li><li><p>P(A|B<sub>i</sub>)为B<sub>i</sub>事件已经发生后的前提下，A事件发生的概率</p></li></ul></li><li><p>贝叶斯公式：（逆概率公式）</p><ul><li><script type="math/tex; mode=display">P(B_i|A) = \frac {P(B_i)P(A|B_i)}{P(A)}</script></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;条件概率与乘法公式&quot;&gt;&lt;a href=&quot;#条件概率与乘法公式&quot; class=&quot;headerlink&quot; title=&quot;条件概率与乘法公式&quot;&gt;&lt;/a&gt;条件概率与乘法公式&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;条件概率：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;P(B|A) = P(AB)
      
    
    </summary>
    
    
      <category term="学习总结" scheme="https://shuhaohwang.github.io/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
      <category term="其他" scheme="https://shuhaohwang.github.io/tags/%E5%85%B6%E4%BB%96/"/>
    
  </entry>
  
  <entry>
    <title>概率论与数理统计（一）</title>
    <link href="https://shuhaohwang.github.io/2019/08/28/%E6%A6%82%E7%8E%87%E8%AE%BA%E4%B8%8E%E6%95%B0%E7%90%86%E7%BB%9F%E8%AE%A1%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>https://shuhaohwang.github.io/2019/08/28/概率论与数理统计（一）/</id>
    <published>2019-08-28T14:43:55.000Z</published>
    <updated>2019-08-28T15:39:12.051Z</updated>
    
    <content type="html"><![CDATA[<h4 id="事件运算及概率"><a href="#事件运算及概率" class="headerlink" title="事件运算及概率"></a>事件运算及概率</h4><ul><li>事件运算<ul><li>包含事件<ul><li>A</li></ul></li><li>并事件<ul><li>A∪B = A+B</li></ul></li><li>差事件<ul><li>A - B  = AC<sub>B</sub> = A - AB</li></ul></li><li>交事件<ul><li>A∩B = AB</li></ul></li><li>互斥事件<ul><li>AB = ∅</li></ul></li><li>对立事件<ul><li>A∪C<sub>A</sub> = S; AC<sub>A</sub>  = ∅</li></ul></li><li>独立事件<ul><li><code>P(AB) = P(A)P(B)</code></li></ul></li></ul></li><li>其他：<ul><li><strong>A、B独立：</strong><ul><li>A、C<sub>B</sub>     C<sub>A</sub>、B    C<sub>A</sub>、C<sub>B</sub>互相独立</li></ul></li><li><strong>A、B、C独立：</strong><ul><li>A、B、C两两相互独立(充分不必要)</li><li><code>P(ABC) = P(A)P(B)P(C)</code></li></ul></li></ul></li></ul><hr><h4 id="公式："><a href="#公式：" class="headerlink" title="公式："></a>公式：</h4><ul><li><p>德摩根率：</p><ul><li><script type="math/tex; mode=display">C_{A∪B} = C_A · C_B</script></li><li><script type="math/tex; mode=display">C_{A∪B} = C_A∪C_B</script></li></ul></li></ul><ul><li><p>加法公式</p><ul><li><script type="math/tex; mode=display">P(A∪B) = P(A) + P(B) - P(AB）</script></li><li><script type="math/tex; mode=display">P(A∪B∪C) = P(A) + P(B) + P(C) - P(AB) - P(AC) - P(BC) + P(ABC)</script></li></ul></li></ul><ul><li><p>减法公式</p><ul><li><script type="math/tex; mode=display">P(A-B) = P(AC_B) = P(A) - P(AB)</script></li></ul></li><li><p>对立事件</p><ul><li><script type="math/tex; mode=display">P(C_A) = 1 - P(A)</script></li></ul></li><li><p>独立事件</p><ul><li><script type="math/tex; mode=display">P(AB) = P(A)·P(B)</script></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;事件运算及概率&quot;&gt;&lt;a href=&quot;#事件运算及概率&quot; class=&quot;headerlink&quot; title=&quot;事件运算及概率&quot;&gt;&lt;/a&gt;事件运算及概率&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;事件运算&lt;ul&gt;
&lt;li&gt;包含事件&lt;ul&gt;
&lt;li&gt;A&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
      
    
    </summary>
    
    
      <category term="学习总结" scheme="https://shuhaohwang.github.io/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
      <category term="其他" scheme="https://shuhaohwang.github.io/tags/%E5%85%B6%E4%BB%96/"/>
    
  </entry>
  
  <entry>
    <title>数据结构学习总结-（6.7）深度优先搜索(邻接矩阵)</title>
    <link href="https://shuhaohwang.github.io/2019/08/21/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%886-7%EF%BC%89%E6%B7%B1%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2-%E9%82%BB%E6%8E%A5%E7%9F%A9%E9%98%B5/"/>
    <id>https://shuhaohwang.github.io/2019/08/21/数据结构学习总结-（6-7）深度优先搜索-邻接矩阵/</id>
    <published>2019-08-21T13:26:44.000Z</published>
    <updated>2019-08-22T07:42:47.118Z</updated>
    
    <content type="html"><![CDATA[<h4 id="邻接矩阵的DFS-深度优先搜索-代码实现及思路"><a href="#邻接矩阵的DFS-深度优先搜索-代码实现及思路" class="headerlink" title="邻接矩阵的DFS(深度优先搜索)代码实现及思路"></a>邻接矩阵的DFS(深度优先搜索)代码实现及思路</h4><ol><li><strong>实现邻接矩阵DFS算法的前提</strong></li></ol><ul><li><p>思路：要实现邻接矩阵的DFS算法，首先就要在邻接矩阵的结构中设置一个标记数组，用来对应顶点数组在遍历过程中的访问情况，即已经访问过的顶点将被标记已被访问，没有访问的将被标记未访问。</p></li><li><p>代码1：</p><ul><li><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MGraph</span>&#123;</span></span><br><span class="line"> ....</span><br><span class="line">     </span><br><span class="line"> <span class="built_in">vector</span>&lt;<span class="keyword">bool</span>&gt;Mark;<span class="comment">//标记数组</span></span><br><span class="line">     </span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*创建标记数组*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">create_mark</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//避免重复创建+验证</span></span><br><span class="line">    <span class="keyword">if</span>(Mark.size() != Vertex.size())<span class="keyword">return</span>;<span class="comment">//Vertex是顶点数组</span></span><br><span class="line">    </span><br><span class="line">    Mark.resize(Vertex.size(),<span class="literal">false</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><ol><li><strong>遍历实现DFS</strong></li></ol><ul><li><p>思路：根据标识数组来确定是否要访问，函数参数可以更加顶点数组来指定结点开始，并可以通过函数指针作为参数之一多样化的去遍历图</p></li><li><p>代码：</p><ul><li><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DFS</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> ID,<span class="keyword">void</span>(*visit)(<span class="keyword">const</span> VT&amp; vertex))</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(ID &lt; <span class="number">0</span> || ID &gt; Mark.size())<span class="keyword">return</span>;</span><br><span class="line">    Mark[ID] = <span class="literal">true</span>;</span><br><span class="line">    vistit(Vertex[ID]);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; Vertex.size(); k++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(Edges[ID][k] != definfo)&#123;</span><br><span class="line">            <span class="keyword">if</span>(!Mark[k])</span><br><span class="line">                DFS(k,visit);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><p><strong>代码解析</strong></p><img src="/2019/08/21/数据结构学习总结-（6-7）深度优先搜索-邻接矩阵/1.png"><div class="table-container"><table><thead><tr><th style="text-align:center">Mark/Vertex</th><th style="text-align:center"></th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">false</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">false</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">false</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center">false</td></tr></tbody></table></div><ul><li>邻接矩阵</li></ul><div class="table-container"><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">A</th><th style="text-align:center">B</th><th style="text-align:center">C</th><th style="text-align:center">D</th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:center">0</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">1</td></tr><tr><td style="text-align:center">B</td><td style="text-align:center">1</td><td style="text-align:center">0</td><td style="text-align:center">1</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">C</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">0</td><td style="text-align:center">1</td></tr><tr><td style="text-align:center">D</td><td style="text-align:center">1</td><td style="text-align:center">0</td><td style="text-align:center">1</td><td style="text-align:center">0</td></tr></tbody></table></div><ul><li>第一步<code>DFS(unsigned int ID,void(*visit)(const VT&amp; vertex))</code><ul><li>Mark[0] = true；</li><li>输出了A</li><li>Edge[0] [0]不输出，输出B,C,D</li></ul></li></ul><hr><ol><li>堆栈实现</li></ol><ul><li><p>思路：通过堆栈来模拟递归实现</p></li><li><p>代码：</p><ul><li><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DFS2</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> ID,<span class="keyword">void</span>(*visit)(<span class="keyword">const</span> VT&amp; vertex))</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(ID &lt; <span class="number">0</span> || ID &gt; Vertex.size())<span class="keyword">return</span>;</span><br><span class="line">    create_mark();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; Vertex.size(); i++)&#123;</span><br><span class="line">        DFS_(i,visit);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DFS_</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> ID,<span class="keyword">void</span>(*visit)(<span class="keyword">const</span> VT&amp; vertex))</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(ID &lt; <span class="number">0</span> || ID &gt; Vertex.size())<span class="keyword">return</span>;</span><br><span class="line">    <span class="built_in">stack</span>&lt;<span class="keyword">int</span>&gt; s;</span><br><span class="line">    s.push(ID);</span><br><span class="line">    Mark[ID] = <span class="literal">true</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(!s.empty())&#123;</span><br><span class="line">        <span class="keyword">auto</span> v = s.top();s.pop();</span><br><span class="line">        visit(Vertex[v]);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> w = <span class="number">0</span>; w &lt; Vertex.size(); w++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(Edge[ID][w] != definfo)&#123;</span><br><span class="line">            <span class="keyword">if</span>(!Mark[w])&#123;</span><br><span class="line">                s.push(w);</span><br><span class="line">                Mark[w] = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">                </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><p>—（本文完）</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;邻接矩阵的DFS-深度优先搜索-代码实现及思路&quot;&gt;&lt;a href=&quot;#邻接矩阵的DFS-深度优先搜索-代码实现及思路&quot; class=&quot;headerlink&quot; title=&quot;邻接矩阵的DFS(深度优先搜索)代码实现及思路&quot;&gt;&lt;/a&gt;邻接矩阵的DFS(深度优先搜索)代
      
    
    </summary>
    
      <category term="代码学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="数据结构学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="学习总结" scheme="https://shuhaohwang.github.io/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
      <category term="数据结构" scheme="https://shuhaohwang.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="数据结构-学习总结" scheme="https://shuhaohwang.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>数据结构学习总结-（6.6）图的遍历</title>
    <link href="https://shuhaohwang.github.io/2019/08/20/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%886-6%EF%BC%89%E5%9B%BE%E7%9A%84%E9%81%8D%E5%8E%86/"/>
    <id>https://shuhaohwang.github.io/2019/08/20/数据结构学习总结-（6-6）图的遍历/</id>
    <published>2019-08-20T03:53:51.000Z</published>
    <updated>2019-08-22T07:47:14.507Z</updated>
    
    <content type="html"><![CDATA[<h4 id="图的遍历（图的遍历是图的基本运算）"><a href="#图的遍历（图的遍历是图的基本运算）" class="headerlink" title="图的遍历（图的遍历是图的基本运算）"></a>图的遍历（图的遍历是图的基本运算）</h4><ul><li>定义：从已给的连通图中的某一个顶点出发，沿着一些边去访问遍历图中所有的顶点，且使每个顶点仅被访问一次</li><li>实质：找每个顶点的邻接点的过程</li></ul><hr><h4 id="遍历算法"><a href="#遍历算法" class="headerlink" title="遍历算法"></a>遍历算法</h4><ul><li>深度优先搜索(DFS)<ul><li>类似树的先序遍历</li></ul></li><li>广度优先搜索(BFS)<ul><li>类似树的层次遍历</li></ul></li></ul><p>—（本文完）</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;图的遍历（图的遍历是图的基本运算）&quot;&gt;&lt;a href=&quot;#图的遍历（图的遍历是图的基本运算）&quot; class=&quot;headerlink&quot; title=&quot;图的遍历（图的遍历是图的基本运算）&quot;&gt;&lt;/a&gt;图的遍历（图的遍历是图的基本运算）&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;定义：从
      
    
    </summary>
    
      <category term="代码学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="数据结构学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="学习总结" scheme="https://shuhaohwang.github.io/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
      <category term="数据结构" scheme="https://shuhaohwang.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="数据结构-学习总结" scheme="https://shuhaohwang.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>数据结构学习总结-（6.5）图的实现-邻接表</title>
    <link href="https://shuhaohwang.github.io/2019/08/18/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%886-5%EF%BC%89%E5%9B%BE%E7%9A%84%E5%AE%9E%E7%8E%B0-%E9%82%BB%E6%8E%A5%E8%A1%A8/"/>
    <id>https://shuhaohwang.github.io/2019/08/18/数据结构学习总结-（6-5）图的实现-邻接表/</id>
    <published>2019-08-17T16:31:21.000Z</published>
    <updated>2019-08-19T13:02:41.535Z</updated>
    
    <content type="html"><![CDATA[<h4 id="邻接表"><a href="#邻接表" class="headerlink" title="邻接表"></a>邻接表</h4><p>邻接表是一种顺序分配和链式分配相结合的存储结构，其顶点集由顺序表进行存储，其边则用邻接顶点来表示，而邻接点则用链式结构在顺序结构中的每一个顶点来承载，通俗点讲，就是把一堆链表用顺序表进行存储的结构。</p><img src="/2019/08/18/数据结构学习总结-（6-5）图的实现-邻接表/1.png"><hr><h5 id="邻接表的实现及思路"><a href="#邻接表的实现及思路" class="headerlink" title="邻接表的实现及思路"></a>邻接表的实现及思路</h5><p><strong>邻接表的结构</strong></p><ul><li><p>思路：邻接表结构是由一个顶点结点数组，和各个邻接点组成的，其中顶点数组中含有顶点数据和指向邻接点的链域，而邻接点由邻接点域(对应顶点数组的顶点下标)和顶点所连接的其他顶点的邻接点地址。所以实现邻接表结构，首先就要有顶点数组和邻接点结构。</p></li><li><p>代码：</p><ul><li><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> VT,<span class="keyword">typename</span> Einfo&gt;<span class="class"><span class="keyword">class</span> <span class="title">AGraph</span>&#123;</span></span><br><span class="line">    <span class="comment">/*邻接点结构*/</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Edge_Node</span>&#123;</span></span><br><span class="line">        <span class="keyword">unsigned</span> <span class="keyword">int</span> ID;<span class="comment">//对应顶点数组下标</span></span><br><span class="line">        Einfo info;<span class="comment">//保存权重</span></span><br><span class="line">        Edge_Node* next;<span class="comment">//指向下一个邻接点的指针</span></span><br><span class="line">        </span><br><span class="line">        Edge_Node(<span class="keyword">unsigned</span> <span class="keyword">int</span> id,Einfo info):ID(id),info(info),next(<span class="literal">nullptr</span>)&#123;&#125;;</span><br><span class="line">        </span><br><span class="line">    &#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/*顶点数组元素结构*/</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">VerTex_Node</span>&#123;</span></span><br><span class="line">       VT v_data;<span class="comment">//顶点数据</span></span><br><span class="line">       Edge_Node* Edge;</span><br><span class="line">       </span><br><span class="line">       VerTex_Node(VT v):v_data(v),Edge(<span class="literal">nullptr</span>); </span><br><span class="line">    &#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">vector</span>&lt;VerTex_Node&gt;Vertexs;<span class="comment">//顶点数组</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> Num_Edge;</span><br><span class="line">    <span class="keyword">bool</span> undirected;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">    AGraph(<span class="keyword">bool</span> undirected = <span class="literal">true</span>):undirected(undirected),Num_Edge(<span class="number">0</span>)&#123;&#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li></ul></li></ul><p><strong>添加顶点</strong></p><ul><li><p>思路：直接进行把顶点加入顶点数组即可</p></li><li><p>代码：</p><ul><li><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Add_VerTex</span><span class="params">(VT t)</span></span>&#123;</span><br><span class="line">    Vertexs.push_back(<span class="keyword">new</span> VerTex_Node(t));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><p><strong>填加边</strong></p><p>思路：这里要注意的时，邻接表中的邻接点是以链表结合数组进行实现的，所以在添加边的时候，要对边结点的链域进行处理，这里可以采用链表中的前插法，邻接点一个个插入顶点数组的链域之间。</p><ul><li><p>代码：</p><ul><li><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">Add_Edges</span><span class="params">(<span class="keyword">int</span> id1,<span class="keyword">int</span> id2,Einfo info)</span></span>&#123;</span><br><span class="line">    Edge_Node* p = <span class="keyword">new</span> Edge_Node(id2,info);</span><br><span class="line">    <span class="keyword">if</span>(!p)<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    </span><br><span class="line">    p-&gt;next = Vertexs[id1].Edge;</span><br><span class="line">    Vertexs[id1].Edge = p;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(undirected)&#123;</span><br><span class="line">    Edge_Node* p = <span class="keyword">new</span> Edge_Node(id1,info);</span><br><span class="line">    <span class="keyword">if</span>(!p)<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    </span><br><span class="line">    p-&gt;next = Vertexs[id2].Edge;</span><br><span class="line">    Vertexs[id2].Edge = p;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><p><strong>修改边的权值</strong></p><ul><li><p>思路：这个操作的思路比较明确，更加要修改的边，通过循环遍历该起始点的顶点数组中的链域结构即可。</p></li><li><p>代码：</p><ul><li><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">set_Edge</span><span class="params">(<span class="keyword">const</span> <span class="keyword">int</span> id1,<span class="keyword">const</span> <span class="keyword">int</span> id2,<span class="keyword">const</span> Einfo&amp; info)</span></span>&#123;</span><br><span class="line">    Edge_Node* p = Vertexs[id1].Edge;</span><br><span class="line">    <span class="keyword">while</span>(p)&#123;</span><br><span class="line">        <span class="keyword">if</span>(p-&gt;ID == id2)</span><br><span class="line">            p-&gt;info = info;</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(undirected)&#123;</span><br><span class="line">    Edge_Node* p = Vertexs[id2].Edge;</span><br><span class="line">    <span class="keyword">while</span>(p)&#123;</span><br><span class="line">        <span class="keyword">if</span>(p-&gt;ID == id1)</span><br><span class="line">            p-&gt;info = info;</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><hr><h4 id="具体代码实现："><a href="#具体代码实现：" class="headerlink" title="具体代码实现："></a>具体代码实现：</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> VT, <span class="keyword">typename</span> Einfo&gt;<span class="class"><span class="keyword">class</span> <span class="title">AGraph</span> &#123;</span></span><br><span class="line"><span class="comment">/*邻接表结构-边结点*/</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Edge_Node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> ID;<span class="comment">//对应顶点集的下标</span></span><br><span class="line"></span><br><span class="line">Einfo info;<span class="comment">//权重</span></span><br><span class="line">Edge_Node* next;</span><br><span class="line">Edge_Node(<span class="keyword">unsigned</span> <span class="keyword">int</span> id, Einfo info) :ID(id), info(info), next(<span class="literal">nullptr</span>) &#123;&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*顶点结点结构*/</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Vertex_Node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">VT v_data;</span><br><span class="line">Edge_Node* Edge = <span class="literal">nullptr</span>;</span><br><span class="line">Vertex_Node(VT v) :v_data(v) &#123;&#125;;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">vector</span>&lt;Vertex_Node&gt; VerTexs;<span class="comment">//顶点集</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> Num_Edge;<span class="comment">//边数</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> undirected;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">AGraph(<span class="keyword">bool</span> undirected = <span class="literal">true</span>) :undirected(undirected), Num_Edge(<span class="number">0</span>) &#123;&#125;;</span><br><span class="line"></span><br><span class="line">VT <span class="keyword">operator</span>[](<span class="keyword">int</span> i) &#123;</span><br><span class="line"><span class="keyword">return</span> VerTexs[i].v_data;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Add_VerTex</span><span class="params">(VT t)</span> </span>&#123;</span><br><span class="line">VerTexs.push_back(Vertex_Node(t));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">Add_Edges</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> id1, <span class="keyword">unsigned</span> <span class="keyword">int</span> id2, Einfo info)</span> </span>&#123;</span><br><span class="line">Edge_Node* p = <span class="keyword">new</span> Edge_Node(id2, info);</span><br><span class="line"><span class="keyword">if</span> (!p)<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*前插*/</span></span><br><span class="line">p-&gt;next = VerTexs[id1].Edge;</span><br><span class="line">VerTexs[id1].Edge = p;</span><br><span class="line">Num_Edge++;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (undirected) &#123;</span><br><span class="line">Edge_Node* p = <span class="keyword">new</span> Edge_Node(id1, info);</span><br><span class="line"><span class="keyword">if</span> (!p)<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">p-&gt;next = VerTexs[id2].Edge;</span><br><span class="line">VerTexs[id2].Edge = p;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">set_Edge</span><span class="params">(<span class="keyword">const</span> <span class="keyword">int</span> id1, <span class="keyword">const</span> <span class="keyword">int</span> id2, <span class="keyword">const</span> Einfo&amp; info)</span> </span>&#123;</span><br><span class="line">Edge_Node* p = VerTexs[id1].Edge;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (p)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (p-&gt;ID == id2)</span><br><span class="line">p-&gt;info = info;</span><br><span class="line">p = p-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (undirected) &#123;</span><br><span class="line">Edge_Node* p = VerTexs[id2].Edge;</span><br><span class="line"><span class="keyword">while</span> (p)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (p-&gt;ID == id1)</span><br><span class="line">p-&gt;info = info;</span><br><span class="line">p = p-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Print_Agraph</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span>&amp; e : VerTexs) &#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; e.v_data &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">Edge_Node* p = e.Edge;</span><br><span class="line"><span class="keyword">while</span> (p) &#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; p-&gt;ID &lt;&lt; <span class="string">","</span> &lt;&lt; p-&gt;info &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">p = p-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"顶点："</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span>&amp; i : VerTexs) &#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; i.v_data &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="string">"邻接表:"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">Print_Agraph();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Get_n_vertex</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> VerTexs.size(); &#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Get_n_edges</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> Num_Edge; &#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">AGraph&lt;<span class="keyword">char</span>, <span class="keyword">double</span>&gt; G(<span class="literal">false</span>);</span><br><span class="line">G.Add_VerTex(<span class="string">'A'</span>);</span><br><span class="line">G.Add_VerTex(<span class="string">'B'</span>);</span><br><span class="line">G.Add_VerTex(<span class="string">'C'</span>);</span><br><span class="line">G.Add_VerTex(<span class="string">'D'</span>);</span><br><span class="line"></span><br><span class="line">G.Add_Edges(<span class="number">0</span>, <span class="number">1</span>, <span class="number">12.3</span>);</span><br><span class="line">G.Add_Edges(<span class="number">0</span>, <span class="number">3</span>, <span class="number">9.5</span>);</span><br><span class="line">G.Add_Edges(<span class="number">0</span>, <span class="number">2</span>, <span class="number">3.1</span>);</span><br><span class="line">G.Add_Edges(<span class="number">1</span>, <span class="number">2</span>, <span class="number">13</span>);</span><br><span class="line">G.Add_Edges(<span class="number">2</span>, <span class="number">3</span>, <span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">G.print();</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"顶点数量为: "</span> &lt;&lt; G.Get_n_vertex() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"边的数量为: "</span> &lt;&lt; G.Get_n_edges() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>实验结果：<img src="/2019/08/18/数据结构学习总结-（6-5）图的实现-邻接表/2.png"></li></ul><p>—（本文完）</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;邻接表&quot;&gt;&lt;a href=&quot;#邻接表&quot; class=&quot;headerlink&quot; title=&quot;邻接表&quot;&gt;&lt;/a&gt;邻接表&lt;/h4&gt;&lt;p&gt;邻接表是一种顺序分配和链式分配相结合的存储结构，其顶点集由顺序表进行存储，其边则用邻接顶点来表示，而邻接点则用链式结构在顺序结构中的
      
    
    </summary>
    
      <category term="代码学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="数据结构学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="学习总结" scheme="https://shuhaohwang.github.io/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
      <category term="数据结构" scheme="https://shuhaohwang.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="数据结构-学习总结" scheme="https://shuhaohwang.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>C++进阶学习总结-(2.8)临时对象处理和程序优化探讨</title>
    <link href="https://shuhaohwang.github.io/2019/08/17/C-%E8%BF%9B%E9%98%B6%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2-8-%E4%B8%B4%E6%97%B6%E5%AF%B9%E8%B1%A1%E5%A4%84%E7%90%86%E5%92%8C%E7%A8%8B%E5%BA%8F%E4%BC%98%E5%8C%96%E6%8E%A2%E8%AE%A8/"/>
    <id>https://shuhaohwang.github.io/2019/08/17/C-进阶学习总结-2-8-临时对象处理和程序优化探讨/</id>
    <published>2019-08-17T13:00:49.000Z</published>
    <updated>2019-08-17T13:21:17.851Z</updated>
    
    <content type="html"><![CDATA[<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="此文章是加密文章，请输入密码后查看." />    <label for="pass">此文章是加密文章，请输入密码后查看.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      讲述临时对象处理方案、程序优化等（加密文章）
    
    </summary>
    
      <category term="代码学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="C++学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/C-%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="C++" scheme="https://shuhaohwang.github.io/tags/C/"/>
    
      <category term="学习总结" scheme="https://shuhaohwang.github.io/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
      <category term="C++学习总结" scheme="https://shuhaohwang.github.io/tags/C-%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
      <category term="性能优化" scheme="https://shuhaohwang.github.io/tags/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>数据结构学习总结-（6.4）图的实现-邻接矩阵</title>
    <link href="https://shuhaohwang.github.io/2019/08/16/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%886-4%EF%BC%89%E5%9B%BE%E7%9A%84%E5%AE%9E%E7%8E%B0-%E9%82%BB%E6%8E%A5%E7%9F%A9%E9%98%B5/"/>
    <id>https://shuhaohwang.github.io/2019/08/16/数据结构学习总结-（6-4）图的实现-邻接矩阵/</id>
    <published>2019-08-16T03:57:14.000Z</published>
    <updated>2019-08-16T12:29:48.730Z</updated>
    
    <content type="html"><![CDATA[<h4 id="邻接矩阵"><a href="#邻接矩阵" class="headerlink" title="邻接矩阵"></a>邻接矩阵</h4><p>用一个二维数组存放顶点间关系（边或弧）的数据，这个二维数组称为邻接矩阵。邻接矩阵又分为有向图邻接矩阵和无向图邻接矩阵。<br><img src="/2019/08/16/数据结构学习总结-（6-4）图的实现-邻接矩阵/1.png"><br>该存储结构，是借助线性代数的邻接矩阵来表示图的结构。</p><hr><h4 id="具体实现和思路"><a href="#具体实现和思路" class="headerlink" title="具体实现和思路"></a>具体实现和思路</h4><ul><li><p><strong>邻接矩阵实现：</strong></p><ul><li><p>思路：邻接矩阵的实现是要借助二维数组来实现，在C++中可以使用vector来代替二维数组，从而实现矩阵。</p></li><li><p>代码：</p><ul><li><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> VT,<span class="keyword">typename</span> Einfo&gt;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MGraph</span>&#123;</span></span><br><span class="line"><span class="built_in">vector</span>&lt;VT&gt;VerTex;<span class="comment">//顶点集</span></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;Einfo&gt;&gt;Edge<span class="comment">//邻接矩阵</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> undirected;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line">MGraph(<span class="keyword">bool</span> undirected = <span class="literal">true</span>):undirecter(undirected)&#123;&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><p><strong>添加顶点/获得顶点总数：</strong></p><ul><li><p>思路：跟边集构建一样，使用vector进行存储顶点数据</p></li><li><p>代码：</p><ul><li><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Add_VerTex</span><span class="params">(VT vertex)</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">    VerTex.push_back(vertex);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Get_n_Vertex</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> VerTex.size();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><p><strong>构建邻边矩阵：</strong></p><ul><li><p>思路：因为邻边矩阵是一个NXN的方形矩阵(N为顶点数量)，所以在构建邻边矩阵的时候，要先根据顶点总数来创建代表邻边矩阵的二维数组。</p></li><li><p>代码：</p><ul><li><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Create_MGraph</span><span class="params">(Einfo&amp; definfo = <span class="number">0</span>)</span></span>&#123;</span><br><span class="line">    <span class="comment">/*用来防止多次创建邻接矩阵*/</span></span><br><span class="line">    <span class="keyword">if</span>(VerTex.size() != Edge.size())&#123;</span><br><span class="line">        <span class="keyword">const</span> <span class="keyword">int</span> N_Vertex = Get_n_Vertex();</span><br><span class="line">        Edge.resize(N_Vertex,<span class="built_in">vector</span>&lt;Einfo&gt;(N_Vertex,definfo));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><p><strong>添加边</strong></p><ul><li><p>思路：因为邻接矩阵是一个二维数组，所以添加边的时候直接把顶点下标当做邻接矩阵的坐标位置进行编写即可。</p></li><li><p>代码：</p><ul><li><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Add_Edge</span><span class="params">(<span class="keyword">const</span> <span class="keyword">int</span> i,<span class="keyword">const</span> <span class="keyword">int</span> j, <span class="keyword">const</span> Einfo&amp;info = <span class="number">1</span>)</span></span>&#123;</span><br><span class="line">    <span class="comment">/*要先创建邻接矩阵才能实现添加边操作*/</span></span><br><span class="line">    <span class="keyword">if</span>(VerTex.size() != Edge.size())</span><br><span class="line">      Create_MGraph();</span><br><span class="line">    </span><br><span class="line">    Edge[i][j] = info;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(undirected)&#123;</span><br><span class="line">        Edge[j][i] = info;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul></li></ul><hr><h4 id="具体代码"><a href="#具体代码" class="headerlink" title="具体代码"></a>具体代码</h4><img src="/2019/08/16/数据结构学习总结-（6-4）图的实现-邻接矩阵/2.png"><ul><li><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> VT, <span class="keyword">typename</span> Einfo&gt;<span class="class"><span class="keyword">class</span> <span class="title">MGraph</span> &#123;</span></span><br><span class="line"><span class="built_in">vector</span>&lt;VT&gt;Vertex;<span class="comment">//顶点集</span></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;Einfo&gt;&gt;Edges; <span class="comment">//邻接矩阵</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> Num_Edge;<span class="comment">//边数</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> undirected;<span class="comment">//标记是否为无向图</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">/*构造函数*/</span></span><br><span class="line">MGraph(<span class="keyword">bool</span> undirected = <span class="literal">true</span>):undirected(undirected),Num_Edge(<span class="number">0</span>)&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*获得顶点总数*/</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Get_n_vertex</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> Vertex.size(); &#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Get_n_edges</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> Num_Edge; &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">create_Mgraph</span><span class="params">(<span class="keyword">const</span> Einfo&amp; definfo = <span class="number">0</span>)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (Edges.size() != Vertex.size()) &#123;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> n_vertex = Get_n_vertex();</span><br><span class="line"></span><br><span class="line">Edges.resize(n_vertex, <span class="built_in">vector</span>&lt;Einfo&gt;(n_vertex, definfo));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Add_VerTex</span><span class="params">(VT vertex)</span> </span>&#123; Vertex.push_back(vertex); &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Add_Edges</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> j, Einfo info)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (Edges.size() != Vertex.size())</span><br><span class="line">create_Mgraph();</span><br><span class="line"></span><br><span class="line">Edges[i][j] = info;</span><br><span class="line">Num_Edge++;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (undirected) &#123;</span><br><span class="line">Edges[j][i] = info;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Print_Mgraph</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span>&amp; e : Edges) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span>&amp; w : e) &#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; w &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"顶点："</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span>&amp; i : Vertex) &#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; i &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="string">"邻接矩阵:"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">Print_Mgraph();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">MGraph&lt;<span class="keyword">char</span>, <span class="keyword">double</span>&gt; G(<span class="literal">false</span>);</span><br><span class="line">G.Add_VerTex(<span class="string">'A'</span>);</span><br><span class="line">G.Add_VerTex(<span class="string">'B'</span>);</span><br><span class="line">G.Add_VerTex(<span class="string">'C'</span>);</span><br><span class="line">G.Add_VerTex(<span class="string">'D'</span>);</span><br><span class="line"></span><br><span class="line">G.Add_Edges(<span class="number">0</span>, <span class="number">1</span>, <span class="number">12.3</span>);</span><br><span class="line">G.Add_Edges(<span class="number">0</span>, <span class="number">3</span>, <span class="number">9.5</span>);</span><br><span class="line">G.Add_Edges(<span class="number">0</span>, <span class="number">2</span>, <span class="number">3.1</span>);</span><br><span class="line">G.Add_Edges(<span class="number">1</span>, <span class="number">2</span>, <span class="number">13</span>);</span><br><span class="line">G.Add_Edges(<span class="number">2</span>, <span class="number">3</span>, <span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">G.print();</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"顶点数量为: "</span> &lt;&lt; G.Get_n_vertex() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"边的数量为: "</span> &lt;&lt; G.Get_n_edges() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>实验结果：<img src="/2019/08/16/数据结构学习总结-（6-4）图的实现-邻接矩阵/1.png"></p></li></ul><p>—（本文完）</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;邻接矩阵&quot;&gt;&lt;a href=&quot;#邻接矩阵&quot; class=&quot;headerlink&quot; title=&quot;邻接矩阵&quot;&gt;&lt;/a&gt;邻接矩阵&lt;/h4&gt;&lt;p&gt;用一个二维数组存放顶点间关系（边或弧）的数据，这个二维数组称为邻接矩阵。邻接矩阵又分为有向图邻接矩阵和无向图邻接矩阵。&lt;br
      
    
    </summary>
    
      <category term="代码学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="数据结构学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="学习总结" scheme="https://shuhaohwang.github.io/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
      <category term="数据结构" scheme="https://shuhaohwang.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="数据结构-学习总结" scheme="https://shuhaohwang.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>数据结构学习总结-（6.3）图的实现边表</title>
    <link href="https://shuhaohwang.github.io/2019/08/15/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%886-3%EF%BC%89%E5%9B%BE%E7%9A%84%E5%AE%9E%E7%8E%B0%E8%BE%B9%E8%A1%A8/"/>
    <id>https://shuhaohwang.github.io/2019/08/15/数据结构学习总结-（6-3）图的实现边表/</id>
    <published>2019-08-15T13:26:14.000Z</published>
    <updated>2019-08-15T15:38:47.519Z</updated>
    
    <content type="html"><![CDATA[<h4 id="边表"><a href="#边表" class="headerlink" title="边表"></a>边表</h4><ul><li>边表是把图的顶点，和边分别用顺序表进行存储的结构</li><li>这种存储结构是最简单、最容易实现的图存储结构</li><li>缺点：如果边的数目过大，会使效率降低</li></ul><hr><h4 id="代码实现及思路"><a href="#代码实现及思路" class="headerlink" title="代码实现及思路"></a>代码实现及思路</h4><ul><li><p>边表结构</p><ul><li><p>思路：因为边表是通过两个顺序表分别存储顶点集和边集的存储结构，所以在实现时可以通过创建顶点集和边集的结构，其中边集要有两个顶点在顶点集中的下标数值，和该边对应的权值。其中顺序表可以通过C++内置的vector结构实现。</p></li><li><p>代码实现：</p><ul><li><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> VT,<span class="keyword">typename</span> Einfo&gt; <span class="class"><span class="keyword">class</span> <span class="title">ElistGraph</span>&#123;</span></span><br><span class="line">    <span class="comment">/*实现边集结构*/</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Edge</span>&#123;</span></span><br><span class="line">        <span class="comment">/*边两头的顶点在顶点集的下标*/</span></span><br><span class="line">        <span class="keyword">int</span> x;</span><br><span class="line">        <span class="keyword">int</span> y;</span><br><span class="line">        Einfo info;<span class="comment">//用来存储权的数据</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">/*边集构造函数*/</span></span><br><span class="line">        Edge(<span class="keyword">int</span> i,<span class="keyword">int</span> j,Einfo info):x(i),y(j),info(info)&#123;&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">vector</span>&lt;VT&gt;VerTex;<span class="comment">//顶点集</span></span><br><span class="line">    <span class="built_in">vector</span>&lt;Edge&gt;Edges;<span class="comment">//边集</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">bool</span> undirected;<span class="comment">//用来标记是否为无向图</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">/*边表构造函数(默认为无向表)*/</span></span><br><span class="line">     ElistGraph(<span class="keyword">bool</span> undirected = <span class="literal">true</span>):undirected(undirecter)&#123;&#125;; </span><br><span class="line">        </span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><p>添加顶点</p><ul><li><p>思路：直接通过对vector结构进行操作添加即可</p></li><li><p>代码实现：</p><ul><li><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add_VerTex</span><span class="params">(VT vertex)</span></span>&#123;VerTex.push_back(vertex);&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><p>添加边</p><ul><li><p>思路：跟添加顶点操作一致</p></li><li><p>代码实现：</p><ul><li><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add_Edge</span><span class="params">(<span class="keyword">const</span> <span class="keyword">int</span> i, <span class="keyword">const</span> <span class="keyword">int</span> j, <span class="keyword">const</span> Einfo&amp; info)</span></span>&#123;Edges.push_back(Edge(i,j,info));&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul></li></ul><hr><h4 id="代码实现："><a href="#代码实现：" class="headerlink" title="代码实现："></a>代码实现：</h4><img src="/2019/08/15/数据结构学习总结-（6-3）图的实现边表/1.png"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* VT 顶点数据</span></span><br><span class="line"><span class="comment">* Einfo 边数据类型(权)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> VT,<span class="keyword">typename</span> Einfo&gt;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ElistGraph</span> &#123;</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Edge</span> &#123;</span></span><br><span class="line"><span class="keyword">int</span> x;</span><br><span class="line"><span class="keyword">int</span> y;</span><br><span class="line">Einfo info;</span><br><span class="line">Edge(<span class="keyword">int</span> i, <span class="keyword">int</span> j, Einfo inf) :x(i), y(j), info(inf) &#123;&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">vector</span>&lt;VT&gt; VerTex;</span><br><span class="line"><span class="built_in">vector</span>&lt;Edge&gt; Edges;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> undirected;<span class="comment">//判断是否为无向图</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">/*默认为有向图*/</span></span><br><span class="line">ElistGraph(<span class="keyword">bool</span> undirected = <span class="literal">true</span>):undirected(undirected)&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*添加顶点*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Add_VerTex</span><span class="params">(VT vertex)</span> </span>&#123; VerTex.push_back(vertex); &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*添加边*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Add_Edges</span><span class="params">(<span class="keyword">const</span> <span class="keyword">int</span> i, <span class="keyword">const</span> <span class="keyword">int</span> j, <span class="keyword">const</span> Einfo&amp; info)</span> </span>&#123; Edges.push_back(Edge(i, j ,info)); &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*重载运算符*/</span></span><br><span class="line"></span><br><span class="line">VT <span class="keyword">operator</span>[](<span class="keyword">int</span> i)&#123;<span class="keyword">return</span> VerTex[i];&#125;</span><br><span class="line">VT&amp; <span class="keyword">operator</span>[](<span class="keyword">int</span> i) &#123; <span class="keyword">return</span> VerTex[i]; &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*获得顶点数量*/</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_n_VT</span><span class="params">()</span> <span class="keyword">const</span></span>&#123; <span class="keyword">return</span> VerTex.size(); &#125;</span><br><span class="line"><span class="comment">/*获得边的数量*/</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_n_e</span><span class="params">()</span> <span class="keyword">const</span></span>&#123; <span class="keyword">return</span> Edges.size(); &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*打印信息*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"顶点："</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span>&amp; x : VerTex) &#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; x &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="string">"边："</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span>&amp; e : Edges) &#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; e.x &lt;&lt; <span class="string">" "</span> &lt;&lt; e.y &lt;&lt; <span class="string">" "</span> &lt;&lt; e.info &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ElistGraph&lt;<span class="keyword">char</span>, <span class="keyword">double</span>&gt; G(<span class="literal">false</span>);</span><br><span class="line">G.Add_VerTex(<span class="string">'A'</span>);</span><br><span class="line">G.Add_VerTex(<span class="string">'B'</span>);</span><br><span class="line">G.Add_VerTex(<span class="string">'C'</span>);</span><br><span class="line">G.Add_VerTex(<span class="string">'D'</span>);</span><br><span class="line"></span><br><span class="line">G.Add_Edges(<span class="number">0</span>, <span class="number">1</span>, <span class="number">12.3</span>);</span><br><span class="line">G.Add_Edges(<span class="number">0</span>, <span class="number">3</span>, <span class="number">9.5</span>);</span><br><span class="line">G.Add_Edges(<span class="number">0</span>, <span class="number">2</span>, <span class="number">3.1</span>);</span><br><span class="line">G.Add_Edges(<span class="number">1</span>, <span class="number">2</span>, <span class="number">13</span>);</span><br><span class="line">G.Add_Edges(<span class="number">2</span>, <span class="number">3</span>, <span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">G.print();</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"顶点数量为: "</span> &lt;&lt; G.get_n_VT() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"边的数量为: "</span> &lt;&lt; G.get_n_e() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​    </p><p>实验结果：<img src="/2019/08/15/数据结构学习总结-（6-3）图的实现边表/2.png"></p><p>—（本文完）</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;边表&quot;&gt;&lt;a href=&quot;#边表&quot; class=&quot;headerlink&quot; title=&quot;边表&quot;&gt;&lt;/a&gt;边表&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;边表是把图的顶点，和边分别用顺序表进行存储的结构&lt;/li&gt;
&lt;li&gt;这种存储结构是最简单、最容易实现的图存储结构&lt;/li&gt;
&lt;l
      
    
    </summary>
    
      <category term="代码学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="数据结构学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="学习总结" scheme="https://shuhaohwang.github.io/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
      <category term="数据结构" scheme="https://shuhaohwang.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="数据结构-学习总结" scheme="https://shuhaohwang.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>数据结构学习总结-（6.2）图的抽象数据类型</title>
    <link href="https://shuhaohwang.github.io/2019/08/15/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%886-2%EF%BC%89%E5%9B%BE%E7%9A%84%E6%8A%BD%E8%B1%A1%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
    <id>https://shuhaohwang.github.io/2019/08/15/数据结构学习总结-（6-2）图的抽象数据类型/</id>
    <published>2019-08-15T13:05:08.000Z</published>
    <updated>2019-08-15T13:25:09.553Z</updated>
    
    <content type="html"><![CDATA[<h4 id="图的抽象数据类型"><a href="#图的抽象数据类型" class="headerlink" title="图的抽象数据类型"></a>图的抽象数据类型</h4><ul><li>ADT Graph</li><li>Data     V是具有相同特性的数据元素的集合名称为顶点集</li><li>Relation<ul><li>R = {VR}</li><li>VR = {<v,w>|V,W∈V且P(V,W) <v,w>表示从V，W的弧，P(v,w)定义了弧的<v,w>的意义}</v,w></v,w></v,w></li></ul></li><li>Operation<ul><li>createGraph(&amp;G,V,VR)<ul><li>初始条件：V是图的顶点集，VR是图中边/弧的集合</li><li>操作结果：按V和VR的定义构造图G</li></ul></li><li>DFSTraverse(G)<ul><li>初始条件：图G存在</li><li>操作结果：对图进行<strong>深度优先遍历</strong>，在遍历过程中对每个顶点访问一次</li></ul></li><li>BFSTraverse(G)<ul><li>初始条件：图G存在</li><li>操作结果：对图进行<strong>广度优先遍历</strong>，在遍历过程中对每个顶点访问一次</li></ul></li></ul></li></ul><hr><h4 id="图的数据存储结构"><a href="#图的数据存储结构" class="headerlink" title="图的数据存储结构"></a>图的数据存储结构</h4><ul><li>边表</li><li>数组表示法(邻接矩阵)</li><li>邻接表</li><li>十字链表(有向图)</li><li>多重邻接表(无向图)</li></ul><p>— (本文完)</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;图的抽象数据类型&quot;&gt;&lt;a href=&quot;#图的抽象数据类型&quot; class=&quot;headerlink&quot; title=&quot;图的抽象数据类型&quot;&gt;&lt;/a&gt;图的抽象数据类型&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;ADT Graph&lt;/li&gt;
&lt;li&gt;Data     V是具有相同特性的数据元
      
    
    </summary>
    
      <category term="代码学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="数据结构学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="学习总结" scheme="https://shuhaohwang.github.io/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
      <category term="数据结构" scheme="https://shuhaohwang.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="数据结构-学习总结" scheme="https://shuhaohwang.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>C++进阶学习总结-（2.7）左值和右值、左右值引用、std::move()函数</title>
    <link href="https://shuhaohwang.github.io/2019/08/15/C-%E8%BF%9B%E9%98%B6%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%882-7%EF%BC%89%E5%B7%A6%E5%80%BC%E5%92%8C%E5%8F%B3%E5%80%BC%E3%80%81%E5%B7%A6%E5%8F%B3%E5%80%BC%E5%BC%95%E7%94%A8%E3%80%81std-move-%E5%87%BD%E6%95%B0/"/>
    <id>https://shuhaohwang.github.io/2019/08/15/C-进阶学习总结-（2-7）左值和右值、左右值引用、std-move-函数/</id>
    <published>2019-08-14T18:10:46.000Z</published>
    <updated>2019-08-15T08:24:27.816Z</updated>
    
    <content type="html"><![CDATA[<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="此文章是加密文章，请输入密码后查看." />    <label for="pass">此文章是加密文章，请输入密码后查看.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      讲述左值和右值、C++11中新版的右值引用运算符 &amp;&amp;、std::move()函数（加密文章）
    
    </summary>
    
      <category term="代码学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="C++学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/C-%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="C++" scheme="https://shuhaohwang.github.io/tags/C/"/>
    
      <category term="学习总结" scheme="https://shuhaohwang.github.io/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
      <category term="C++学习总结" scheme="https://shuhaohwang.github.io/tags/C-%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>数据结构学习总结-（6-1）图的定义及概念</title>
    <link href="https://shuhaohwang.github.io/2019/08/15/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%886-1%EF%BC%89%E5%9B%BE%E7%9A%84%E5%AE%9A%E4%B9%89%E5%8F%8A%E6%A6%82%E5%BF%B5/"/>
    <id>https://shuhaohwang.github.io/2019/08/15/数据结构学习总结-（6-1）图的定义及概念/</id>
    <published>2019-08-14T16:44:55.000Z</published>
    <updated>2019-08-14T18:07:05.380Z</updated>
    
    <content type="html"><![CDATA[<h4 id="图"><a href="#图" class="headerlink" title="图"></a>图</h4><ul><li>定义：图G(graph)是一些点和线的集合<ul><li><img src="/2019/08/15/数据结构学习总结-（6-1）图的定义及概念/1.png"></li><li>图中的点叫作<strong>顶点</strong>(VerTex)</li><li>两个顶点的连线叫作<strong>边</strong>(Edges)</li><li>Graph = (V,E)<ul><li>V：顶点(数据元素)的<strong>有穷非空</strong>集合</li><li>E：边的有穷集合</li></ul></li></ul></li></ul><hr><h4 id="图的分类"><a href="#图的分类" class="headerlink" title="图的分类"></a>图的分类</h4><ul><li><p>无向图</p><ul><li><img src="/2019/08/15/数据结构学习总结-（6-1）图的定义及概念/2.png"></li><li>每一条边都是没有方向的</li><li>顶点集合{A,B,C,D}</li><li>边集合{(A,B),(A,D),(C,D),(C,B),(A,C)}</li></ul></li><li><p>有向图</p><ul><li><img src="/2019/08/15/数据结构学习总结-（6-1）图的定义及概念/3.png" title="其中B为弧头(Head),D为弧尾(Tail)"></li><li>每一条边有方向的，也称弧(arc)</li><li>顶点集合{A,B,C,D}</li><li>边集合{(B,A),(A,D),(B,C),(C,A)}</li></ul></li><li>完全图<ul><li><img src="/2019/08/15/数据结构学习总结-（6-1）图的定义及概念/4.png"></li><li>任意两个顶点都有一条边相连的图叫作<strong>完全图</strong></li><li>无向完全图：如果有<strong>N个结点</strong>那么它有<strong>N(N-1)/2条边</strong></li><li>有向完全图：如果有<strong>N个结点</strong>那么它有<strong>N(N-1)条边</strong></li></ul></li><li>网<ul><li><img src="/2019/08/15/数据结构学习总结-（6-1）图的定义及概念/5.png"></li><li>网是边或弧<strong>带权</strong>的图</li><li>无向网</li><li>有向网</li></ul></li></ul><hr><h5 id="子图"><a href="#子图" class="headerlink" title="子图"></a>子图</h5><img src="/2019/08/15/数据结构学习总结-（6-1）图的定义及概念/6.png" title="1和2是3的子图"><ul><li>1和2是3的子图</li></ul><hr><h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><img src="/2019/08/15/数据结构学习总结-（6-1）图的定义及概念/2.png"><ol><li>如果边(V,U)∈E，则称顶点V和U互为邻接点(Adjacent)<ul><li>例：A/B、B/C、C/D…互为邻接点</li></ul></li><li>边(V,U)依附于(incident)顶点V和U(或边与顶点相关联)<ul><li>例：边(A,B)依附于顶点A、B上</li></ul></li><li>顶点V的度(Degree)是和V相关联的边的数量，记为TD(V)，对于有向图：有出度和入度<ul><li>例：A的度为3、D的度为2</li><li><strong>握手定理</strong>：边数(E) = 各顶点度数和/2</li></ul></li></ol><h5 id="相关术语解释"><a href="#相关术语解释" class="headerlink" title="相关术语解释"></a>相关术语解释</h5><ul><li><p>路径</p><ul><li>若从一个顶点V<sub>i</sub>出发，沿一些边经过一些顶点，再到达顶点V<sub>k</sub>,则称沿途的经过顶点的序列为从V<sub>i</sub>到V<sub>k</sub>的路径</li></ul></li><li><p>路径的长度</p><ul><li>路径上的边或弧的数目</li></ul></li><li>回路(环)<ul><li>起点与终点相同的路径</li></ul></li><li>简单路径<ul><li><strong>没有重复</strong>顶点的路径，即不含回路</li></ul></li><li>简单回路<ul><li>除起点和终点相同外，<strong>没有</strong>其余<strong>重复</strong>顶点的路径</li></ul></li></ul><hr><h5 id="连通图"><a href="#连通图" class="headerlink" title="连通图"></a>连通图</h5><ul><li>在<strong>无向图</strong>G中，如果从顶点V到顶点V`<strong>有路径</strong>，则称V和V’是连通的</li><li>如果对于图中的任意两个顶点V<sub>i</sub>和V<sub>k</sub><strong>都是连通</strong>的，则称G是<strong>连通图</strong></li><li>是否连通是对无向图来说的</li></ul><h5 id="强连通图"><a href="#强连通图" class="headerlink" title="强连通图"></a>强连通图</h5><ul><li>在<strong>有向图</strong>G中，从顶点u到顶点v有路径，且从顶点v到顶点u也有路径，则称u和v是强连通的</li><li>如果有向图的任意两个顶点u和v都是强连通，则称G是<strong>强连通图</strong></li><li>是否强连通是对于有向图来说的</li></ul><p>—（本文完）</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;图&quot;&gt;&lt;a href=&quot;#图&quot; class=&quot;headerlink&quot; title=&quot;图&quot;&gt;&lt;/a&gt;图&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;定义：图G(graph)是一些点和线的集合&lt;ul&gt;
&lt;li&gt;&lt;img src=&quot;/2019/08/15/数据结构学习总结-（6-1）图的
      
    
    </summary>
    
      <category term="代码学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="数据结构学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="学习总结" scheme="https://shuhaohwang.github.io/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
      <category term="数据结构" scheme="https://shuhaohwang.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="数据结构-学习总结" scheme="https://shuhaohwang.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>数据结构学习总结-（5.14.1）哈夫曼编码表的代码实现</title>
    <link href="https://shuhaohwang.github.io/2019/08/11/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%885-14-1%EF%BC%89%E5%93%88%E5%A4%AB%E6%9B%BC%E7%BC%96%E7%A0%81%E8%A1%A8%E7%9A%84%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0/"/>
    <id>https://shuhaohwang.github.io/2019/08/11/数据结构学习总结-（5-14-1）哈夫曼编码表的代码实现/</id>
    <published>2019-08-11T14:39:41.000Z</published>
    <updated>2019-08-11T16:38:48.698Z</updated>
    
    <content type="html"><![CDATA[<h4 id="哈夫曼编码表"><a href="#哈夫曼编码表" class="headerlink" title="哈夫曼编码表"></a>哈夫曼编码表</h4><ol><li>根据构建的哈夫曼树，左分支标记为0有分支标记为1</li><li>通过二维数组保存编码表</li></ol><hr><h5 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h5><ul><li><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> code[<span class="number">256</span>][<span class="number">128</span>] <span class="comment">//存储哈夫曼编码表</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Codeing</span><span class="params">(haffmanNode* node,<span class="keyword">char</span>* temparray,<span class="keyword">int</span> index)</span></span>&#123;</span><br><span class="line">    <span class="comment">/*处理空结点的情况+递归出口*/</span></span><br><span class="line">    <span class="keyword">if</span>(!node)<span class="keyword">return</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/*当到达叶结点的时候*/</span></span><br><span class="line">    <span class="keyword">if</span>(!node-&gt;R_Node || !node-&gt;L_Node)&#123;</span><br><span class="line">        temparray[index] = <span class="string">'\0'</span>;</span><br><span class="line">        </span><br><span class="line">        strcpy_s(code[node-&gt;data<span class="number">-0</span>],<span class="number">128</span>,temparray);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/*递归获取编码表*/</span></span><br><span class="line">    temparray[index] = <span class="string">'0'</span>;</span><br><span class="line">    Codeing(node-&gt;L_Node,temparray,index++);</span><br><span class="line">    temparray[index] = <span class="string">'1'</span>;</span><br><span class="line">    Codeing(node-&gt;R_Node,temparray,index++);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h5 id="技术小结："><a href="#技术小结：" class="headerlink" title="技术小结："></a>技术小结：</h5><ul><li>temparray数组用来临时存储字符对应的哈夫曼编码，存储格式为字符串</li><li>这里采用二维数组来存储哈夫曼编码表，第一维下标为字符对于的ASCII码，所储存的为对应的编码</li><li>当到达叶结点的时候，在该位置下标的temparry设置为结束符，意味着一个字符串(字符编码)的存储完毕</li></ul><hr><h4 id="编码过程解析"><a href="#编码过程解析" class="headerlink" title="编码过程解析"></a>编码过程解析</h4><img src="/2019/08/11/数据结构学习总结-（5-14-1）哈夫曼编码表的代码实现/1.png"><ul><li>第一步：<code>Codeing(haffmanNode* node,char* temparray,int index)</code><ul><li>根据哈夫曼树构建完毕的node数组</li><li>定义<code>char* temparray[128]；</code>index = 0；</li><li>parent4 拥有左右孩子且不空、temparray[0]  = 0</li></ul></li><li>第二步: <code>Codeing(node(parent4)-&gt;L_Node,temparray,index++);</code><ul><li>index = 1</li><li>B无左右孩子执行<code>if(!node-&gt;R_Node || !node-&gt;L_Node)</code>，temparry[1] = ‘\0’</li><li>code[66(B)] = “0”</li><li>return结束此处递归</li></ul></li><li>第三步： <code>Codeing(node(parent4)-&gt;R_Node,temparray,index++);</code><ul><li>index = 1、temparray[0] = 1</li><li>parent3 拥有左右孩子且不空执行左递归、temparry[1] = 0</li></ul></li><li>第四步：<code>Codeing(node(parent3)-&gt;L_Node,temparray,index++);</code><ul><li>index = 2 </li><li>D结点没有左右孩子执行<code>if(!node-&gt;R_Node || !node-&gt;L_Node)</code>、temparray[2] = ‘\0’</li><li>code[68(D)] = “10”</li><li>return结束此处递归</li></ul></li><li>第五步：<code>Codeing(node(parent3)-&gt;R_Node,temparray,index++)；</code><ul><li>temparry[1] = 1,index = 2</li><li>parent2拥有左右孩子且不空指向左递归、temparry[2] = 0</li></ul></li><li>第六步：<code>Codeing(node(parent2)-&gt;L_Node,temparray,index++)；</code><ul><li>index = 3</li><li>parent1拥有左右孩子且不空指向左递归、temparry[3] = 0</li></ul></li><li>第七步：<code>Codeing(node(parent1)-&gt;L_Node,temparray,index++)；</code><ul><li>index = 4</li><li>C结点没有左右孩子执行<code>if(!node-&gt;R_Node || !node-&gt;L_Node)</code>、temparray[4] = ‘\0’</li><li>code[67(C)] = “1100”</li><li>return结束此处递归</li></ul></li><li>第八步：<code>Codeing(node(parent1)-&gt;R_Node,temparray,index++)；</code><ul><li>temparry[3] = 1，index = 4</li><li>E结点没有左右孩子执行<code>if(!node-&gt;R_Node || !node-&gt;L_Node)</code>、temparray[4] = ‘\0’</li><li>code[69(E)] = “1101”</li><li>return结束此处递归</li></ul></li><li>第九步：<code>Codeing(node(parent2)-&gt;R_Node,temparray,index++)；</code><ul><li>temparry[2] = 1、index = 3</li><li>A结点没有左右孩子执行<code>if(!node-&gt;R_Node || !node-&gt;L_Node)</code>、temparray[3] = ‘\0’</li><li>code[65(A)] = “111”</li></ul></li></ul><hr><ul><li><img src="/2019/08/11/数据结构学习总结-（5-14-1）哈夫曼编码表的代码实现/2.png"></li><li>| code[下标] | 储存元素（编码） |<br>| :————: | :———————: |<br>|  65（A）   |       111        |<br>|  66（B）   |        0         |<br>|  67（C）   |       1100       |<br>|  68（D）   |        10        |<br>|  69（E）   |       1101       |</li></ul><h5 id="解析过程错误小结："><a href="#解析过程错误小结：" class="headerlink" title="解析过程错误小结："></a>解析过程错误小结：</h5><ul><li>函数递归时传参是形参，即index在递归时自加了。结束该分支后返回上一个函数时index值还是递归自加前的值</li></ul><p>—（本文完）</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;哈夫曼编码表&quot;&gt;&lt;a href=&quot;#哈夫曼编码表&quot; class=&quot;headerlink&quot; title=&quot;哈夫曼编码表&quot;&gt;&lt;/a&gt;哈夫曼编码表&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;根据构建的哈夫曼树，左分支标记为0有分支标记为1&lt;/li&gt;
&lt;li&gt;通过二维数组保存编码表&lt;/l
      
    
    </summary>
    
      <category term="代码学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="数据结构学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="学习总结" scheme="https://shuhaohwang.github.io/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
      <category term="数据结构" scheme="https://shuhaohwang.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="数据结构-学习总结" scheme="https://shuhaohwang.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>数据结构学习总结-（5.14）哈夫曼树的构建代码实现</title>
    <link href="https://shuhaohwang.github.io/2019/08/11/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%885-14%EF%BC%89%E5%93%88%E5%A4%AB%E6%9B%BC%E6%A0%91%E7%9A%84%E6%9E%84%E5%BB%BA%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0/"/>
    <id>https://shuhaohwang.github.io/2019/08/11/数据结构学习总结-（5-14）哈夫曼树的构建代码实现/</id>
    <published>2019-08-10T17:16:45.000Z</published>
    <updated>2019-08-11T14:37:32.852Z</updated>
    
    <content type="html"><![CDATA[<h4 id="哈夫曼树的构建"><a href="#哈夫曼树的构建" class="headerlink" title="哈夫曼树的构建"></a>哈夫曼树的构建</h4><h5 id="哈夫曼树的构建步骤"><a href="#哈夫曼树的构建步骤" class="headerlink" title="哈夫曼树的构建步骤"></a>哈夫曼树的构建步骤</h5><ol><li>根据权重进行从小到大排列</li><li>取最小的两个构成一个子树,并使两个的权值相加用来代替这两个结点</li><li>根据这个新的权重再进行排列</li><li>重复1.2.3步</li></ol><hr><h5 id="代码实现-顺序结构储存"><a href="#代码实现-顺序结构储存" class="headerlink" title="代码实现(顺序结构储存)"></a>代码实现(顺序结构储存)</h5><ul><li><p>结点的构建</p><ul><li><p>根据哈夫曼树的构建，结点首先要包含权值、左右子树指针，其次要包含数据</p></li><li><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">haffmanNode</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> weigth;<span class="comment">//权值</span></span><br><span class="line">    <span class="keyword">char</span> data;<span class="comment">//数据</span></span><br><span class="line">    </span><br><span class="line">    haffmanNode* L_Node;<span class="comment">//左孩子</span></span><br><span class="line">    haffmanNode* R_Node;<span class="comment">//右孩子</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*顺序结构存储二叉树*/</span></span><br><span class="line"></span><br><span class="line">haffmanNode node[<span class="number">256</span>]；</span><br><span class="line"></span><br><span class="line">haffmanNode allL_Node[<span class="number">128</span>];</span><br><span class="line">haffmanNode allR_Node[<span class="number">128</span>];</span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>根据权值进行排序(冒泡排序)</p><ul><li><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sortHaffmanNode</span><span class="params">(haffmanNode* nodes,<span class="keyword">int</span> length)</span></span>&#123;</span><br><span class="line">    haffmanNode temp;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; length<span class="number">-1</span>; i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; length - <span class="number">1</span> - i; k++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(nodes[k].weight &lt; nodes[k+<span class="number">1</span>].weight)&#123;</span><br><span class="line">                temp = nodes[k];</span><br><span class="line">                nodes[k] = nodes[k+<span class="number">1</span>];</span><br><span class="line">                nodes[k+<span class="number">1</span>] = temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>哈夫曼树的构建</p><ul><li><p>对结点先进行排序取最小的构成一颗树</p></li><li><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CreateHaffmanTree</span><span class="params">(haffmanNode* nodes, <span class="keyword">int</span> length)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(length &lt;= <span class="number">1</span>)<span class="keyword">return</span>;<span class="comment">//递归出口</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">/*根据权值进行排序*/</span></span><br><span class="line">    sortHaffmanNode(nodes,length);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/*用来压缩成哈夫曼编码用*/</span></span><br><span class="line">    allL_Node[length] = nodes[length<span class="number">-1</span>];<span class="comment">//保存左结点</span></span><br><span class="line">    allR_Node[length] = nodes[length<span class="number">-2</span>];<span class="comment">//保存右结点</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">/*取最小权重的两个结点重新组成树*/</span></span><br><span class="line">    haffmanNode parent;</span><br><span class="line">    parent.weight = allL_Node[length].weight + allR_Node[length].weight;</span><br><span class="line">    </span><br><span class="line">    parent.L_Node = &amp;allL_Node[length];</span><br><span class="line">    parent.R_Node = &amp;allR_Node[length];</span><br><span class="line">    </span><br><span class="line">    nodes[length - <span class="number">2</span>] = parent;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//递归直至哈夫曼树创建完成</span></span><br><span class="line">    CreateHaffmanTree(nodes,length - <span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h4 id="哈夫曼树构建解析"><a href="#哈夫曼树构建解析" class="headerlink" title="哈夫曼树构建解析"></a>哈夫曼树构建解析</h4><p>例图：<img src="/2019/08/11/数据结构学习总结-（5-14）哈夫曼树的构建代码实现/1.png"></p><ul><li><p>第一步：<code>void CreateHaffmanTree(haffNode* node, int length)</code></p><ul><li><p>node数组内容{A(12),B(26),C(5),D(18),E(4)}，length = 5；</p></li><li><p>排序后 node{B,D,A,C,E},取最小结点C、E组成树</p></li><li><p><code>allL_Node[5] = C、allR_Node[5] = E</code></p></li><li><p>parent1：weight = (4 + 5)9、L_Node = C、R_Node = E</p></li><li><p>node 数组内容变更为{B(26),D(18),A(12),parent1(9)}</p></li></ul></li><li><p>第二步：<code>CreateHaffmanTree(node, length - 1(4))</code></p><ul><li>node 数组内容{B(26),D(18),A(12),parent1(9)}，length = 4</li><li>排序后 node{B,D,A,parent1},取最小结点A、parent1组成树</li><li><code>allL_Node[4] = parent1、allR_Node[4] = A</code></li><li>parent2：weight = (9+12)21、L_Node = parent1、R_Node = A\</li><li>node 数组内容变更为{B(26),D(18),parent2(21)}</li></ul></li><li><p>第三步：<code>CreateHaffmanTree(node, length - 1(3))</code></p><ul><li>node 数组内容{B(26),D(18),parent2(21)}、length = 3</li><li>排序后 node{B,parent2,D},取最小结点parent2、D组成树</li><li><code>allL_Node[3] = D、allR_Node[3] = parent2</code></li><li>parent3：weight = (18+21)39、L_Node = D、R_Node = parent2</li><li>node 数组内容变更为{B(26),parent3(39)}</li></ul></li><li><p>第四步：<code>CreateHaffmanTree(node, length - 1(2))</code></p><ul><li>node 数组内容{B(26),parent3(39)}、length = 2</li><li>排序后 node{parent3,B},取最小结点parent3、B组成树</li><li><code>allL_Node[2] = B、allR_Node[2] = parent3</code></li><li>parent4：weight = (26+39)65、L_Node = B、R_Node = parent3</li><li>node 数组内容变更为{parent4(65)}</li></ul></li><li><p>第五步：<code>CreateHaffmanTree(node, length - 1(1))</code></p><ul><li>length = 1 符合<code>if(length &lt;= 1)return;</code>结束递归，哈夫曼树创建完毕</li></ul></li></ul><hr><img src="/2019/08/11/数据结构学习总结-（5-14）哈夫曼树的构建代码实现/2.png"><div class="table-container"><table><thead><tr><th style="text-align:center">allL_Node</th><th style="text-align:center">1</th><th style="text-align:center">2</th><th style="text-align:center">3</th><th style="text-align:center">4</th><th style="text-align:center">5</th></tr></thead><tbody><tr><td style="text-align:center">\</td><td style="text-align:center">NULL</td><td style="text-align:center">B</td><td style="text-align:center">D</td><td style="text-align:center">parent1</td><td style="text-align:center">C</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th style="text-align:center">allR_Node</th><th style="text-align:center">1</th><th style="text-align:center">2</th><th style="text-align:center">3</th><th style="text-align:center">4</th><th style="text-align:center">5</th></tr></thead><tbody><tr><td style="text-align:center">\</td><td style="text-align:center">NULL</td><td style="text-align:center">parent3</td><td style="text-align:center">parent2</td><td style="text-align:center">A</td><td style="text-align:center">E</td></tr></tbody></table></div><p>—（本文完）</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;哈夫曼树的构建&quot;&gt;&lt;a href=&quot;#哈夫曼树的构建&quot; class=&quot;headerlink&quot; title=&quot;哈夫曼树的构建&quot;&gt;&lt;/a&gt;哈夫曼树的构建&lt;/h4&gt;&lt;h5 id=&quot;哈夫曼树的构建步骤&quot;&gt;&lt;a href=&quot;#哈夫曼树的构建步骤&quot; class=&quot;header
      
    
    </summary>
    
      <category term="代码学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="数据结构学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="学习总结" scheme="https://shuhaohwang.github.io/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
      <category term="数据结构" scheme="https://shuhaohwang.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="数据结构-学习总结" scheme="https://shuhaohwang.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>数据结构学习总结-（5.13）哈夫曼编码</title>
    <link href="https://shuhaohwang.github.io/2019/08/10/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%885-13%EF%BC%89%E5%93%88%E5%A4%AB%E6%9B%BC%E7%BC%96%E7%A0%81/"/>
    <id>https://shuhaohwang.github.io/2019/08/10/数据结构学习总结-（5-13）哈夫曼编码/</id>
    <published>2019-08-09T16:46:14.000Z</published>
    <updated>2019-08-09T17:49:51.117Z</updated>
    
    <content type="html"><![CDATA[<h4 id="哈夫曼编码"><a href="#哈夫曼编码" class="headerlink" title="哈夫曼编码"></a>哈夫曼编码</h4><h5 id="哈夫曼编码是什么？"><a href="#哈夫曼编码是什么？" class="headerlink" title="哈夫曼编码是什么？"></a>哈夫曼编码是什么？</h5><p>哈夫曼编码是用来压缩数据的一种手段，在网络上信息的传输都是通过二进制来进行输送的（0和1），在进行数据输送的时候，首先就要将即将输送的数据进行转码，使其变为二进制再进行传输。例如：</p><ul><li><p>要传输<code>‘ABCADBBAED’</code>这段数据。且你知道一个二进制转换编码表：</p><ul><li>| 字符 | 编码 |<br>| :—: | :—: |<br>|  A   | 000  |<br>|  B   | 100  |<br>|  C   | 110  |<br>|  D   | 111  |<br>|  E   | 101  |</li></ul></li><li><p>则这段字符串会先转换成二进制码：<code>000100110000111100100000101111</code></p></li><li><p>上面的二进制转换表编码是以3位进行编码的，而用哈夫曼编码进行编译转换，则会让这段字符串传输的时候能够更为简短。</p></li></ul><h5 id="哈夫曼编码的使用"><a href="#哈夫曼编码的使用" class="headerlink" title="哈夫曼编码的使用"></a>哈夫曼编码的使用</h5><p>哈夫曼编码是通过哈夫曼树进行转换出来的，例如在上面的字符串：<code>‘ABCADBBAED’</code>是出现在一个文章里面的，这个文章里面含有：</p><div class="table-container"><table><thead><tr><th style="text-align:center">字符</th><th style="text-align:center">出现次数</th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:center">12</td></tr><tr><td style="text-align:center">B</td><td style="text-align:center">26</td></tr><tr><td style="text-align:center">C</td><td style="text-align:center">5</td></tr><tr><td style="text-align:center">D</td><td style="text-align:center">18</td></tr><tr><td style="text-align:center">E</td><td style="text-align:center">4</td></tr></tbody></table></div><p>根据上表进行转换为哈夫曼树</p><img src="/2019/08/10/数据结构学习总结-（5-13）哈夫曼编码/1.png"><p>通过对哈夫曼树处理，往左走为0往右走为1，通过记录会形成一个新的转换表</p><img src="/2019/08/10/数据结构学习总结-（5-13）哈夫曼编码/2.png"><ul><li>| 字符 | 编码 |<br>| :—: | :—: |<br>|  A   | 111  |<br>|  B   |  0   |<br>|  C   | 1100 |<br>|  D   |  10  |<br>|  E   | 1101 |</li></ul><p>根据表中的内容把要输送的字符串<code>‘ABCADBBAED’</code>进行转换成二进制<code>111011001111000111110110</code></p><p>对比一开始用3个编码进行转换的字符串编码会发现，哈夫曼编码进行转换处理的二进制码数为24个，比前面的少了6个，可以发现运用哈夫曼编码可以使传输的二进制码被压缩成更简单二进制码。</p><hr><h5 id="哈夫曼编码的好处"><a href="#哈夫曼编码的好处" class="headerlink" title="哈夫曼编码的好处"></a>哈夫曼编码的好处</h5><ul><li><strong>使转换的二进制码更简洁</strong><ul><li>哈夫曼编码是通过检测传输的字符串中字符的出现频率进行生成对应的编码表。采用的是前缀编码。</li></ul></li><li><strong>因为采用的前缀的编码，进行译码的时候减少出错</strong></li><li>….</li></ul><hr><h4 id="译码"><a href="#译码" class="headerlink" title="译码"></a>译码</h4><p>进行译码的过程很简单，通过一开始构建的哈夫曼树，进行译码。</p><ul><li><p>例如：<code>111011001111000111110110</code></p><ul><li><img src="/2019/08/10/数据结构学习总结-（5-13）哈夫曼编码/2.png"></li></ul></li><li><p>译码过程：<strong>从根开始</strong>遇到0就走左，遇到1就走右，当到达叶结点的时候，翻译出该字符，然后<strong>重新返回根结点重新识别</strong></p></li><li><p>译码结果：ABCADBBAED</p></li></ul><hr><h5 id="小结："><a href="#小结：" class="headerlink" title="小结："></a>小结：</h5><ul><li>从上面的译码过程可以看出，对哈夫曼编码编码后的二进制码进行译码的时候只需根据编码对哈夫曼树进行遍历即可。</li></ul><p>—（本文完）</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;哈夫曼编码&quot;&gt;&lt;a href=&quot;#哈夫曼编码&quot; class=&quot;headerlink&quot; title=&quot;哈夫曼编码&quot;&gt;&lt;/a&gt;哈夫曼编码&lt;/h4&gt;&lt;h5 id=&quot;哈夫曼编码是什么？&quot;&gt;&lt;a href=&quot;#哈夫曼编码是什么？&quot; class=&quot;headerlink&quot; ti
      
    
    </summary>
    
      <category term="代码学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="数据结构学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="学习总结" scheme="https://shuhaohwang.github.io/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
      <category term="数据结构" scheme="https://shuhaohwang.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="数据结构-学习总结" scheme="https://shuhaohwang.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>数据结构学习总结-（5.12）中序线索二叉树的遍历</title>
    <link href="https://shuhaohwang.github.io/2019/08/03/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%885-12%EF%BC%89%E4%B8%AD%E5%BA%8F%E7%BA%BF%E7%B4%A2%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E9%81%8D%E5%8E%86/"/>
    <id>https://shuhaohwang.github.io/2019/08/03/数据结构学习总结-（5-12）中序线索二叉树的遍历/</id>
    <published>2019-08-03T09:03:17.000Z</published>
    <updated>2019-08-03T11:04:43.986Z</updated>
    
    <content type="html"><![CDATA[<h4 id="中序线索二叉树"><a href="#中序线索二叉树" class="headerlink" title="中序线索二叉树"></a>中序线索二叉树</h4><p>在（5.11）中的线索二叉树便为中序二叉树，因其线索化时利用的是中序遍历。所以构建的线索二叉树为中序线索二叉树。</p><hr><h4 id="中序线索二叉树的遍历算法"><a href="#中序线索二叉树的遍历算法" class="headerlink" title="中序线索二叉树的遍历算法"></a>中序线索二叉树的遍历算法</h4><p>通过构建的中序线索二叉树的特点。叶子结点存在直接指向前驱和后继的结点的指针，在遍历的时候就可以快速的定位。</p><ul><li><p>代码：</p><ul><li><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Threaded_Mid_Traversal</span><span class="params">(BiTreeNode* R)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!R)<span class="keyword">return</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(R-&gt;L_Node)&#123;</span><br><span class="line">        R = R-&gt;L_Node;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(R)&#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; R-&gt;data &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(!R-&gt;RTag)&#123;</span><br><span class="line">            R = R-&gt;R_Node;</span><br><span class="line">            <span class="keyword">while</span>(R-&gt;LTag)&#123;</span><br><span class="line">                R = R-&gt;L_Node;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        &#125;<span class="keyword">else</span> R = R-&gt;R_Node; </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>实验结果：<img src="/2019/08/03/数据结构学习总结-（5-12）中序线索二叉树的遍历/1.png"></p></li></ul></li></ul><hr><h4 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h4><p>通过利用线索来进行遍历就可以避免递归或者要使用栈结构来进行遍历。</p><p>—（本文完）</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;中序线索二叉树&quot;&gt;&lt;a href=&quot;#中序线索二叉树&quot; class=&quot;headerlink&quot; title=&quot;中序线索二叉树&quot;&gt;&lt;/a&gt;中序线索二叉树&lt;/h4&gt;&lt;p&gt;在（5.11）中的线索二叉树便为中序二叉树，因其线索化时利用的是中序遍历。所以构建的线索二叉树为中序
      
    
    </summary>
    
      <category term="代码学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="数据结构学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="学习总结" scheme="https://shuhaohwang.github.io/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
      <category term="数据结构" scheme="https://shuhaohwang.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="数据结构-学习总结" scheme="https://shuhaohwang.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>数据结构学习总结-（5.11）线索二叉树</title>
    <link href="https://shuhaohwang.github.io/2019/08/03/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%885-11%EF%BC%89%E7%BA%BF%E7%B4%A2%E4%BA%8C%E5%8F%89%E6%A0%91/"/>
    <id>https://shuhaohwang.github.io/2019/08/03/数据结构学习总结-（5-11）线索二叉树/</id>
    <published>2019-08-03T02:08:19.000Z</published>
    <updated>2019-08-03T09:41:50.229Z</updated>
    
    <content type="html"><![CDATA[<h4 id="线索二叉树"><a href="#线索二叉树" class="headerlink" title="线索二叉树"></a>线索二叉树</h4><p>在构造一个二叉树的时候，我们通常会用两个指针来分别代表左孩子和右孩子，但在叶结点上这两个指针往往是空的，且不但是叶结点，在少数结点上也会存在左右孩子不存在的情况下，那么这些空的指针往往会造成资源的浪费，这就为什么要存在线索二叉树，它能使这些空掉的指针能重新运用起来。</p><h5 id="线索二叉树的构成"><a href="#线索二叉树的构成" class="headerlink" title="线索二叉树的构成"></a>线索二叉树的构成</h5><p>为了实现线索二叉树能够使空的指针能被重新利用起来，所以在结点结构定义的时候再添加两个标识符变量。这些标识符存在的目的是为了区分一个结点的左右孩子是否为空，如果是空那么就会指向前驱或者后置结点，如果不为空说明这个指针是指向左右孩子的。</p><img src="/2019/08/03/数据结构学习总结-（5-11）线索二叉树/1.png"><p>从上面的图可以看出来，当右标识符为<code>&#39;0&#39;</code>的时候说明他的右孩子指针指向的是右孩子，当标识符为<code>&#39;1&#39;</code>的时候，说明这个结点的右孩子指针指向的不是右孩子(即：该结点没有右孩子)而是这个结点的前驱结点，同理，左标识符便是判断其左孩子的指针是指向后置结点还是左孩子。</p><hr><h4 id="二叉树线索化"><a href="#二叉树线索化" class="headerlink" title="二叉树线索化"></a>二叉树线索化</h4><p>根据上面所说的线索二叉树，从最基本的来看，线索二叉树相比普通二叉树就是在没有左孩子或者右孩子的结点中这些本该指向左右孩子的指针不为空，使其能重新废物利用。所以把一个二叉树线索化的主要思路便是遍历一个二叉树，逐一判断每个结点的左右孩子是否为空，若为空那么就让其能指向这个结点的前驱结点或者后置结点。</p><ul><li><p>综上所述，线索化的主要操作就是基于遍历算法。</p><ul><li><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Tree_Threaded</span><span class="params">(BiTreeNode* R)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!R)<span class="keyword">return</span>;</span><br><span class="line">    Tree_Threaded(R -&gt; L_Node);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//在此区域内实现线索二叉树的主要操作...</span></span><br><span class="line">    </span><br><span class="line">    Tree_Threaded(R -&gt; R_Node);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><p>在开始线索化之前还需要将结点结构进行变化，即要多定义两个标识符表示用来进行判断左右孩子指针的指向。</p><ul><li><p>代码：</p><ul><li><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">BiTreeNode</span>&#123;</span></span><br><span class="line">  <span class="keyword">char</span> data;</span><br><span class="line">    BiTreeNode* L_Node;</span><br><span class="line">    BiTreeNode* R_Node;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/*标识符变量*/</span></span><br><span class="line">    <span class="keyword">int</span> RTag;</span><br><span class="line">    <span class="keyword">int</span> LTag;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li></ul></li></ul><p>其次二叉树存在没有利用的指针，线索化后，这些空指针会指向该结点的前驱结点或者后置结点，这也就是说在线索化过程中还要有两个临时变量能够指向受判断结点的前驱结点和后置结点，方便在判断该结点在没有左右孩子的情况下，使其两个指针能够快速的指向前驱和后置结点。</p><hr><h4 id="线索化二叉树的代码实现"><a href="#线索化二叉树的代码实现" class="headerlink" title="线索化二叉树的代码实现"></a>线索化二叉树的代码实现</h4><ul><li><p>代码：</p><ul><li><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Tree_Threaded</span><span class="params">(BiTreeNode* R，BiTreeNode* &amp;pre)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!R)<span class="keyword">return</span>;</span><br><span class="line">    Tree_Threaded(R -&gt; L_Node,pre);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(!R-&gt;L_Node)&#123;</span><br><span class="line">        R-&gt;L_Node = pre;</span><br><span class="line">        R-&gt;LTag = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(pre &amp;&amp; !pre-&gt;R_Node)&#123;</span><br><span class="line">        pre-&gt;R_Node = R;</span><br><span class="line">        pre-&gt;RTag = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> pre = R;</span><br><span class="line">    Tree_Threaded(R -&gt; R_Node,pre);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h5 id="二叉树线索化解析："><a href="#二叉树线索化解析：" class="headerlink" title="二叉树线索化解析："></a>二叉树线索化解析：</h5><p>例图：<img src="/2019/08/03/数据结构学习总结-（5-11）线索二叉树/2.png"></p><ul><li><p>第一次：</p></li><li><p>|        |  A   |  B   |  C   |    D    |  E   |<br>| :——: | :—: | :—: | :—: | :——-: | :—: |<br>| R_Node |      |      |      |         |      |<br>| L_Node |      |      |      | nullptr |      |<br>|  RTag  |      |      |      |         |      |<br>|  LTag  |      |      |      |    0    |      |</p><ul><li>pre指向D</li></ul></li></ul><hr><ul><li><p>第二次：</p></li><li><p>|        |  A   |  B   |  C   |    D    |  E   |<br>| :——: | :—: | :—: | :—: | :——-: | :—: |<br>| R_Node |      |  E   |      |    B    |      |<br>| L_Node |      |  D   |      | nullptr |  B   |<br>|  RTag  |      |  0   |      |    1    |      |<br>|  LTag  |      |  0   |      |    0    |  1   |</p><ul><li>pre先指向B，递归至E结点后指向E</li></ul></li></ul><hr><ul><li><p>第三次：</p></li><li><p>|        |  A   |  B   |  C   |    D    |  E   |<br>| :——: | :—: | :—: | :—: | :——-: | :—: |<br>| R_Node |  C   |  E   |      |    B    |  A   |<br>| L_Node |  B   |  D   |      | nullptr |  B   |<br>|  RTag  |  0   |  0   |      |    1    |  1   |<br>|  LTag  |  0   |  0   |      |    0    |  1   |</p><ul><li>pre先指向E后指向A</li></ul></li></ul><hr><ul><li><p>第四次：</p></li><li><p>|        |  A   |  B   |    C    |    D    |  E   |<br>| :——: | :—: | :—: | :——-: | :——-: | :—: |<br>| R_Node |  C   |  E   | nullptr |    B    |  A   |<br>| L_Node |  B   |  D   |    A    | nullptr |  B   |<br>|  RTag  |  0   |  0   |    0    |    1    |  1   |<br>|  LTag  |  0   |  0   |    1    |    0    |  1   |</p><ul><li>pre先指向A后指向C</li></ul></li></ul><hr><h4 id="线索二叉树的好处："><a href="#线索二叉树的好处：" class="headerlink" title="线索二叉树的好处："></a>线索二叉树的好处：</h4><p>从上面可以看出，线索二叉树的一些结点空出来的指针被重新利用起来，再到达叶子结点的时候，可以直接通过左右孩子的指针快速定位到其的前驱结点或后继结点，根据这个性质在进行遍历的时候就可以直接访问这些通过线索链接起来的结点。</p><p>—（本文完）</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;线索二叉树&quot;&gt;&lt;a href=&quot;#线索二叉树&quot; class=&quot;headerlink&quot; title=&quot;线索二叉树&quot;&gt;&lt;/a&gt;线索二叉树&lt;/h4&gt;&lt;p&gt;在构造一个二叉树的时候，我们通常会用两个指针来分别代表左孩子和右孩子，但在叶结点上这两个指针往往是空的，且不但是叶结
      
    
    </summary>
    
      <category term="代码学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="数据结构学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="学习总结" scheme="https://shuhaohwang.github.io/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
      <category term="数据结构" scheme="https://shuhaohwang.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="数据结构-学习总结" scheme="https://shuhaohwang.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
</feed>
