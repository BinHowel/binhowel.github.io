<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>双子星Binaryؼ</title>
  
  <subtitle>相逐彼此-却永不能接触</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://shuhaohwang.github.io/"/>
  <updated>2019-08-03T11:04:43.986Z</updated>
  <id>https://shuhaohwang.github.io/</id>
  
  <author>
    <name>ShuHaoHwang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>数据结构学习总结-（5.12）中序线索二叉树的遍历</title>
    <link href="https://shuhaohwang.github.io/2019/08/03/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%885-12%EF%BC%89%E4%B8%AD%E5%BA%8F%E7%BA%BF%E7%B4%A2%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E9%81%8D%E5%8E%86/"/>
    <id>https://shuhaohwang.github.io/2019/08/03/数据结构学习总结-（5-12）中序线索二叉树的遍历/</id>
    <published>2019-08-03T09:03:17.000Z</published>
    <updated>2019-08-03T11:04:43.986Z</updated>
    
    <content type="html"><![CDATA[<h4 id="中序线索二叉树"><a class="header-anchor" href="#中序线索二叉树">¶</a>中序线索二叉树</h4><p>在（5.11）中的线索二叉树便为中序二叉树，因其线索化时利用的是中序遍历。所以构建的线索二叉树为中序线索二叉树。</p><hr><h4 id="中序线索二叉树的遍历算法"><a class="header-anchor" href="#中序线索二叉树的遍历算法">¶</a>中序线索二叉树的遍历算法</h4><p>通过构建的中序线索二叉树的特点。叶子结点存在直接指向前驱和后继的结点的指针，在遍历的时候就可以快速的定位。</p><ul><li><p>代码：</p><ul><li><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Threaded_Mid_Traversal</span><span class="params">(BiTreeNode* R)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!R)<span class="keyword">return</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(R-&gt;L_Node)&#123;</span><br><span class="line">        R = R-&gt;L_Node;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(R)&#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; R-&gt;data &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(!R-&gt;RTag)&#123;</span><br><span class="line">            R = R-&gt;R_Node;</span><br><span class="line">            <span class="keyword">while</span>(R-&gt;LTag)&#123;</span><br><span class="line">                R = R-&gt;L_Node;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        &#125;<span class="keyword">else</span> R = R-&gt;R_Node; </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>实验结果：<img src="/2019/08/03/数据结构学习总结-（5-12）中序线索二叉树的遍历/1.png"></p></li></ul></li></ul><hr><h4 id="总结："><a class="header-anchor" href="#总结：">¶</a>总结：</h4><p>通过利用线索来进行遍历就可以避免递归或者要使用栈结构来进行遍历。</p><p>–（本文完）</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;中序线索二叉树&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#中序线索二叉树&quot;&gt;¶&lt;/a&gt;中序线索二叉树&lt;/h4&gt;
&lt;p&gt;在（5.11）中的线索二叉树便为中序二叉树，因其线索化时利用的是中序遍历。所以构建的线索二叉树为中序线索二叉树。&lt;/p&gt;

      
    
    </summary>
    
      <category term="代码学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="数据结构学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="学习总结" scheme="https://shuhaohwang.github.io/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
      <category term="数据结构" scheme="https://shuhaohwang.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="数据结构-学习总结" scheme="https://shuhaohwang.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>数据结构学习总结-（5.11）线索二叉树</title>
    <link href="https://shuhaohwang.github.io/2019/08/03/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%885-11%EF%BC%89%E7%BA%BF%E7%B4%A2%E4%BA%8C%E5%8F%89%E6%A0%91/"/>
    <id>https://shuhaohwang.github.io/2019/08/03/数据结构学习总结-（5-11）线索二叉树/</id>
    <published>2019-08-03T02:08:19.000Z</published>
    <updated>2019-08-03T09:41:50.229Z</updated>
    
    <content type="html"><![CDATA[<h4 id="线索二叉树"><a class="header-anchor" href="#线索二叉树">¶</a>线索二叉树</h4><p>在构造一个二叉树的时候，我们通常会用两个指针来分别代表左孩子和右孩子，但在叶结点上这两个指针往往是空的，且不但是叶结点，在少数结点上也会存在左右孩子不存在的情况下，那么这些空的指针往往会造成资源的浪费，这就为什么要存在线索二叉树，它能使这些空掉的指针能重新运用起来。</p><h5 id="线索二叉树的构成"><a class="header-anchor" href="#线索二叉树的构成">¶</a>线索二叉树的构成</h5><p>为了实现线索二叉树能够使空的指针能被重新利用起来，所以在结点结构定义的时候再添加两个标识符变量。这些标识符存在的目的是为了区分一个结点的左右孩子是否为空，如果是空那么就会指向前驱或者后置结点，如果不为空说明这个指针是指向左右孩子的。</p><img src="/2019/08/03/数据结构学习总结-（5-11）线索二叉树/1.png"><p>从上面的图可以看出来，当右标识符为<code>'0'</code>的时候说明他的右孩子指针指向的是右孩子，当标识符为<code>'1'</code>的时候，说明这个结点的右孩子指针指向的不是右孩子(即：该结点没有右孩子)而是这个结点的前驱结点，同理，左标识符便是判断其左孩子的指针是指向后置结点还是左孩子。</p><hr><h4 id="二叉树线索化"><a class="header-anchor" href="#二叉树线索化">¶</a>二叉树线索化</h4><p>根据上面所说的线索二叉树，从最基本的来看，线索二叉树相比普通二叉树就是在没有左孩子或者右孩子的结点中这些本该指向左右孩子的指针不为空，使其能重新废物利用。所以把一个二叉树线索化的主要思路便是遍历一个二叉树，逐一判断每个结点的左右孩子是否为空，若为空那么就让其能指向这个结点的前驱结点或者后置结点。</p><ul><li><p>综上所述，线索化的主要操作就是基于遍历算法。</p><ul><li><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Tree_Threaded</span><span class="params">(BiTreeNode* R)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!R)<span class="keyword">return</span>;</span><br><span class="line">    Tree_Threaded(R -&gt; L_Node);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//在此区域内实现线索二叉树的主要操作...</span></span><br><span class="line">    </span><br><span class="line">    Tree_Threaded(R -&gt; R_Node);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><p>在开始线索化之前还需要将结点结构进行变化，即要多定义两个标识符表示用来进行判断左右孩子指针的指向。</p><ul><li><p>代码：</p><ul><li><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">BiTreeNode</span>&#123;</span></span><br><span class="line">  <span class="keyword">char</span> data;</span><br><span class="line">    BiTreeNode* L_Node;</span><br><span class="line">    BiTreeNode* R_Node;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/*标识符变量*/</span></span><br><span class="line">    <span class="keyword">int</span> RTag;</span><br><span class="line">    <span class="keyword">int</span> LTag;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li></ul></li></ul><p>其次二叉树存在没有利用的指针，线索化后，这些空指针会指向该结点的前驱结点或者后置结点，这也就是说在线索化过程中还要有两个临时变量能够指向受判断结点的前驱结点和后置结点，方便在判断该结点在没有左右孩子的情况下，使其两个指针能够快速的指向前驱和后置结点。</p><hr><h4 id="线索化二叉树的代码实现"><a class="header-anchor" href="#线索化二叉树的代码实现">¶</a>线索化二叉树的代码实现</h4><ul><li><p>代码：</p><ul><li><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Tree_Threaded</span><span class="params">(BiTreeNode* R，BiTreeNode* &amp;pre)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!R)<span class="keyword">return</span>;</span><br><span class="line">    Tree_Threaded(R -&gt; L_Node,pre);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(!R-&gt;L_Node)&#123;</span><br><span class="line">        R-&gt;L_Node = pre;</span><br><span class="line">        R-&gt;LTag = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(pre &amp;&amp; !pre-&gt;R_Node)&#123;</span><br><span class="line">        pre-&gt;R_Node = R;</span><br><span class="line">        pre-&gt;RTag = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> pre = R;</span><br><span class="line">    Tree_Threaded(R -&gt; R_Node,pre);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h5 id="二叉树线索化解析："><a class="header-anchor" href="#二叉树线索化解析：">¶</a>二叉树线索化解析：</h5><p>例图：<img src="/2019/08/03/数据结构学习总结-（5-11）线索二叉树/2.png"></p><ul><li><p>第一次：</p></li><li><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">A</th><th style="text-align:center">B</th><th style="text-align:center">C</th><th style="text-align:center">D</th><th style="text-align:center">E</th></tr></thead><tbody><tr><td style="text-align:center">R_Node</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center">L_Node</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">nullptr</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">RTag</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center">LTag</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">0</td><td style="text-align:center"></td></tr></tbody></table><ul><li>pre指向D</li></ul></li></ul><hr><ul><li><p>第二次：</p></li><li><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">A</th><th style="text-align:center">B</th><th style="text-align:center">C</th><th style="text-align:center">D</th><th style="text-align:center">E</th></tr></thead><tbody><tr><td style="text-align:center">R_Node</td><td style="text-align:center"></td><td style="text-align:center">E</td><td style="text-align:center"></td><td style="text-align:center">B</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">L_Node</td><td style="text-align:center"></td><td style="text-align:center">D</td><td style="text-align:center"></td><td style="text-align:center">nullptr</td><td style="text-align:center">B</td></tr><tr><td style="text-align:center">RTag</td><td style="text-align:center"></td><td style="text-align:center">0</td><td style="text-align:center"></td><td style="text-align:center">1</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">LTag</td><td style="text-align:center"></td><td style="text-align:center">0</td><td style="text-align:center"></td><td style="text-align:center">0</td><td style="text-align:center">1</td></tr></tbody></table><ul><li>pre先指向B，递归至E结点后指向E</li></ul></li></ul><hr><ul><li><p>第三次：</p></li><li><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">A</th><th style="text-align:center">B</th><th style="text-align:center">C</th><th style="text-align:center">D</th><th style="text-align:center">E</th></tr></thead><tbody><tr><td style="text-align:center">R_Node</td><td style="text-align:center">C</td><td style="text-align:center">E</td><td style="text-align:center"></td><td style="text-align:center">B</td><td style="text-align:center">A</td></tr><tr><td style="text-align:center">L_Node</td><td style="text-align:center">B</td><td style="text-align:center">D</td><td style="text-align:center"></td><td style="text-align:center">nullptr</td><td style="text-align:center">B</td></tr><tr><td style="text-align:center">RTag</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center"></td><td style="text-align:center">1</td><td style="text-align:center">1</td></tr><tr><td style="text-align:center">LTag</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center"></td><td style="text-align:center">0</td><td style="text-align:center">1</td></tr></tbody></table><ul><li>pre先指向E后指向A</li></ul></li></ul><hr><ul><li><p>第四次：</p></li><li><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">A</th><th style="text-align:center">B</th><th style="text-align:center">C</th><th style="text-align:center">D</th><th style="text-align:center">E</th></tr></thead><tbody><tr><td style="text-align:center">R_Node</td><td style="text-align:center">C</td><td style="text-align:center">E</td><td style="text-align:center">nullptr</td><td style="text-align:center">B</td><td style="text-align:center">A</td></tr><tr><td style="text-align:center">L_Node</td><td style="text-align:center">B</td><td style="text-align:center">D</td><td style="text-align:center">A</td><td style="text-align:center">nullptr</td><td style="text-align:center">B</td></tr><tr><td style="text-align:center">RTag</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">1</td><td style="text-align:center">1</td></tr><tr><td style="text-align:center">LTag</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">1</td><td style="text-align:center">0</td><td style="text-align:center">1</td></tr></tbody></table><ul><li>pre先指向A后指向C</li></ul></li></ul><hr><h4 id="线索二叉树的好处："><a class="header-anchor" href="#线索二叉树的好处：">¶</a>线索二叉树的好处：</h4><p>从上面可以看出，线索二叉树的一些结点空出来的指针被重新利用起来，再到达叶子结点的时候，可以直接通过左右孩子的指针快速定位到其的前驱结点或后继结点，根据这个性质在进行遍历的时候就可以直接访问这些通过线索链接起来的结点。</p><p>–（本文完）</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;线索二叉树&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#线索二叉树&quot;&gt;¶&lt;/a&gt;线索二叉树&lt;/h4&gt;
&lt;p&gt;在构造一个二叉树的时候，我们通常会用两个指针来分别代表左孩子和右孩子，但在叶结点上这两个指针往往是空的，且不但是叶结点，在少数结点上也
      
    
    </summary>
    
      <category term="代码学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="数据结构学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="学习总结" scheme="https://shuhaohwang.github.io/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
      <category term="数据结构" scheme="https://shuhaohwang.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="数据结构-学习总结" scheme="https://shuhaohwang.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>数据结构学习总结-（5-10）前序遍历非递归实现</title>
    <link href="https://shuhaohwang.github.io/2019/08/01/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%885-10%EF%BC%89%E5%89%8D%E5%BA%8F%E9%81%8D%E5%8E%86%E9%9D%9E%E9%80%92%E5%BD%92%E5%AE%9E%E7%8E%B0/"/>
    <id>https://shuhaohwang.github.io/2019/08/01/数据结构学习总结-（5-10）前序遍历非递归实现/</id>
    <published>2019-08-01T08:41:16.000Z</published>
    <updated>2019-08-01T08:52:19.758Z</updated>
    
    <content type="html"><![CDATA[<h4 id="前序遍历的非递归实现"><a class="header-anchor" href="#前序遍历的非递归实现">¶</a>前序遍历的非递归实现</h4><ul><li><p>思路：跟中序遍历的差不多，通过栈结构，进行排序访问输出。先从根结点开始，往下进行访问和移动，因为是堆栈所以要注意，在进行左右孩子移动的时候，应该让右孩子先入栈，左孩子后入栈，根据栈结构FIBO(先进后出)的结构特点，所以左孩子会先进行访问</p></li><li><p>代码：</p><ul><li><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">pre_Traversal</span><span class="params">(BiTreeNode* R)</span></span>&#123;</span><br><span class="line">    <span class="built_in">stack</span>&lt;BiTreeNode*&gt; s;</span><br><span class="line">    BiTreeNode* T = R;</span><br><span class="line">    s.push(T);</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(!s.empty())&#123;</span><br><span class="line">        T = s.top();s.pop();</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; T-&gt;data &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(T-&gt;R_Node)s.push(T-&gt;R_Node);</span><br><span class="line">        <span class="keyword">if</span>(T-&gt;L_Node)s.push(T-&gt;L_Node);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;前序遍历的非递归实现&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#前序遍历的非递归实现&quot;&gt;¶&lt;/a&gt;前序遍历的非递归实现&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;思路：跟中序遍历的差不多，通过栈结构，进行排序访问输出。先从根结点开始，往下进行访问
      
    
    </summary>
    
      <category term="代码学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="C++学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/C-%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="学习总结" scheme="https://shuhaohwang.github.io/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
      <category term="数据结构" scheme="https://shuhaohwang.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="数据结构-学习总结" scheme="https://shuhaohwang.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>数据结构学习总结-（5.9.1）二叉树的遍历非递归[附加]</title>
    <link href="https://shuhaohwang.github.io/2019/07/31/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%885-9-1%EF%BC%89%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E9%81%8D%E5%8E%86%E9%9D%9E%E9%80%92%E5%BD%92-%E9%99%84%E5%8A%A0/"/>
    <id>https://shuhaohwang.github.io/2019/07/31/数据结构学习总结-（5-9-1）二叉树的遍历非递归-附加/</id>
    <published>2019-07-31T10:26:28.000Z</published>
    <updated>2019-07-31T15:57:24.536Z</updated>
    
    <content type="html"><![CDATA[<h4 id="代码1"><a class="header-anchor" href="#代码1">¶</a>代码1:</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">Mid_Traversal</span><span class="params">(BiTreeNode* Root)</span></span>&#123;</span><br><span class="line">    <span class="built_in">stack</span>&lt;BiTreeNode*&gt; s;</span><br><span class="line">    BiTreeNode* T = Root;</span><br><span class="line">    <span class="keyword">while</span>(!s.empty()||T)&#123;</span><br><span class="line">        <span class="keyword">if</span>(T)&#123;</span><br><span class="line">            T = T-&gt;L_Node;</span><br><span class="line">            s.push(T)</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            T = s.top();</span><br><span class="line">            s.pop();</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; T-&gt;data &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">            T = T-&gt;R_Node;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="代码2："><a class="header-anchor" href="#代码2：">¶</a>代码2：</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">Mid_Traversal</span><span class="params">(BiTreeNode* Root)</span></span>&#123;</span><br><span class="line">    <span class="built_in">stack</span>&lt;BiTreeNode*&gt; s;</span><br><span class="line">BiTreeNode* T = Root;</span><br><span class="line">s.push(T);</span><br><span class="line">    <span class="keyword">while</span>(!s.empty())&#123;</span><br><span class="line">        <span class="keyword">while</span>(T = s.top())</span><br><span class="line">            s.push(T-&gt;L_Node);</span><br><span class="line">        </span><br><span class="line">        T = s.top();s.pop();</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(!s.empty())&#123;</span><br><span class="line">            T = s.top();s.pop();</span><br><span class="line">        <span class="keyword">if</span> (!Visit(T))<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">s.push(T-&gt;R_Node);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;代码1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#代码1&quot;&gt;¶&lt;/a&gt;代码1:&lt;/h4&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span clas
      
    
    </summary>
    
      <category term="代码学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="数据结构学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="学习总结" scheme="https://shuhaohwang.github.io/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
      <category term="数据结构" scheme="https://shuhaohwang.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="数据结构-学习总结" scheme="https://shuhaohwang.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>数据结构学习总结-（5.9）二叉树的遍历非递归</title>
    <link href="https://shuhaohwang.github.io/2019/07/25/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%885-9%EF%BC%89%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E9%81%8D%E5%8E%86%E9%9D%9E%E9%80%92%E5%BD%92/"/>
    <id>https://shuhaohwang.github.io/2019/07/25/数据结构学习总结-（5-9）二叉树的遍历非递归/</id>
    <published>2019-07-25T06:56:21.000Z</published>
    <updated>2019-07-25T07:51:36.930Z</updated>
    
    <content type="html"><![CDATA[<h4 id="递归的优缺点"><a class="header-anchor" href="#递归的优缺点">¶</a>递归的优缺点</h4><p>二叉树的遍历可以使用递归的方式来实现，递归调用函数思路简单，且可以让代码简洁清晰，但是递归也有其不够好的地方的。总所周知程序中函数的调用是要消耗系统内存的，在小范围小幅度的递归对程序不会有太大的影响，但是如果递归的深度太大，会使内存枯竭，程序崩溃。即：递归即有好处也有坏处</p><ul><li>递归的优点：<ul><li>代码简洁</li></ul></li><li>递归的缺点：<ul><li>过多递归会影响系统内存和程序运行效率</li></ul></li></ul><hr><h4 id="二叉树非递归的代码实现及思路"><a class="header-anchor" href="#二叉树非递归的代码实现及思路">¶</a>二叉树非递归的代码实现及思路</h4><p>正如上面所说，函数递归在遍历较小的二叉树是没有太大的问题的。但若遍历深度巨大的二叉树，使用递归来遍历是不太可行的。所以二叉树非递归的方式来实现遍历也理所当然的变的重要。</p><ul><li><p>二叉树非递归遍历的实现<strong>思路</strong>：通过栈数据结构，进行入栈操作，先把树的每一个结点的左孩子入栈直至访问到叶结点，随后进行访问，访问一个出栈一个，并检测此时的右孩子是否为空，若不空，重复上述的操作即可。</p></li><li><p>代码实现:</p><ul><li><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">Mid_Traversal</span><span class="params">(BiTreeNode* Root)</span></span>&#123;</span><br><span class="line">    <span class="built_in">stack</span>&lt;BiTreeNode*&gt; s;</span><br><span class="line">    BiTreeNode* T = Root;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">do</span>&#123;</span><br><span class="line">        <span class="keyword">while</span>(T)&#123;</span><br><span class="line">            s.push(T);</span><br><span class="line">            T = T-&gt;L_Node;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        T = s.top();</span><br><span class="line">        s.pop();</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; T-&gt;data &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">        T = T-&gt;R_Node;</span><br><span class="line">    &#125;<span class="keyword">while</span>(!s.Empty()||T);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>实验结果:<img src="/2019/07/25/数据结构学习总结-（5-9）二叉树的遍历非递归/1.png"></p></li></ul></li></ul><hr><h4 id="函数流程演示"><a class="header-anchor" href="#函数流程演示">¶</a>函数流程演示</h4><img src="/2019/07/25/数据结构学习总结-（5-9）二叉树的遍历非递归/2.png"><ul><li><p>第一步：A结点不空进入循环，入栈。</p><ul><li><table><thead><tr><th style="text-align:center">栈顶</th></tr></thead><tbody><tr><td style="text-align:center">A</td></tr></tbody></table></li></ul></li><li><p>第二步：B结点入栈、第三次循环D结点入栈。</p><ul><li><table><thead><tr><th style="text-align:center">栈顶</th></tr></thead><tbody><tr><td style="text-align:center">D</td></tr><tr><td style="text-align:center">B</td></tr><tr><td style="text-align:center">A</td></tr></tbody></table></li></ul></li><li><p>第三步：跳出循环，T指针指向栈顶,访问栈顶数据，并出栈。</p><ul><li><p><code>T：-&gt;D</code></p></li><li><p><strong>输出了D</strong></p></li><li><table><thead><tr><th style="text-align:center">栈顶</th></tr></thead><tbody><tr><td style="text-align:center">B</td></tr><tr><td style="text-align:center">A</td></tr></tbody></table></li></ul></li><li><p>第四步：T重新指向此时指向结点的右孩子。第一次外循环结束。</p><ul><li><code>T：-&gt;D.R_Node(nullptr)</code></li></ul></li><li><p>第五步：开始第二次外循环，因为T为空内循环不执行、T指向栈顶，访问栈顶数据。</p><ul><li><p><code>T：-&gt;B</code></p></li><li><p><strong>输出了B</strong></p></li><li><table><thead><tr><th style="text-align:center">栈顶</th></tr></thead><tbody><tr><td style="text-align:center">A</td></tr></tbody></table></li></ul></li></ul><ul><li><p>第六步：T指向了B结点的右孩子E，结束第二次外循环。</p><ul><li><code>T：-&gt;E</code></li></ul></li><li><p>第七步：此时T不空执行内循环，E入栈,T指向E结点的左孩子,因为E结点的左孩子为空跳出循环。</p><ul><li><table><thead><tr><th style="text-align:center">栈顶</th></tr></thead><tbody><tr><td style="text-align:center">E</td></tr><tr><td style="text-align:center">A</td></tr></tbody></table></li></ul></li><li><p>第八步：T指向栈顶，访问栈顶数据，出栈。</p><ul><li><p><code>T：-&gt;E</code></p></li><li><p><strong>输出了E</strong></p></li><li><table><thead><tr><th style="text-align:center">栈顶</th></tr></thead><tbody><tr><td style="text-align:center">A</td></tr></tbody></table></li></ul></li><li><p>第九步：T指向E结点的右孩子，因为为空所以结束第三次外循环。</p><ul><li><code>T：-&gt;E.R_Node(nullptr)</code></li></ul></li><li><p>第十步：因为此时T为空不执行内循环，T指向栈顶，访问栈顶数据，出栈。</p><ul><li><p><code>T：-&gt;A</code></p></li><li><p><strong>输出了A</strong></p></li><li><table><thead><tr><th style="text-align:center">栈顶</th></tr></thead><tbody><tr><td style="text-align:center">空</td></tr></tbody></table></li></ul></li><li><p>第十一步：T指向A结点的右孩子C，因为是空栈，所以也结束第四次外循环，重新开始下一轮循环。</p><ul><li><code>T：-&gt;C</code></li></ul></li><li><p>第十二步：T不为空，指向内循环，入栈，更新T指向C的左孩子，为空结束内循环。</p><ul><li><table><thead><tr><th style="text-align:center">栈顶</th></tr></thead><tbody><tr><td style="text-align:center">C</td></tr></tbody></table></li></ul></li><li><p>第十三步：T指向栈顶，访问栈顶，出栈</p><ul><li><p><code>T：-&gt;C</code></p></li><li><p><strong>输出了C</strong></p></li><li><table><thead><tr><th style="text-align:center">栈顶</th></tr></thead><tbody><tr><td style="text-align:center">空</td></tr></tbody></table></li></ul></li><li><p>第十四步：T指向C结点的右孩子，但为空，且栈也为空栈，跳出外循环。结束遍历操作。</p></li><li><p>结果输出：D、B、E、A、C</p></li><li><img src="/2019/07/25/数据结构学习总结-（5-9）二叉树的遍历非递归/3.png"></li></ul><p>–（本文完）</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;递归的优缺点&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#递归的优缺点&quot;&gt;¶&lt;/a&gt;递归的优缺点&lt;/h4&gt;
&lt;p&gt;二叉树的遍历可以使用递归的方式来实现，递归调用函数思路简单，且可以让代码简洁清晰，但是递归也有其不够好的地方的。总所周知程序中函
      
    
    </summary>
    
      <category term="代码学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="数据结构学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="学习总结" scheme="https://shuhaohwang.github.io/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
      <category term="数据结构" scheme="https://shuhaohwang.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="数据结构-学习总结" scheme="https://shuhaohwang.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>数据结构学习总结-（5.8）哈夫曼树概念及定义</title>
    <link href="https://shuhaohwang.github.io/2019/07/23/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%885-8%EF%BC%89%E5%93%88%E5%A4%AB%E6%9B%BC%E6%A0%91%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%AE%9A%E4%B9%89/"/>
    <id>https://shuhaohwang.github.io/2019/07/23/数据结构学习总结-（5-8）哈夫曼树概念及定义/</id>
    <published>2019-07-23T13:18:38.000Z</published>
    <updated>2019-07-23T19:16:00.191Z</updated>
    
    <content type="html"><![CDATA[<h4 id="哈夫曼树概念"><a class="header-anchor" href="#哈夫曼树概念">¶</a>哈夫曼树概念</h4><p>给定n个权作为n个结点，构造一颗二叉树，若树的带权路径长度(WPL)最短，就称其为哈夫曼树也称其为最优二叉树。</p><h5 id="相关术语及概念解释"><a class="header-anchor" href="#相关术语及概念解释">¶</a>相关术语及概念解释</h5><ul><li><u>路径和路径长度</u>：从树中一个结点到另一个结点之间的分支构成两个结点之间的路径，路径上的分支数量称为路径长度。<ul><li><img src="/2019/07/23/数据结构学习总结-（5-8）哈夫曼树概念及定义/1.png" title="A到B的路径长度为1，A到F和A到D的路径长度为2"></li></ul></li><li><u>树的路径长度：</u>就是树根到<font color="red">每一个结点</font>的路径长度之和<ul><li><img src="/2019/07/23/数据结构学习总结-（5-8）哈夫曼树概念及定义/1.png" title="该树的路径长度为 1+1+2+2+2 = 8"></li></ul></li><li><u>带权路径长度：</u>从根结点到该结点之间的路径长度与权的乘积<ul><li><img src="/2019/07/23/数据结构学习总结-（5-8）哈夫曼树概念及定义/2.png" title="0号点到3号点的带权路径长度为`1*83 + 2*11 = 105`"></li></ul></li><li><u>树的带权路径长度：</u>就是树的每一个结点路径长度乘以权值之和<ul><li><img src="/2019/07/23/数据结构学习总结-（5-8）哈夫曼树概念及定义/2.png" title="树的带权路径长度为`1*83 + 2*11 + 2*9 + 1*27 = 150`"></li></ul></li><li>其中树的带权路径长度(WPL)若为最小，那么就称这个数为哈夫曼树</li></ul><hr><h4 id="哈夫曼树的应用"><a class="header-anchor" href="#哈夫曼树的应用">¶</a>哈夫曼树的应用</h4><ul><li><p>场景设置</p></li><li><p>假设要对一个班级里的50位同学进行评分，其中人员分数分配如下</p></li><li><table><thead><tr><th></th><th>优秀</th><th>良好</th><th>中等</th><th>及格</th><th>不及格</th></tr></thead><tbody><tr><td>分值a</td><td>a&gt;=90</td><td>80&lt;=a&lt;90</td><td>70&lt;=a&lt;80</td><td>60&lt;=a&lt;70</td><td>a&lt;60</td></tr><tr><td>人数</td><td>8</td><td>21</td><td>12</td><td>7</td><td>2</td></tr></tbody></table></li><li><p>并把他们用下面的二叉树进行统计分类</p><ul><li><img src="/2019/07/23/数据结构学习总结-（5-8）哈夫曼树概念及定义/3.png"></li><li>会发现 要想把所有人进行统计完毕一共需要判断 <code>2*1 + 2*7 + 3*12 + 4*21 + 4*8 = 168次</code>。</li></ul></li><li><p>如果把上面的树进行变换变为如下的二叉树</p><ul><li><img src="/2019/07/23/数据结构学习总结-（5-8）哈夫曼树概念及定义/4.png"></li><li>一共需要判断<code>3*2 + 7*3 + 12*2 + 21*2 + 2*8 = 109</code>次相比前面的二叉树发现判断的次数变少了，说明用第二种二叉树进行判断分类效率更高。</li></ul></li><li><p>从上面可以发现，判断次数的计算类似于树的带权距离计算。所以只要保证其树的带权距离最短那么效率就会越高。</p></li></ul><hr><h4 id="哈夫曼树的生成"><a class="header-anchor" href="#哈夫曼树的生成">¶</a>哈夫曼树的生成</h4><p>就以上面的的例子创建哈夫曼树</p><ul><li><p>第一步：对人数进行排序(也就是对权值进行排序)从大到小的顺序分别是</p><ul><li><table><thead><tr><th>良好</th><th>中等</th><th>优秀</th><th>及格</th><th>不及格</th></tr></thead><tbody><tr><td>21</td><td>12</td><td>8</td><td>7</td><td>2</td></tr></tbody></table></li></ul></li><li><p>第二步：取最小的两个作为左右结点(习惯性左节点小于右节点)并让其和称为其根结点</p><ul><li>即：<img src="/2019/07/23/数据结构学习总结-（5-8）哈夫曼树概念及定义/5.png"></li></ul></li><li><p>第三步：将其和加入原来的从大到小排列的顺序中替代最小的两个，重新排序</p><ul><li><table><thead><tr><th>良好</th><th>中等</th><th>及格/不及格</th><th>优秀</th></tr></thead><tbody><tr><td>21</td><td>12</td><td>9</td><td>8</td></tr></tbody></table></li></ul></li><li><p>第四步：取最小的两个重复第二步操作</p><ul><li><img src="/2019/07/23/数据结构学习总结-（5-8）哈夫曼树概念及定义/6.png"></li></ul></li><li><p>第五步：把左右子树的和代替原来的优秀和及格/不及格，重新排序</p><ul><li><table><thead><tr><th>良好</th><th>优秀、及格/不及格</th><th>中等</th></tr></thead><tbody><tr><td>21</td><td>17</td><td>12</td></tr></tbody></table></li></ul></li><li><p>第六步，重复第四步操作</p><ul><li><img src="/2019/07/23/数据结构学习总结-（5-8）哈夫曼树概念及定义/7.png"></li></ul></li><li><p>第七步：继续替换并重新排序</p><ul><li><table><thead><tr><th>良好</th><th>优秀、及格/不及格、中等</th></tr></thead><tbody><tr><td>21</td><td>29</td></tr></tbody></table></li></ul></li><li><p>第八步：重复第四步 完成哈夫曼树</p><ul><li><img src="/2019/07/23/数据结构学习总结-（5-8）哈夫曼树概念及定义/8.png"></li><li><img src="/2019/07/23/数据结构学习总结-（5-8）哈夫曼树概念及定义/9.png"></li></ul></li></ul><p>根据上图可知：要完全判断分类，需要判断<code>21*1 + 12*2 + 8*3 + 2*4 + 7*4 = 105</code>次比一开始109更有效率，这就哈夫曼树也称最优二叉树的创建。</p><p>–（本文完）</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;哈夫曼树概念&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#哈夫曼树概念&quot;&gt;¶&lt;/a&gt;哈夫曼树概念&lt;/h4&gt;
&lt;p&gt;给定n个权作为n个结点，构造一颗二叉树，若树的带权路径长度(WPL)最短，就称其为哈夫曼树也称其为最优二叉树。&lt;/p&gt;
&lt;h5 
      
    
    </summary>
    
      <category term="代码学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="数据结构学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="学习总结" scheme="https://shuhaohwang.github.io/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
      <category term="数据结构" scheme="https://shuhaohwang.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="数据结构-学习总结" scheme="https://shuhaohwang.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>C++进阶学习总结-（2.6）RTTI运行时类型检测</title>
    <link href="https://shuhaohwang.github.io/2019/07/22/C-%E8%BF%9B%E9%98%B6%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%882-6%EF%BC%89RTTI%E8%BF%90%E8%A1%8C%E6%97%B6%E7%B1%BB%E5%9E%8B%E6%A3%80%E6%B5%8B/"/>
    <id>https://shuhaohwang.github.io/2019/07/22/C-进阶学习总结-（2-6）RTTI运行时类型检测/</id>
    <published>2019-07-22T14:18:08.000Z</published>
    <updated>2019-07-23T07:55:22.960Z</updated>
    
    <content type="html"><![CDATA[<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="此文章是加密文章，请输入密码后查看.">    <label for="pass">此文章是加密文章，请输入密码后查看.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">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</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      讲述C++中RTTI的机制、dynamic_cast运算符、typeid运算符（加密文章）
    
    </summary>
    
      <category term="代码学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="C++学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/C-%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="C++" scheme="https://shuhaohwang.github.io/tags/C/"/>
    
      <category term="学习总结" scheme="https://shuhaohwang.github.io/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
      <category term="C++学习总结" scheme="https://shuhaohwang.github.io/tags/C-%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>C++进阶学习总结-(2.5)友元函数、友元类</title>
    <link href="https://shuhaohwang.github.io/2019/07/21/C-%E8%BF%9B%E9%98%B6%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2-5-%E5%8F%8B%E5%85%83%E5%87%BD%E6%95%B0%E3%80%81%E5%8F%8B%E5%85%83%E7%B1%BB/"/>
    <id>https://shuhaohwang.github.io/2019/07/21/C-进阶学习总结-2-5-友元函数、友元类/</id>
    <published>2019-07-21T06:12:49.000Z</published>
    <updated>2019-07-21T08:01:57.881Z</updated>
    
    <content type="html"><![CDATA[<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="此文章是加密文章，请输入密码后查看.">    <label for="pass">此文章是加密文章，请输入密码后查看.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">U2FsdGVkX19MknH4NsfHwhlN2hhpZcWnPOjVsGQhL9rKc/Ph92irCoR53yl6t1HnSTfSFzYjMvbqkPfWTmctAPtPCgjyUoSz3FTituKZYKys5Mq4PH6GE7GiKPPpSPs37W7XVH7zGoLEO+Q8/qN1Ixmp04WWypC857I6wDMlya0Fgu/T8LgtQJ2ilp5DfDCMwJwtZhpwqWUg1Y51bSP7dy1za94bLap3QIH5Js/aEdGsrnv+gbns4DQNPpWqv0wGcNbtvWa5nwk6/M3uW2yLMVO7jRLK2LXCx0xTyhXai2Ax8r7K3m3l+wMRJekEijbUvf2eut9ywG1DSKflpN9T3PNpQydiME5Q9UDsovLiHmExf8oh6NPMJ7PobVQkSkCeVs4Ip0+XaG5EL75IR6OqtEpm24prtusAhMp2SdYk6zv2rw79WF7iDWW9C3hBFGxiQ7ghRWH+GgQS5TI9JHQWpUXrxnzudHl+wXd2qZPgzfSg3NLqDiMyUa8QpS+wczeRC3mrSQJehClZpzz+CNE0SWYle/Ng42pNNnWbjr+pCJQN+T6ZcKDHylso4RDLr63vdbtfbQlx8ZclcitQUtOU/TuXr0ixlGOxFQkkLn3UlTcdEMukyqxhfRmSFiKi0BYQTM+tTmQyi+qa7Wp92ob/aeTgp8xKUinavnRNNwMk61R923+cYtGqw27E/r3hKBJ/7ABo2IDLpBYbweiAMD04tcsuR+I3LKFhujL+HHx+xsw+wT9g4ygW8e1/JFLivSBr41IqOqawQBmLl54xhFGgmlhigq2BUCcxd0ZhuGDg6F3drjPzEXtSti3g5HzK7TsDqVpB8JJ0hc+2URGkOgBlj1osqvnJVVVf3YhrQxaEndwN5NSxSGuelC8Cx3Wm5npz6SXdb4xV49Xnn0kH4cimWexg/J1HqQGrY+YRWsUUJQPfFM0GGp6rcvq9863BTfYM21NbtJAYsgm+YoEMDpR/58ANtQ7Gvss6Rj3ExGIAY7cjgVFrsRDCq7yBL5xDIs1832IJrbcrWY0Tqw010YaRJKft2oa27PWNeqnQBtBI4hrjZT/T/l/XbyOliLEfNW9DcL9LF5/ADUcHdNUGvKTPf362IJefb9kBbxCKyS2iExggDXBu/cudOzVS5qSlEpy9oQXthjrsMted77b41i4u72+wdpzlE+0/NaUN5RmipH/qktxm3BGSzMB0fXjFImwabUyKQp3ucFmBirSVGQdeE/T7Y5V2VN3CvEt1GrXdQi3HMB3DZ56z7Erz77SWy+xQTwrYSYiEzfDQtr5DXXmxsdSCRBhQx7aZTDqAsUooDMneVkRsH0A0n85GhpIWefwbJrNoc3urCKA6kc7VO6f+wITmHU6IzTtJVkJ27+cZg8gyOpmdSei3JaPP/ANy4rfYxLTcMvEVYQxDXznmOsQ2/OrXzo2vfgWywR7LzUO9sC/Efd13gFzjooshAiIBWY8g9eq+4gfq99SBaRvPS98eVMBXBqdQpr0bA0Z+AhxSAL8HQZJxw5VxBCI7aSSxK9UYJkjyKX1NK4SVQc+/apeQRmbOkNh+n8w/JGClp6pA615TrQSAQdv9JsvI5EdgS25RFVAWmfoIhIdaOFdPL/6fqJx6NI+9f1lRXA0YuoDHh8VWHyaPBseP7PZ03Wpq+8h2eZjw2j3xaNi/AD970zITcSYvwewSDzAarHPVegAYUeg1tqafHASl1yhwS7ZQPVIgfGbs0nIgReadGEoS7qo042SoZDl3DwHJfVnrwBe5c9Gr3wQXlpBJk77/tKbUgPi3lBdmWsCtSMHTO7Ic4M9QGXX1NP104u9UaQnv0qbIzLsgdUt6ImArkhTm6ped2GuOoc1qdnbml1FR5hv9XyBSd9rUYZduZqcYGd/iCPyDF7xIk98n34B426dQ6ZNZdNFXBo1BCA7pkvsHRiFfOpOFxwdUb6VmY/Xn0qLzpo7JJwNt11+fDAhxPDITVHlJyb1yDZs8r764e8Cw9cVhfaKl+MiNipW+H3bVl3BlIAe3/wS1+cZZ/EH35NZPtgUa4keo3rYgEqP+3RgMlubGLN2AZED+VKF6rTziGo22OSoKKP8IFipaIn7XDM4hBW6/jbLTHTR31OMO7g0SeooV12wBr3kpcQ1kPmVbqIfoylZ+qMJ9vQ9U+VwZ1Xqf6/NpsAB4aISq37j2kmb+ZGbvSkLf1uUx14X2BuL0YVceF9MVGbqm+qRVSqSqPBf6k1quNf4WnxqQxh881I4jmk2utXY3E+4inwUSC7S/xII/aIqE5aI3w+ODKTbvPHx+oQdWGZOJyvmPETJN5f/PpmjyJLEd3XohXWfGreJTsJ/32yfWmOwu9SjQv4Na8Oxt9wEHrvSxWLysdx+j6vSMpbpu/uioAiCJLo59ZMEldDZ4pDTOpxruzXoEfEBtfFDmzbFouyE8mYWpNRaxb5JenMqR1YmGutcVKVSxjcOpWlk3ZRwGZ3UmTExTc8GCDMyA5+Fc/osX8nQJt4Gq3A9j06Rz+1K2iK3oig76wT6GCjKxccJIB/TjOHlEPTlCClcs5loLDPcQJysWuKM4jDGqQ6TSES9ODV6fJQIhAKxvf4Rqbwjl2eeuQQyZIay77RprfOpZ9rp1GbB+wfVSyVq8FPEf6nirtUr0ZP5c/JIuQrmP0zKWoueXt/rcXzUcYu5KS1p34pFj9DhGZGQxhm0WlZHp1bOdkhESgXLsmMpVsKH6VEvLvYcXHOiokKpkkzhXMdN5PmWYB2G+39JX4hmZxDDUYsmvbYK9H0tFAa9U6oBO6UE8mlaQk74/NtKbzZh/q4/ueE0WzHf+5EOzIbe4XNQGVLQvAzdbY8bU08JSQyni1z1f4UiC4V7WwO8jwExhy02XW6rxtqnYROq/3swXQohc7wOISsyn3zHXSwFeOW5/Oz+UlW7rPjeCm/S4RcxuyfFLeAWc5bu6zZt18Nwn63iEZBIApU+rHikHyxpoHxni+9/AZk/TrfIUQoyQPbqWEHKtiY27Z22ss+sQ+hZu3eY9Y6IsVmvH0ou53cqbzxvkK6noErsbGW1eBwoAzGG0S6YYo+EPIikU8Y70Ne6FQab+0E1EM4cNkXSt9wiVwtYWmJOnh82SZoxyOW39nUfz/CeCdiQrerxpEsH7SvuSHAy+Kui7a3cuUVeKnRTpJylOQbUniwChul/Nn2Z8oyB9CgsquRuw/ayAIc14gOcHRSyKigzUSYLV3st8ljKq4XujwY3nPM3XilyBVtnfRg+k34xsQv8D1F6ft3OiRbeZwFdThW0ftuD9snQ/BmXIpaPC60WXTA4i515wf+yXh6VR4WlHfFmNN5hw0szCOcxsjeGUa94hzSCikHyWugmNRuZd3BmXaGuyclrY5LPtZ2EEcdu6qrbXE/De9llYm+bvJY8tiOoeAeslUsSOvxmKMv2xds0v8/PrbGZMeevfmPoExw+lc3QcQb/YzYnQMG77L8Ut03uLa03++Sf9AJ0rKPkvB3laa4ox2a0Utcn05QdNKsx89uPHcNN4D+3qWDf2jEwZhw6irs3TM3X7YkfzgXwkt+pqjLrT3MUfVz2wSFTW2AJ2Hfy3dkW5h5BXX7MnJXIfpLM/TMmSwK2X2oVqfn7YGLclCfWeK7LFRsFEyafcxgNTSp3GSNVy4KyKyE5LHsXiqXThuyFtGuIPacjLMF37Q1/abl2MDIikGZj2pV7NTC71B/ZXS/u6bD08wHVKWXNVmMF8Jsc916jvGOsQMCPmbn6IwzoJZ1rsndC8M+tDkxiTitDREIc8UqGBCQWOkWwIu5nnSZH/OHlAW2HYWDfAgncV5IkAyjvuDnhlPysDYDSzCr/hP1JraZ8olgrY5Zf9O4NUFzodOS+VTnMjv+5Pmdyk8qtjeVzL238rfsr/dMsMxEyiMwsVAX5mEpEWz0kIOtBl3388NmXHU7ycLUmNXd///2R+heRtNA/wtGSX3eWcXU3oTuPXMjLfg8fo/z9NvrfARLqWJTuLhtQcKBeTPtmQQLuPAj3CpEKAkmD2cntr7dsUIlciT99fE/6XvQVRytPg+SUlmbe7ofTyNx3bFQUXe604U4IIcwv3rUaZgd3AIwwLJAWcZlYFDn7r0fEzaKhjYrQtzqPT9Slg4I/LHXk5LXeSPq5GLmFalTGQyolegVVES8O3DJKnD/lafbkcQmFJet9CSudmU1p2YWuW0bsDlpXAQ19mdqZWolCIrThDGwFrjn1J9hLTQ4ORX76QnwhJIcuL/XqQSkkBmF28dkQq35IzlX/llYehCynl1qZ/FKdkHOGdPq33HOYDLA6TyB33EGEWpjg3Jf9RlU7MrQutgVkAlz0gaYXEN7jSi8yx3/dk1AxqGrB7121Kul9fIDD7WH9iVO1+jw9WR1FgagN6Zx9E8N3Ar0Jlif4XlDmFPxM5TJDPqWV34zkXK8J9Aq2SMKnlpgHCWagGm66BJVgOWITvhWtInoXQx51MAPDfKfkb698SXljd+xyuG6/47jrGhskV0G4b7MIgYKkVG2cCmFAZ509y6hOSeYboiqlYnzDk3wdwqzOknzMh+3EGbVWcQMVxU1yY55qMhkjT6pq5EmGjsNjC7NLh18K4Q2b1xLQDT0OF96ShG07fbyNzNaHlUwNqg2rpa1XH0GQeVvESdwHkFoTebI3WCgBqGwZQXDHYzzmSwbKc+m4bc9C70zJPiNcLyFGrg0jx2uJeNVhVW5xICryB45eSgc/Uipqs+1j8rgNNx/Kp8npIp6V1O/DxUSuqmpkCiqPHuwV1N1WyTXJ23n+1e6Au9csN1S9a2uXwqnNGCa2U3s8CqeRc02PCYwZgGdIQHjKW9tdvpuVsXpwnd6geqfHrbY6nSFG+6ibf0eUUX8NjOyKqoBdeW8qESwDjpBc2ivabLZgBmf6ruwT6ql7dIYd2skff0HHy67Y/VHSMU8oPlVLz25FOsxcyV3j34SFC3AyhDel2709olgRGnLHe4qCDEJqZS+1rzGpkri2wNQE4qWN5wrj7lvoJxJc6rRUCwdZ6WHJ0SarVu1t2Bw2yKChE3uYDlVFke/PawJP/riBC/8fDmziwXvoXRvsSQbjsnRZetg2NTZqYFqKat0aW/0oCiavUkA4tfngJRc8Ecn5uP21nWbaV+ojJmCiVJkFqlYpk6t2H3h5LhmganBA6KxaCHpSwsuUrCLHprVkwrx9lU+vxMuIOYl5Ci6RB1VWin9IqFfjJxcVBlplU6XSGNFwDf67mdHOOOqMoKwkcBpDq23Mnf4JLHwHouM18YXUqpcvyYUii8zzLCEdhNTDpQZyIfVHBE7gZczu4gCYty34jFKdPgHknJi0uYkpRPVVegKmwfhqrNNc54tCl/AgZOWX/CLJLWdd/yy3JfEYoTjSV555kmCzh2uck1glICvtdMy3v+SQv+I8qytbKes2P9RMDverCf1sUTXD9TvtHU/b/r+0wgiI3WdwrSjfexYjf+MvYO0gDhiL36NEn4CZ/QaPx/T0z6n35sna/ann9UyoS2NAALd61kuugHM7wLpeAAWX8o9bpB+rXpCWSfGQOJ5vch1JOmABF9CUQySRdsVVZZofvsUNpLqFU1NvP85mrBBv2+7Xa7Qkp0K9L9J4L1lYAcUEokt6PHwlCtpqwR9Uqnq4DDRFjig9YVMkagLm4VabP/ykh+UXa/XEmaWGd6ZsxNA2vsOgL8OFTENcO2dhtE1IwIZsRwwUg9nUWrll9dceSkBsnZWLfhIWqPFPMI67DCK9anmRjVCH7ezlgeA4AkekVLWhBqFPMotR+XK46/rNV8np226w3fmY6Obmugst2E23Tu6TvtYephY60eN/vI3dZ7JKODV1kObCzBNH1sE32UFEQuF1QgsLi/pcIbHlLDuzt+MtByIgHZ/f3/dCQAovwAktEgvEfgwsgz89ZRvvwMaTQwdmxQKQWOl4dzaup8xrHU3ab7ds+OqDAQpJJbJq44y/FFtT8jzw53vTO2whYJPs9SOnXIxjzXdbRPD9ojz83oxv6jccBJ23Yx6JC+SyqPa/wYCKS0p33xHaYVSd4+39HsVSAjs6Oc5W9ugBWK5Rrv2vp8/36PPFkDFVAPuFQyMf9aCGKXo1wCOdTD1j4ahN2Fsos0bXmXo7dB1cTubxlynCKR+BomzSwq1TMV2qrhvSERnJ5K3715/WjY55kuTILbNO9ZY85uoACe+/nRjgY8FcfxnQTC7FVcJm3L7lXI+rn4F7Ci3lUMBuge5pRDaFly3su5LLQ/V0izsvNzfGvRATCHKudv7wQb6zYG3jxFCk/wTBxhlWekdxykNlNiJoQVci0d6TbTFejUx93dcjMH//6puLzujT4+cyaS0Lu7SFUtRD6mUuKeLdCM/utMOnd5IYAf6URfjsQRQrzzZaIAnISO7D74dEs5BGmAgXD7qOE9950RTFn5kjMKZRsKRoAxf/hjBUz5SsUXWJtH1YvS1q1bLQTwt5fubUN0vKEC1iB+jafpAClXWM8WpixCDZ5lZQ8eKxFrazHw6SenYe010tt30uilKVirdF2SKz+8p75WGe7mcHhu6WxT+jjAGOVcx+yqt8FW2tyNReQLJljY8VmkJkMx1Ii3sevhOM/LmRQcR3PTnwq/BuqvNG2Gyk2FzypKgS5tsSiyhfuClJmjJVWDazY3OZ0iok6Z+QEBUsaQ4/kEmaR2SCcs+CLw8erOqKu6byICyR6SP69ClJV87HXsk+md0b2+J1migKcV1LSe/L86vzAepu+6TbG/m9bID1kSkppKL3tbn55gbUMwVzGDMD06Sx+Xk2uv3RL/z8RKgZ16l0nnqE4E35zw1kLbocsRtgmstCRkkWzcC74G7y87NXKxQxPD8NpEkkOX2YwsX6eUsDfxUsaQ7hJxq59lfov0jUCa8vYWpnFsrvviMb/cz9bn9lgj+f+iCRb1t1MEdEbhv42ZHUKziILWkR29Eu1e2YsPpVMcPmqg43CbqCN3lYPRwMQ2RADYpBe1XN1LCvJDCIS2pUlTZhjVIIPWD/DqltQgegz2THBntDWLGTTM7r9Xn/e2a0Um45KxS0XI9YJogZePOeYnhcRfPNpyqKGHIrXxarj/VXt0QW3SU2Wg3/4CPlw1qZwDq2MxQtJVPTTucCegaJ8FXiIFLJiMR0TJrWTLGf4iydm206l9GRfZCkRYHUoQvy8XbLfh6B67nfqabKzfCYISD4qHqFH/yQl3kF6IvWZekqGJ/AHNG0aR0HeL6l3oVIRpZn9ZEHjWftcth3NY9hDTR58cW+vl2fVQmkZ4E58uiAk3IIALSKXvMbxCsQr+WCwnJU7oL+EnV4iwxQf5KRnGJfM3eXBzF9+emghYo2+ufwTbL1vftowkKIbBPBvNUxkkwYHsim2ePmNxyUt+iJmj2uyALJLQT1vklJ7OCISYUTDQKWiI1sUFOGYU7h8h9Xez2KVSS1CIvuDPDvQSojf87eiIJ9RWQRocR8fXcHMs1MoGHWAMoNfZ1xJ7+CgGkItaYqetWOQOVtkbpUDpMnsaULoRbA1FufMxivCUbAZbIZmRKU3tcaBzeO7P5M4EQfHFVPtYkitUeP1r4PfueZxKne3FW90G688Jw5LhzkEfXIOoJqYARfOINUCRcd5Cer1kbeqaB/BhBP8jb1rD52VMI0mEKdRUQ5EIvBIKwVzRnhKj0skmHVjeQHKikHQUb4sDAL9ltr6aoFoCkWWgjRJnp3ZGu0j106wvNYyTYogljYTjri/uduB32O4cXMyvKiaB7mFLvFwQ+pJhGXdR5XlXa5+827PVb/QqCVJ2DMY7vaOJy/ZJV6dDtgLXVeTKzkv2gr1m+LhOgRd2cBpZbgImtvySkmK6wEe88w2gQMHf5NBVfV0jR2YlqVmWZiPA30r1Aj4Hb+9YWEZqUWAYAyRWt/9ha6l355p8eJSFc7fxOlW2Yqbe6tGUihvMTBhi5R5HyafJSmerZIAgAVPOYgE7UBMLU2ITMpUkZcpJC5pxiiaq2LUSY1TiBXRqaz9tE/NsYcx0z2FvqBdPCZbwMXYTkOL2axXG1DVtbzTTG0JtWBeFuFQPObxtM4aOCVCShLEWJx9c1tp/r46ecZqJZ+XIO8miGbBeBfUa9G2H4/lCyHUnUv39G86cBWDD4wAGGdBn5b27cGRARfcys4d2L5vgpRIS5mI5ZcVuyuWfBtvmHQxwV2hVYeAEcN9r1GNATW3ypTkM91OBJEp2VOcQ3JIhTfCEkW1YmT4UMSvszCNkDtzO+zUK/gx9cx2L3yESXHyHxvmPvQvvP7GvCq3M7X5mVu1NQINj1FRNdthclYD/C8++oRqudXLfAAg2YkV0szkOiMSBZNwFo+4GUDdooSLd/b6/60wjqvgEZ7G8SRXkWAOh72pJ0PGhEU8JB90rd2oJFvfDXTT5h6zm7MIWmcs5qrNAYwkSVBxo5ciPXukbxHpVCjA1HTzw9MKbwqawvvXiLYUcaxwj/PttN41HWN7xcyOrk50EOcQFN2Mzg9h9z8ZKtmkYe6jPVWvA14wzSRmAVMe9UdU3zixU3H+TZqUdfNZ3ts+IUKTnxx3GO0bO0wk8sIGrPHoveS7h8izQrdzAQgbYVuBT9FXtS/DQfSTJ5KJJRIzXVT5Hwv/GMXhbEwY2olzNN6TjEunFusQ7xxyUR7/0SLxSErfUVG+9nUbBqAp17EU1mVuXjvifkyH6eeJP8Ruhi4mUVb6xyyY7i6RaRmp17o/HH/ePYqa9CtOtxDVSzx+902xsCMwbHoGy02O1kQTR3zdYC8XtGB6F9bAg4a4LYPd3/UY/GOCdM7YZWLBX/TpI4itMQIJFrVhMVH/LNQgvbkr8mogoJfUaoG4C5EWc1VYUEdA/xeTJV+Tha/X6dukbb6P/Nv3jk6qQaP7M/De5BJXyh32gBpOA4Sjj+8L9smo4Jh4ipRcnl9oDf+572yrkNeDD5ULa0A4TvoWQT0aL01nLkCrzEpL6nB+Dc4432p57cmj1AQhk8jXbRMUOi3vneCtL1kWgeGcMxInZ0vhQV8Ns9f+mAOgXf+X3/cGhz8Dg6B5h8nyHxR2dDX4LVnCogbOH+1ZzO3tkEEZHnedPx5Vvh7WIV5CHF/Fea561mnALkoRRQq9BO8ZJs5NQP1rb3gbpKfSpJOnrtjTlDZ7TiC8SWPWpA3yv6JVL8xVHA8yBE3PD12f8Pn49yvzHzsLkaDfwYmfdf/uRM/6eH0IJPDUFwSo9vkDdn//6afsb5FBFu90EVBdqAk1PoDv7UeAgv/n9zt+caBlRYkF04+hVzwfky1D8bdmss8K+HkdXGG+422sl/GhTFJbBWpEAsRkeRNy+TdOh2VsEb7syaVaoxDy4WwyhYw5Day3h3FM5aUBroGJ+M434xFjFp+auW4DiMsTk4iYc2I7fKILjm0oxwM/AtOmLwqDj7LngQ2d8F/HVfrvQIbQXC1xzCXN0KGgZkm+XUEzMjm3KhlRaYfGSpjWOlIATK5cmQb2dDmWf4N3XpLbQBS5hLPG4YzprQdqHRjznTO+rI/7yg0hwD8c4cUGXzEJ5GKHibUY8T0aw88Zzna9lKYhXCsomw3d15yQuqH68L2bUczhKBlzPw4pLbiV4alEjUwSXIUK88jv+H3uy3Bl7Vh5v3eCAPYlH6nr0hrKW3LpHYVkKrLEDLZLGRrFOG5tZuf+KwGXcg5CLDUO7XGRAAmoWbTkt3HfSvepOAhbyF0uxH8dLUNPtvsDqWspEJGLtBciGjpWVNQ5lnvYRe8Y38/32Ts1H56O7pBZ4N6A2AdPV4IJekKTwc+6JV4Z8pmvCKnVMpwB/M+XT/lrblZuZ9wb1XxV7tCF3X6MEx70gkjoLMnfutYJTN381nRD1Z+yhKzklX4S0a5ygVhxS5IPlMZGguyQQGpHwbqL8dTn9TrtQrEhFd5gqpR+vg8reKppTkgu6/i8eldWTw3h9wfjdSn/X/0D3aTtjh4+qrIsK5MtuP3yCjTqHmJG5zLrM65RCZw0JzDlsKWza4wiVP5ChXMNJMYhovvtd60zHIRP+r/RlUFp3eWYrLsrnDjErGIf8kqj6P3r4v6Z/7PHhVVWaFAw33mdvfUhC1GwF4GaxAsT7HwWGTOL4T3kAM7Rj8ah6ok1j1FxAXapb7Vb463ubFizC0GT+soEjves0hpNGLgojaiXHz8CWK7zFrxLtDlRBImjitQdp0+QYKUqoUEZrkRrEV8B7gJMOXUy0TOEp6GX4NmK9EqynDpLgdahSuPX+tKAnDzGse5E+LTZfOA8JpK0wAxNx9y0Va1ZOX45zY8pKTdvTCFS5qDMhh0qsJv/bKb1Yk60Coe0EWRr9YtI2T7QGyjX+j/dWkB+J2PQX3hC2cYMalbqRFBu5Qwr4ZnG4sDlnHO5IlSkhy3kzeppQ/+sAar9Cyw4wlIS9lWVvMlZ8oofIccLfa6bVeWch7FTfIq9rupXcOeGW13qzTuhigd5a1x3GNzF05jekOwqHI1s1+OTxmGiJ/B1jF+dafjYBJgzYBDmBZmQxp2LtyCNs0wHgg1SKYIHp1tR2lzPaQIFdZdhTJ8SnqFU8pW6uWxMMkZsoAXo56Fcb82jHflQWLhk1vuzHBllX5VgxVqK9IgYSr/Hz+FkLhLxkwt72d5/BJakjVYpmVa4A6NCsRycDqH3J01wRm/hZQLftnEEifUtSOuLAVo97nUxjEGGmEc1YrO2/JyAulgQIm5M8TYaql3NjW6GsGljeuhPKtaZ+9EPztHgTR4qArFHFId8iS8JMgzk3B7eWUaJE6xb4tP89fATMb6JJNkw0GE6r+Ein5Lmo1wkDx6dXZDanvK7YN5omAKWG9LWJI1ilvlArYpsmJklZ30ov85lUvGs1oyya1yf5fzojWoFWDQaCeY7orAgZHHJf1Zeh37tIOQWzjy2sT1yx1w4cDgXOYExiULExVmNjeynrLyGjXNHMlIvlC5znEJsZHigqB02WrnQ8MaNp49f/aVpyFwn5TmH5cVcHc59aTlyREg8z5z8eBlka5OPR/NL0+6mdhBgwVkpX+1veRw4WRM3VmNUcgOU96S7wzNppbPqJ/1R6LUSCSODwxsfpADJN5mBobfgUn6JU2jQKWzkp0pYRZL+RXVQRKLUaU7uebXSW6l+IXe0EVF/Q3DkVEfL0/63oU/D7enb/yHCzOElbGSK7Wba8IBUMFsECJcT8uZedqtbshng3A1qn4lxKcCMd588vy/lix7pICUXRrd//Zs4d8ZCeoYTmNZAZpPGiolVgStC1jjt2+d3aY1OuLDEzN9KzlaQmJQLLqi+c+/DdaNtP8vARCH0wBE0BL5vEQ14c6BXU9XEBQb991dvKUOVkMhHd/Y20W0ejY0tk792+s0vQZSbSC4dti1nCQYZ+EpRGbXDpNLAibqYZ5y2lqpCsYC+zZmSVr9QhkyJiGgUjTZVtuYs2r4UCJUjaWSG4A5Mqa1m/WDx0q4OvurMcnvB2vGMDpytwXsXBozJVOBLg7Tz1MO4myAG8rrShcgQXSb3nppQPZW8JJv2ONvEVaqgi4hSe0ccBal0osmgYcdgL+3l3Mg9LzfaZmRwZTf3FDLSjzhzx0tucb+cNm0uuA6xw4BFbdiNCMrUv6Fr1uQ2juX1ndouj+qNAgLetsnKbCZxMXA/EG50pRn78oWubqNX3W/lrcDF2Q2kKEHFGTEnwj+J+8+G3rpCH1+ef+4ue+Of/uky1/Aso3JUuv91H+PNmdGeCF69ISDCfmDJzaGuEPX7A1/hjasb4BZ87vDp7d4qGOwkJPBPPQmbSUIKcz1AYWItIeRiB1NlzOAUSVldgGEhpQw7JbtEt6mQXnz+UdXnt32IEN61adHfm2AS0rI8y03AeDqJvjObIQuWJrVd4NJLVJGYdUqFjPwA9Am0d+/pyEcvSc+AZR4Df36lawxd8tysU0V6twjo6bbDWXsoY6gOSyMF/BEwyWi2bTEVp7NUfqdIRNTzqku+WmcCioF59cczYNH+U68xBGnHrEE8UdMQo/y8BtXgUHbn6QoebwMfFGH55+aMdY6dNxP3ZIXvbr74kN6IOQX1plviMflerI1EClqK+64t/8cXJGd0EzMpt6SUkN+EsD0W709VexMkZkjHIZzqoRwiqqu5g5KHgJbHRADJ0wD23EYz7hilu/ucSD879CcmAI8xi25zeZdXbITQDqlaMJzm18KlkFSX9nO4KsltInZvksdFv4bGw61vfJfX9o2aGjrNHCN3JeDwY5fDkobvzRfEOvfC3ZIViC9E8agl9IP0HYl6NRtdPSR62CnVpEDD+242EQiyM8eQJ1bxTHHNc8ZJ8rwUSkoy//0Cq07Cxw68Vr3lzSKY7oadqFVm/oV5x4iNqMFzVgbVLT3HLodwIAQae5cDp7u/+40w3afc3WFwTuGYobi21suW+Mvq1tqYc9V3ByTlqFC9zpp8cKG2ygHg/AU+8pYmxJptl2Tauq6PYMLGY0sNywe703BoxQmFEQ9802KUdjqfk9lYOzjdL3cmEBhQ6m3mu0latipbth9FIUT+F7i+vGGFylx3dUzpE7iD5uHSDV5tugqkS5YRu81Kkj1sdvukqrC4qlkHa99UUKWOLrpmFclfGQ663GEpBeeKe8UTGnDa5Ol7D6L5eGrKQkLYUytK0D4ZHo9ay2hs3C+ku3qfzEpZKyFvg5et9GE6VV6obxiIC5Er5ljBblajc0vUY8np7Q3GXk+UrR8wMQFAosaOHhqyxwFPpbguDRm7KWFP51cuh8PzFm1vHsSsUSk4vhfFCArwtgBYFd1PcOU5ZPjp5z6nZBNBFKVtRix3RLUgbk1xrjl0zUKc5GBWQDIHbUbT98cmS9w2JExL9KUs5dquXUEOfw4S3vFM5GGwbM3xvXDUr24HGsqzN+FHDkpLqdGpEPcjsQgqbr+JciAanh8A2C1j6aeohbGxwi/3W76AFqPr91S0PAs9sX8K/BAZzyS0UiTvDKSaX1Wo3DD6lDlzfMD7IqKs0FNoTNajELNkkfklby/Gyqdweb+Ymsk74V1Kw0X5Y9nUeIdQaekaFLLMfjV7OAAFaUUNNn6I3MOWPfabFhd2MBQc3xKG6P0MzNQI6WaUPkW1hYNNZPVrCHasa1j4ATF00VeQ9PcWFAAfxWO7HjJFhx+pII7kwZ7IbcX1+uIfZZr1Se51h/XCV9pbWt68kLAg36qsEwhMrszq+6CRnYHs0QThCF5U3fbXcNFU+ZY0MCRj3PDooQ0sAc6/bF8QhC00tgTu517lcUBqwQGeDbQk1BW5zTBppEGmt7MU4spj7KmtGEXC48VUW95aKgqOoKPJXkepxDASHGv62OOFu3Gddx/D7pFfS5dsoS1OAPUrYJ9GzVt0xyALT2KzS2aG3NXm1uFQa7kJvG0/UMKcc3Yf3EAuwUFsrCzsokg0N8vZkhUVGEg915et8LYW/pzFrUFMsChQ3cQIzKgwNjqOuj86wy9yyQfSKoYlderXUDbu7Ex4T5NC3jgxrKqX5BkRVzgVqlpKyXB5ARvmq2PiOu+1YzaTDJOelTyiRu3ZtpT5TGtSX/71IRmR9iHdMMqjndDCe72IXcfuiyvFQHHDCWQAC1rNmDw+gD38lozXppzYd95aiemDR2g/oc7zcOEGDBpKRGwsFuqHZht2EaxGkXAKcNJfDqWfVoPdD0lHxX3e0mJJFPfqK2WL5EMdagaLuBAw68NQcVdxF/9bTCSH7eDSl3ser1HXNCIjkJl3b8cwPbidWVZ2b1QsxeGtEuoiEpzziat8/MYHzbH2OkF60is1cipQlxHDT4rV/idSPEQpRsXd0UOucslRd1dfiLxQKdeGs/4ncGI4wastPbNB0yxSf8R/sJhbaNWp/CvnjD/tjwsaH8Q4jCXMYyW2pHt1GfcaPfI42ad+wGPEG+C6D5pTXjOe7PfFzkqne5EZ7XRe8fY+2+jVqHcIfIrrcFjUIUsWZZ4dvJV3nbXIOaRTsM4gQZXtKY7g/ltcG6iItI/x6vSi9jS7lwn2SRCwAS+7RKuVM14tUzS3mdx5VmQeGJ8c2CTJUBHA70GmXIA+/UxOrW9wfqL5HmCMWP1n8WuOc7FJBPA5m6cWDTdyoYOOI6TIPccyJIQhlze/pWJOBd82EqDn28hDtcenPUm5fqrn1sEDwSkG6SkDg+Hh05ADXajhrteOFgfkt93r+bApctzW1/EClcvQx85beSn1L6zHhVKrkFNusBL6rX7W7c7x82CHh5lO5G3E1JEBtBixGF7vdmkSANTNsEvFDbPlQgqeaayZAh1HYGuJxR4SkOq6IqR/8yhCSaIesJLuJwiMonGian1HMLtZNA7aXTn6GEdKVYX17FCykyeVgCeTLTKtntH9NaJO+mMxGzwYAPR/Gh1/hBxW3d4JLnKESyRaGh+yaT1nBIl+f3020URgPJQL63KP7RpOMuAdGEjFFdWoIVBK6EUGQHixUR24a69w0jVI+QqxwvnoMc/+IK5Ktoncs+fIE61gTq7PAwHZjn91ckzEBNNcVvTwnmSqNSXlKU0mzJIYr6OaRoMGw/ZYzJxugjd+uHC2StCgrNdFAHe5s3w4frQ2chavCTz4pfbsOKwy3qRsepcZPYR+dRyfQiF+C+LQrgv1+tz5ELH3VeB9UlE0fPiTc42mf0h1d5LAYyuiID69nKfAaI7h2wa0DcHOusALxT9vg3451pWGCm0KeoIAL4IjNlB2L7xYs9pgiP/qrgG5XocNyjsIq3Alco0zkcaWcN/iwQ1o5DU78d+DviV+n5plImRZbfofIvsP2G5uDvPvmu5LXi5QC2hhSm0eiujIvfOWU2otClVAta8Xxl9sdbTftpivgws4KFEhfpkZV4tSZ4qPTCRx1JlqBuV4ptTMN5j7fIOsbanEdX4vTYT8T/MzeO40dxOAKLXqXkzzYb5nWjRX5JCHw2Pt4gIdpMWP5Tdjb7bRnTbyCEQRA/5Q25MjXAthHdMLUfFtcqStsOCT0X7XwQzc6QZnKfjdnuA4nzv+pqfS3z73V1QOWwrPPmqGqaa+PPFkE3GWVVPOoQgvQCJJ3OENm2i7KfPHfTssR6mhoijN5XwBisb8qMWvm0j9Hu9oVEXJUEit6nCKtKFlKRjN7LmRsmPp8l2f5WSpUDetMX6QsFUuYnrOWOeeca3/ZG1YFYvH8ukaxm9+3Xjd5pxP9DSvpHAXt6DqfOabRujumo9zuem4GSnQqvFnqRZjE3GWKEVCVjKhicXzQCbmlglfc3Dxly3DMuOyumWIPG/qY/o48FgH0RXhgwj98a2b+GVd0F4cvfubID53rYHqbc8mfyoVxvbXtgPMs7iEg79ar0E5crJTdIFF9D+u4yfCqyxbXETbEWyS+qlzNxhdUKOEpBgptMcam+RzQIBD+vIVHVzA8e7Eydt8TtA5gFuxizDrG0uPn+4x1lRMOzVLSHLnZEomoSHqTP1enOF6K/Z+v1IL7B7VNy5cHESPVCU72eM3OW1GMB8QmoGAMOhWn2LJ4KjH9j4DXCKaFWUVP9FscU9KB6IXWYzZB/YE7+vDmmV1Kl8XNiZ5kFvJ5ZL+xlOIB/Rw/8oupZziREtgsdvoqro7i8sVh2bDMmupC9G0Pv0oFILJE4kWs6mvw4Ovq5L7CkfJTzMnfeWmrsrKJ+XSvvyFgb/hhddAlENHuDx4+Y+PSDmHptDenx8YKinUPTFBYavgKKQgcLEYTKF8dpWttIxg3kdGG1xNwSIn/kt66w6fb8JRGLwr4c2SUuOhmfYvCa73wTKtZ+1sadp1SKR8wgTW8smJ/EaMxrl49rxZteeic+pVr0syMqEHew0n94yGeISdq/DOmvfFwKrvPYrWa35pTRn98nFEeg/Ovb5wgJ78BLqL1vWyLm0+Sy9pfhdh6kGzizdVQv8hQpCDFrdZfhK8Bf06D8JSdVM0vHN1453AyKCv4yRHftO7O+M5rk+r6UyHwLTcPIci+3S9xHE1SiLpbQBMWR2rMDkoiE2aCzcW/lvDmRi7kaLvG/Fch8T8B/9EqkTZb0jh9So8ipMIz1cuT/3Nv+F6ezzTdTMpV6ZFZTY6DcLIE7gjJkK/5b9YoVvqoUdqRZKc4NVegpSiMm3fw9E0tPlSv+2zi5Kx/Qx1OuJa/Y2RwaOj9TrP1tBdIouYHP+Hu6GYTdOZ2UhiTOortzquzxdCk09s+rAsftAqK1e7B2Fyl/L0h69QbPaKRJlsS6V4WU135klRBpSzLB8x9PqV0nl4AYIUhaHfiOLny70rC42HfbEA7L/Na9rsLUhlTDQbsfu5h8ld3xHXrSd68OxnSAOtRVx4h8qow57Z593Exd0znigUK3zuyo6D4XBZX5HK5qxFjv5LpdqqdOHhxFvEmvzdIgwR7jPgtTfmcPYlR8yJh7LtXXzhZq0H+sho8udNfStAwDim+I2bpZVkVDULPo4Pv1P3GvZ29GRTg9UqoXmE5dd2d9hx0tgp2wMT3uO1O2vJ39XZhwlig14bbJEhadkjcs3T95z7+sZybD6nnFcTApG8FR2v1fcjUvBG/mjESGtyOLrtoH6U4jRgZJ3qt1AJWlk8YMq0bYEgtY01zdDhLGvIXD7+0dreMxPT3btcGu85vxHQBRii8uiTem2iqI+jroYkexYzZovwu6i6O/VGoeVELhD8yNMNlWq7V/2kRX9QqktBNTkHonm1NR0fwKhLEZ7VmBL9kLVxLU3M3us2zVCX7CSnlmF9DCejXNipkjB+ZU9LgTxzgHpUNZIcRIynJx/sD/okc2TiOIEG5N28TJiuBGxGocp6WZ3w1XRzKd5QAMwsRXZxLOZ1klCGS7vF6YPMI4T3Jjv+0bWTUqMPjGWRS7hdWac6heBMIyrlW9uK9AMvtFR68QGnfUGQZHy1xo7N7xpElNag2y3/aKWNtFGrUIg/HEzzhdodI7CnYxJNkkJyxVY5WLyXtbtZpKx/phAh5ZLxpa+liSX8dhCdJ/2G463lvpUx1anx09lwun28nN43gl/V384Qi5GZAXkzb7+z3ljegSlnOmZAnxP/M511D0wq/Vz6geZAemSdgwrMDwB5UeaD1OLU3pvxMV4KbOY6ZQLbdEUvZIJ0Z90PDv2CAD9zRjkpKUlsOnHOsgbo6BE5UuSha7xFqJ4vaGVjg7xwaqwjF80BMoMtvo0MU1qXyp3p836PBwgyo4vOwlHXLBxe4NDYrU7Kp5moLZpCwUm9ytvs8hqulMhMOHMJyAGUzwV8PLGZtPsIDw+vIQSw3ekxTdMG/SyuhbYGCVGBkvx7v6PsKYB0NHh1sj1ju/9evVXAYEvlyDXO9SBJz8EUPaetfXNIsl2UNbzWYKqKPosoAR9CEPhzhGMeUCWfA/ETplHdy6X6HDhVjxH5vg2Av76ZFmL1dfYc04szNhHagObf6mvxTwsXnTUPcpMncqcOzuhyhkqyxdLKTsJlXLB2NDJjLsbSXCkRf4tg0LcHEyTj4zM+HFAk2gNjh7Q+ckbK2uWlau2motN1FIvD/Wdo3MxA/kRcTrZVTsRMfVO0LrhdspnMtTzjGmmNsHA/JG0YbkPVDoktX2Y+W1KHLptv5d6RnLUSSENacVO8hYhv6J+FEUrLXGCaqy96/gp6DiRkYaOKBXKBseGau8v5VsOkhv0TgcVrew3uQJrxHCKlCsBLcV/ma+NzNPqUoB7rg1Ya0PayixQmP/sFWVCWCoAlX3I6sWyOI6emQHeVWVUIcWzHjexeOBOjgcSHD0rYGSkMJ1NHw+ZY1hgSEd1pOo8/xno7aYinEZqDqKZqbITlN41jSsvO0f96kMz12H4hHeBx1YfC5Zt1lU1NMYiNDEocxbN8OkaoiE318LMS6CjZaLV4ZJ+HcL4Bqyu86c2sfz6grSp0jWx+GlfQXvWcBl2mUhp2aG7mOqnoZRvwPg2jRvZbYNaoeBb52eXehOoD5wVWva+fiNIoDL68JlTw/5OiQsteyo6zxTyI4ESk4oVTM5XMrwlMf/P4+qfv2WKOmumW9Nyld9PdlVBRevhkmdGpzYghoKH8/s9XVUmuwGAyXUULTvJ0zy3ICI1yfftFt2J59uuARwPpFbp+SLYgrWpSwOd1tCkAZFojZL3SyddhJFoUp/3VSV1zO6KKLT4G+a2+HQfzgy4QkqUhdlAZquNU8UHwTYnfR+2C8MMJSplstcOlYDOykrSIyU4pobBjwrUnqcsDFaw1iTQSCra6ncuVQkfKkFQPFo286GXEYhX4LNxhzQpJ6Js8DOZckV6ZJuCiLt1DkKVxkiuTWreq8HuvlMEKDVBvPB1qywU/tKoOuleDyQ4pKtRp94F1kdlKIuJoYzAYxom1P7/fIrn0jr5RdDHx9W4xqC2BUIk2naZwOI/VWXzJIEI6XTYWkgXlD6RA3A8K0AVAk0yFr9D+aBnk+3gu+TPBfWNKqv8f0hvXuzuQWjrMItSk77jwbkpymEk1DePl287uRayu9UXo78wW8NaabJIO/O7l6X+MvbVvW1gjX7PM00pF2dsCRWYvLSv2kki3r/xSLVuwhWcDYAbMd7Q4CREDWqb54BDjpHBmd88P2B76eGRaiW5niy1UR/16+nyEipZ6iSj4fH2vjemLNqQ0Kco4yy1zF5J/XV7YCySm2I10R264zt0LIfG2SV08nJW3AgZuVOrEJgzdAgt1LpQy8yCr4qxttIzJWLkNsAVCqpmS28iqeKBnT5SC1sKHMWMf69UrXS3lCUnNzK903svqps5rAXqdoIJUjAUuvvXRk7cxFRQzOPyuuzmhotX1jV41CtMzBYz4bbHYh28XSK6EFEUnQ8qdk4+veSHOnIEn/F3b8h7Yjw30frEn6hZZ/B6o2BN2h/jah4ZO52vlZMgf9/zx0iveFNbORhAM0IOjjqNoNmH/8GeNRQXRtUHImT+urmFY1AgRyycGHAjXcxvp3K2HbKAlnLsltA132SEbGLO66EMm3cbqNqgwyeh0cu6Zyfbutd8Tw/1dH5Kzthpkv1ALrC3P6Kvtrw6YqPFu3Di0XxKIDy3x/c555Ys2yYDMwbMttKaJ4nhA2dpVul229UmnIqdceqOsMxI3twJyW9TTmys6ixY33i12qecNFlo2R6jC55Yo/MYoo36vIjHMIDs0EnGK4b4WWzZ5WiSoLOnGRD5qMTejnI1mEEqVauLTq8jeK44Flbj8C9VdFnH4KB6r1iLSuvOhEjBsVI5Zz56zqt6PAg3qyEllxdQaxgrQfoGKHwFb7w5+tegRz6D17xaRUESJg1KZjoZDAM5pENxBdK0dldlqgStshDd9df+t3P2d0FKLIEdZxaNYJwroKAOjpvXT0oABmqgOErpfL7FXNAOQNbD10AIHWIRoPAJQrD4uOU8HsXAkCkTJp0Sl3Z/4oC1tf6ghNOqmBc9ek4IglTfBR2kr/fdKW+wlYnPjL5pzvz9za1i+YJ1PhEgz4M4Qr3pneg+FVuOoqtcuPBHnb/O8/N/iNGGqRVBEtanNSZGlWeHVMOUHI6TXjw+9/VOZbrzkOpkEFlBx9dDyGgkOKaqDtFTuDv61Sj6wvz00eUY8t3D4G/o1FRnksbmILLczgdHrwhk3RrzsA+nbB5dgu7Gb1Fp/qb90VdS5hj6JSD1Y1C2mS1+0jMxzvzD9t0QQSSlalDx4akXdFoRtoaBUjsIKU8TwevLJhLpw7jcuVoKjaTHNUwUpzuI71gaOklF1kfnncmOURGwGqDbkcGrtDGiFDQR+BgvUkWcIRJ8LjaEtlRCl1edVXfL/h8FPTBgHHLG+NRFmSyCf7oXy687LmDcADJVZDuVerHQAVVUBtMPIOZAYVp2gdPUz+vY4v0S/oUeVXHurtny2vlE8RZ2tbhwZhrX9Gb5CSQ3JAHVfKLp4+VCm71oL2hztqxmc6+qnD60iaIH2ngfgIstUWkXNZMc20fOcIpJ9hj3zU07lcnZgGo0+Pjqsehtx2dZuXjYUkNva86xtaCaaAHDIkgFsnw9i62ZzBCyM85doOYhXl59bFMhoTZE++qjrodVMKIWgqKTf2jABz4OBuWuosBT4oml7NEXr82Gqz/CKmlg4Guy5DK7csUZPm8q1t7/0aUlutcWqp7NIrxx1VWIjIOfunQYik2tCP2k/5tnGRFoCclM1aK6Mt1jBOthoQzEGWM9ju8mr0LbzfJsRYfY0M7fiscenHzI5DCboJy0Ww0742okEDKNOwa4vH0dASQRT0ozrPZ/lTCeKtXO/K8uL8BSWNM6cyXK2X52ppx3ehDW1kfr7/57lYgK9N6NNg3vqWshelgJPcKGWngIF5+H2ATjXLVVmP+jA1rAAtcCCV/LdBzzgEvkAuADnGYwXhoTbEVKygpiKb8XIQ7fmPJnYwrW3q4fqUxg3qb5DLis9BmXCOJ08NTX0cnMZq9XZHixwEu3oe3KAEZbFyrVJSGtpxVbB7EVXcglKZWYDu598a3mnFlPZTvoZQXlkHmTSwJAIGSCvufx8kff5IHed3a7QTt8SmHpYO/e7xbZu799eV7B8ZdFjS1+wbvPH7Y+Fs8BN6g3mf1+7H9om6kGewL94lHhhX0F2UlE2Q6Ymb14TUlWCeASwon5vEkEO/7LPG1V04Y7/fvXFGHNtBrv+dxp8PjN2G58IfmUixzKCq75OVBcIsWpZ/3vMsuOV+nSqj76nGEvc9Okg3reJkit55j5MdaVI3rdS4n7ekOprWmHBmXYMLYKJwbk2N7n4EeCyw04mGM57qpJgOblp9d5SbPRonGfA6kaHRxGNqjLs/IqBh9tgDRXe9mDO3MZyB/KyIZ25sAk94w2gcAD1TaC9h+N2wdBrbR6Kf0AuWmLx+k7HnFPp527a4mgZGaa64t/8iPTr5EJ0AEMc8AL13mbPREk6wAK3EdXM19t1UZ92JvObXG3V/FGrcvPgZIPAUbNOHH+jlquEwT+A9ELwO+y2o0z3WD3N20Kx3OF23z7AtFT6rN7sIsnj3RpNYx4KETPIngKIp7QOZWbKr57Im2n6ER4NyfEW8TDspdjX6XH5l53N/bkfXqeLVq785PEzcKlu8zLl30OUbwb4qgF1uh9rWeu+LbdzNuN5U1qBryXNmBTI2nBXiD9cWaP1ngbUeNSYJEr954/+v1XC972Nkg7N7f3dCN/+md5iL9EZGAlYkwbYwOA72ZYXyT9m9iteKCwTsVJGP2EwhTkm+MH95b/GRs0pJDO7eLjq7AvRm4pfnqGXkrVKO8SmoycCp7d42dLLHmIXGd7xhCFX6eAFZgj1OcFbXk+ef5to14WK5XD1AkO572I3S+ItkzJ5QRHelLtJByThEgJ9/iKZTt7ETjIBcNF6H/IRc0SGz5h0uyVct5+l9Z33r8cveJq+RIhlyXcUKZ7iAhGUTpDmhg8ggfk6c09Y1nwlyRfR4qv51MbkL4+UWn+M0xFRiwlteWkKuoDFSHmH2X/SI8I1YUjpL6JEytXQx7Cb6RK6w7MSUKic4WXZ71Q8rMA1O8329YlCQSJs49Kag5BLN/iZI5Hsqkv/xq/WchuuNEau1vZjqVe5sewDtD9QnBV05Q+ozX4dnoQObrA2AkcaorPh0vI9c2WZdrVtXXXXNwzSWRSsvLaX3fLn8Qsgp3UWld3QGrIqCLDRoa2Uf58jeVwuWr7VJRevCM3Qb2e/LEg1nSwXEz/l4ekATC10e/x+9jobePEO+WE5u30GTxssipdqQHLUvQu+qjWxsXcI1g8hVaC+MQiEh4UooU58e+nibdtXweGrS2sOSTckfFRnMf+5P1xlpXDxzLPgkOuo/7UaH7j0N1nuzOvBhV6ZR9sATol1aNcJhW9X7A5H7s3zkNi5sw7JKo/nEFtcZsKUUDrXjLB3IrdQoz+xWJtshLmucXe1WYEQcBnZl08GF+PtwbX3x28SAKKu6qte+E5tgiHRc41ixEZQfBQizlAs7IRisuT2d4gRnvzJQOfYYF5ZG6ItPMw0YJ62BLCdHuoZloX4iW3UVNom6SViiYW9f/OIOwPfE0lV6dU4Gd8ubeT/04WIcGkZ5pKQYSy+lHK9vISvxJbCb3Bdyj0KrU4rJabVdK8lQvkr/0tTjBUiSBFTXvywLaU4HYOQXC/V+2AWcFyH7lyqYTCNd+0lOAM6mXNsRlr2PK9ww/MZj6WOGDb86miojVMC8tWbBi4SWE2ahQsYQK7Eb5rvbk6rCpaWn5b8h9oqKhlRqpzBkXBQBDlzV22ISX1WuDPUmWy17k0DSN+WpXsPem6OV6vtoW4JflM3xhLfy1tOTXluubSGLsbviotmS+aAtitbEoXS9R2+8jQSoHBSy58Fvo5r92KUP7b+MP8sEhruDeeiJVtpsMAk6XGbEsPB6JRsJBg3t+Kkok7s88IJq3r1LxNFROMMtOQBvC0icEs/ItcrcHkaoW95Mp2ZZeCEQSFRWdkHXiPtSXc46wFRmZjN0uxVc9JtRGRQogKPrMBNdrg7ZTx4/qcQ+I0rPbowLJ8SmLOeXJHpJXvSdNexUCBEVNhJZf/DB+MbMLmzITaf94nvIrsg4KQPxH7Kl1gzbDJuYJUEFi/ePfTxqdwoyE4BlshvqpAq2+ir1qAAM2Dk4OHqUfJ1fi0eNViugLfnYcdggk6mNdcSk8vssreuu9+c5RxJgms/4NZ0B6IQHVoUH4qJMLZbdm4ycR7y0Y6A0BmXdvP4zUKAUjHXxTPkdcuGBt4eLuT/zxEuZD922okDop+2+UsEuGuEWTdHEddOdJHzuq+FTcf5p9n5ANUop5ZMz7iNfco84qylk3kYADd8zmocdadLYBSaE9xK3VlgzILJrcjwXKym7HXU5pzOSIlnAgJ32XAyBYM+jBcUMZiMVrYqyq9QEpiXhSqfdSLaWCEEjqPqB8WcUll3t9U06q6en7++KiTcMTPT+7Q2HUs5JlM4idVbPOQzjRbi1aj9z5cjnHI5c/zCbILkCXJmRViHAWrS718dEzgzagWongcCOrDYDVPrmWk17kfqTxGq1RJNHieT8bKXfGiGoWSM3HoFy/XN48sU49HhpXkMJRw/oGIo5x0Hs/HBU1M0iboE4S0tZAEJhO5KvnayKq7IL+wjtB6FJTpW3UAiEx7JBgB/XNfjo28p2kpCXk8pzSStLrYh923ZYCFwz+FmY0Vfirn5G5UN/z5WF1vf+nVk6D99KOsQskRWDR7KyHh2xes7j8uuuFoRqTZzC/+yKhpws1fUNxMbxxnnZ32sGxPk9djnvDqnjLKcRKrAr+/JLzW+bafIZlU4w6Gf2/MsynnO1W9eCfqX5qSYQ1jEkrIWgiUlEaKIsb6dIO+l94fG8MloCJ3IV/F9k7RGiFYuGhDsM+4aC3+zQ2/xkiVUY9GDnUv+iblnM/AFOvzCMHDmONfWtidZWLmXqFwQ+d7A1faousuKj6pWg5eoEqeuukp5LLXG1IHlazqpF5ox3V/Bjvxm1rxJ1iD6YrpxijQaQ+HhQu2PgYopdNLF/Wc4mHy9SThXE4vv4Xp19FcjQfXX4VxltFAE8vGPofghEkhJRKaWtvYIsrNImZlezFsYkBc/hLWd9YvoxQFk6mMetu5xbhOs/ji0oexGupWOp3u8A+zf4eDNRz6totRQNSf0NdElQvb856YfFYQeQlwfEol402G1tjc4hh4h05Wqqgeq/3k9AXl3srdjMvfAKDp6n7bsv7DlzPyBzUybXD5JVAmVwX2t9+Lsn7VVKKBReKPXpcAMmVt7vRLM1FF0mfXGRwBRdFlbM2fpg6ErfM+rP5RIryaPL+gCf/I74AYesHUBYg+E7ejTOqLR5V/Elw203I5ioHf4AHoQ6a/yod/SQtamJcEAQhSqL099zrRPVgIywiU3X4BBcZyFmHGDi2sS3qjh5rKF7oPvOyQjC1xGzsjkuzfpYxT0C/txsn4uRItFiaxqLIKZ7oq13IelwIbEXWsJ0vEyTGfYN+gQBlyTlANFkuVbYYUGoKLcpXsGnrxSSaQtKM4UQxUZ52QH69Dh5LeEx8bpdHvSteu8F+kAlU7y6UGB4nEHpbvPG1f5NCsjo/vl2wfZIqMUE1sCS2oZApB5+KcERob6W+RJwc2W6FkVOqqv7PF49YmMF619vPi5tMRUATmahSdFKnCDYqmX9BL639KeSEpTCyPZl0CkTrVEA3kZHgnOxBvEaCDEPr125DO+4TlvT9Fv/sTITpGE4zx1Ezk4UgtBjO3BvSOuQXTDAGjqlUP5FPg/M34Q//FtrooeOzyc4AA4m675EaqO6aF4invSN3NFle1CwzAkl4qXfII446/qygh1THY703Tcrk3ly4Q03FefwOKyl3DubwF0KGdMO5wflYoD6PnsUqoB5RTr5q6QEO6eIDKZYXuZbBbDcrqU+LfOgIlRFI2WDQnXfSpPapgFnX91J68a5lsE8vwG6Dcol5Bau+0FxmRr/7zlowquX10R+lq49d5K4LAhjgL/SbUs/YOG99/uxCTmwHOC5VUqN+w3phizfMVYCC/e9dpWKucQgw07e/FKW0eN+Tl18MWCv/qo2VdKXV8nXQZ0ldDeWmXxc2pTb5cFTXbm0rlNiMPvcfmIfHHfm4W4sGoAu5wRMENY4uSB3MzMAKGUFIb/Jcw4umXqjRCHHh51uLS5ak55bAFOdR5nMKKz7ZhQEUIpsnXXSxnvQeGa1iSSzFqS1BPZ17+3xaDi1EedqEjRfBQqheD0tBUTZsqaxmEKTj0klc97YnLXFJlccAIs7KAjxnrP0td03l7d0Sh4LwzwKxqE1AJB7Agb40C3/ICyClEdBnZyJ2YY1e37gcP/NmbWdKkYCSYRfmeE+uu1TS8VNAglY2JD+jOQ24vmFuweFOrT2UB3sYWzk/UUsjmLvityuoUY4jVsBbZAJj0Ijwiozmui0UM18L7OwhJJduPiV+RBUN+m2G/T4lQUdE4UAcbW+c6DZLvteNyKUC7IpJ1C6owHWBcAtDHB4kqxqppuBUUlb3Y0OSQ93KFepJkza4M3PThKMlkNrBYh4p2NuLb8tImSvjGAHGn03h4y93axmmp3Jl4AcAragnj0A1dAEAhvJUgsO7F+V5Ijdt4/mQVv26dmbsEqW+j5EMCV3qpFHvJQEZS0Baj4Co+1lBtZ6gOOGkyDp2K9vpXgDX/wBdetiDZCIhsDD/PhIbckdzimISkVrkOzquNWle6iDIKHXAzcs6lw7x3WHPNqGhdSrO5tpttry4615ZwiOeFOGEPBrDdAAD4JKxiCjgJ1IZKpMBBenvJ3GGgMRPYrc8eRTSGLBtBueXXXKQaP5Y/ajyEUC3t0hnzsYmi/VPWrl0wJi2oAykiDTIl8gw3Dtgo9KwrPSUlQmuhcmgeW39yk6mLRX6QDiS6lShn3GWbhql4ogtxPV/8Lm8BV8j0Zztckt/IEAbVVmiwtc72fmt/q0PndnMKbZvrNU1MvxFddAcXnTFo+ys3kwMIfRfeJO0LRtzUVfsAS8oNCx67ZKNbbedu3qfnJpfDkH0QjnZ59plN8VqvxWXGxPnOYn8cwVrlFqnbEem4H+5uRxUXbYFxXxERdDHp5RDmrGrW9OAKmTIvV5VATC5T9AAADkq0BIEsak0CJhewvGlEZxtSQQYEzHfbQ2GPMj1fbmRFkVaLyQVV0j4kHTryIJMd2MBBUq5MPVnZxL1jN1/VmN5Yd/syp8M+6M+QkHXCXqfxNyLI58wocL1iOWAs7rkB/llODwlRQ77ITDDUwtE5s5dUooiEp59IV1FBISMNISg17dk5OT2ef8bJBybr93u6gojcWaW+do3SWu/ZbenKvXVIlD073QKPEaIZzTBuWaCjZGMpB2+H5JknO6Mazsd+ooxhMdhP3PIACoG/f47Q/oddafyJwCDyejtliLRahpqqazSl+MD7y58Eh693wFcCLMbk4lbCiOhMLjPWOXZIGXkNHjiOAXhNprNZk2LbCDtdsnV6sKP5rxmsKh/lcKKfYmAkgaaHKmiAtl68mfBW8/j3blG2aknHAN/2cHnQlguCztC4m2KnGzahQfziujW1xegJz9TH/xPluE7snas2OmppjcOVxlBsenadenoMSuhSWcNzLk8JbxceQhiIy/I45YbOOKiMuLepus7LTG/BE9/SN8kuJMjIS/wo0HDD2KSCV5N5+gcv48X6qcLNY/w5kYI3v1RCH06TR/tX+ajQcGG7oXR4MlekIgNCtgh3wA6+Mhcpl7e21QLY6a7Zd8WoD3XTUMLW5w9U9+toX3ChzeG6zpD1HOXr6Kjr6zbxn/rGsNsW76xomRoA6EoziwZTurQKqFyRZbumONUHUEfwwi7EFtUKnP+DOue/Yze3uHgOkpCxwcX3q8oj4h8dBqyyLaRcoRJmnTU5VOkMbpAOijU1Cx9zQtT1IgSHWn/ngEpJ7Ht64yHXguUSTQwKjZnuOm3HdShK22HbETeG3HFbGitIprmPf4xnU8Q33BWdbIs4E3ccQeRHnpi+dKB4vpVQm5i1rWoo+jKdAOq4XsGp/PiN72bdcC/eqCUoJIMF1EImdyPSqKnf4GJKkv9eUx59mvktQJBCz1mEXzqq+qVswqYteK0CcNHf70NQ9wsWaEigbpiKObwvY8NyfLbQ1TMGYdpt8zg40LJJbUkMsHiHiLQD2a3ylbO5Uh2668VATmBwUFaAg1/y/rF4T1F0GVoYohgGklEC9X0v07cMe4Vpr/dtGFdFYW5U1dJHdARgiFPOQLmVS1CBnA5HoCG07ckj1XCh7VA99CZVOW6VLSkJSD0xlqRxKHWtXn98Ge+ccHkQeMWudRKyNa0shWxOoOdzZMmSqbOqbD9r6M22Jd4nw7jNqgjg0fnVOnUeNiGh2exPe/PcJ5wLTf8SX6yoFSBQsDiW8CCS1WsV0kWcx7mBLpWFGvEdyYUmckM5uuMDVrx9pbAOxSewcVhst/ooQ4kvsF0KDLNIiXnUip0KRH1YqLYSWspRYZ3HP/Gs4va8thpBkHjl8KL5HPVcVjU9NE7ShPK5j4/RZ3Rot0pMo418TTVoM6FHF5BOjesZoAmxi9Z+60INkGHxlUUfPEaSF1+gDTaSo8JgrWNuNyhDW1Xjl8q6ULru1+u+lBMKhqdmZNQYADijmHp94PNQaxCA1HXFY8u8lAQtfkVtol59n29o5pAlCSNaRSQ3TLjru1Zq1L+LGOuKZrROO55FBF6ioeczk4ni1MU9dgaZ/3uGHS2Dtv7QBDwgzlugc0+qVnhmR5fEumhMu3aatdzIYu1+QLDKVYammRKeY3kr1UPRXJStLYKVR/R0znTbdWj3fJ37xa4+7TDNCXL2p+gTcb1bXYRig7Oyx4Eg5V7VVVQut2nYIs45zNkQy1bV8wnLK8czzNqhDd1DWNyu1JyChUst0Myk+bR17ErA5zOS/iiVcZ6rdC37CO1rMJI/mKHVyRhNdwJx9e23KvVvIq/d74IwFfjw7rTG8vPeF3MlX1Tql2BcLrv8OQkVBpw28b2Dv0zEIDxJboyh5iYM0yjPqxZxofoLJF2e/HVw+dyuuUoHK/GUsAsrN3p0c5DsUuO6OLjZtOnXzTtqXb0eB7480ohk/DHcVU6EjCL1j0zd1mepNVIBmlsq42DFTsp4Sl8Cr7ByAZFfOPOgn37Y3RktoU2Drwyv4Zxo3qXDWHzl5pd/9XfXNDfNuT/5xnjWhJKHZZj+zD/oP/3dhZPsIIQM2qal46p6w900Pjeg7zSiDSR1PExGFsbbJ6dXsEu6oaOPVjCxCgs/7qC4RQIdV8UacqKZJAAY+pzG+Ltqkg0UYFU/4wPF7wpposLanMdhOwS2fELuan9tLz+LIP3Z7zYVJc3J8qF2029aO06sdag37MoP5E/MGFKHAIC9rDZ8wCb9w4O8kUTawmOk2r91FRgfyUr1uoIBwGCGVDRztJSSPiiBeENwrtvnlirxGClEidpNvk8yR0t8az8+aSJwLm0MbIdG2alECgLzRhl1jycT3wrQALT29kvRVRgxxFHjm22FivEzCZlOsehV8IyJgDJuGrOt23bvcNgNH8OYR1Ob+RPw1jE00G4BwRcPWBzr9q+ytfb6IxJ+AemBqvdemCR9DyFujQn4Nv0nhOXgba4Gpr9gA7cA+H2lRniYhhVvzV2UefFWZhqAdm1HlKREKS/AexXfCX6MNhoIaXjvvb9iTeZlyuBGfSvkeqskBhJ4JGQWIkKzDwSCoJ1duVWFh7bpuFI+/ijMPuA09DTnPHrWm+jkjHCuLuaz+SlGRkL1Kie1YzAPJnWbb4SKIG4FqbNhZX6gwPvAdM086lvvlrMpVcWI5naTlqlQlbCw7trmaa7odBapxcW/H2tyqFwm5rcqdvo0vh7MOis1nugL/Yf3UdVx2qsuEV5xLgpklRS3Z7K94Lh1ghuDubeZWSRBLwsXJq0/nHRliwTzSKdmEkh80Vp/8uHFnoi5fv6tpNRUumkEgi2h7VHPs/5P9NMosDS6W+/a3VXj11Vr9Lxzt1O3gNsiSTdI6NB2EPYBLb0/zWIgWd+w48lfZp7yEiEzk1Ah+zYkS+yw4dSOCjr55nI7JijD/PQMuGRa9E5yvDdFNeoI8J1WNE1KRNIwr2aUxSWamw7loUg01ti5qq/Fej8Xc3TcMzzqSb2Un+xti4xloJZM2iGrkQBbObpI2Di1a9P5k90MAWPo602IUsvhbbLUUdOkGI/mu5Lc+rkaZCKq+UbNzu9F2PMDQzRwTg3+xApl48DSHARCFLzoOMUa1F8yOr6IoeNCyY3Ts+5YgG+nupzVLBqGZUWFDM1UGzl4MALN4kKELFvoIXNUtTovLX7xltxl269DUAk76eZcgKytKW3BGGbuhstn6B9e76+XYlryuTvzaYyqoMHpIFpw+tdG0K1j5UoPJS0wO+kRNjRDLurR4hxxKNVHUMgr6X2sR5ftrHssYj1H5o6P4vFkGza/YEiXuL53vOKv0HnzkLkguiZoxuFhV8fhuyoLzqS8Bvw67jr0LKkYLteIxBpr5JJ9b7IsvCbdG7NAsfJbqfdJ7LN/cIPmhA7QOb7YAjJfHAjc6Pxmh2yLBIHDtgSstYPPdSnZARUZo94ruLT9b4RzHyxLHI+8X8WNZrv9hgoW2DwKfQCKrsA+Hypzi5Sn3C1wvQEAAOfxFk0hp6DuCKM/LBCdWq3fyDc/far5yOzcnuJr+0Sy+qFlixbhIiV2Y7XVXa3xjYXUSGt1CqHuofkgyk+ZTydgkTOhPGaSbkzYAd908EfUnyEgkZmPJdk1IRnkaniFFZ1AL0EVfOiH0pO/pTlJNt4fR1GZgY7fcA6A9nM57lH2t4pZP3rWt10Ey8y9tp5jsO+gpX7EUGGLMcilrqUYjK51D4hGZWJKyWr4TiaFa9dZhdeRf14Z2zHzVSLWuRWxk4yby7Q6g91FuC9z6xgOITeFwKI65ak8oBohqdxRP56BRxp0IsRIIQ4NrFhjrE7BzAxxcbZ8yjMG/wmWoEz3SEv/PCfxUu5/XRHxR0kUNb93YD6tqPTz+Du8//8yUfR9b0EVpFCZxW94M0HE2kh2hGua5PwxtbsAqvm5eA2dSlkPnG5lY/+Un5DSotNJEtjdjpznkKN7BTtUOKgl7l6d/NGoNIB0epyi7m9GxydY9KlFSTy6i4S6zfRPLhkjzdRV4o3EPfGBY6IE5iKXMEPijpMU3KLyv3xQITfGI1+imS8u0HjVgz9nEhQeFrmV+l/0k9FbndgpisuosWb22vNowuPSeVuIFSsXyOKeY/PNskkkD2zk5xJQ2jGqMv2VoyqaMICOFtReWAU5PwonlQiy39ne/HsHTsupXdDsNdVimvX9vDsjn9ngljOn951KmsEff2aMp/x/GPmZnf6Db+9YXJvMtKC+8o9D6Fi1Bh1QuTqk4zHCgGDGL/6F8aIkIceUl2S0G1LPC/kXa09sQiQskGcP4AFO0/8danyX0LjgNPbTerzmjZaTIthT0TkCTPkf8Y0Hj5u+nn3n4gmlv4wisuGiqMs18DPg5QF5aCURC6SzY0NJQgY3kzXlXpmKu5ENNVVNqDLi1iBX5Cw5jc3MPsSDLYRtHFIYhCNo8Uyw5/T8GPaC6C8cq6FvqZvKmVQP5rrJvefVWdZmiTIZpL6byD/7lSI14PNcJ/GiPRtK2RalDyP0Xz2J/B3KIJKBA8K4h+pbtqCJSWMT/TguUdUPFGSPqz+I88ckGairtDCDL3kAV8fKL2jLK9MqGCK+bhomDTtIGZCoalP4ffTiZoL/TKJopKj+cXanuJZM4Dv81BZZJxo3IoygOHDyTcfWo56awTAbaybJw7xCm07OouygnqqZb11A3oyZMz6oVRv9KfUMN76j5Lx1IG0FJfKslP1QTB0HV4sQibFdRZk0qPlrVqoJM+DqqcIN4q/lWPzBZ5W4+C6cIYS1o9X2uZnUW/mDUEr3sHLBF8LurbhFts/4Sh0EFxJAlCKsMycWCHhv22e6g7r2R53ayeEh6eUi5weRHe8jXyLy3YjPjK0lpxoKxmmux1eHPnKFgKLmjFigHbilIqzKO9eE/uIR/00+5t50vIzHQcoyhOovyGB8SJE4F1YTxB0g6ljRZGVh8kc9DKj1WdHRTKJdUsZa6vXGDqPA7Pnw7PyrsE9CMpEfDaMm3DWByT2qqsw2VOvs+aHPwI/d/ayGEI9k3+Rl8MIz7dbGuKMMFmb1oSBRN75GkYav7gCvWLlYkQGwpqzUASIEZ/jV2x8GSL77h48HbFnmqZg6q9kyUksOZtgebAxIEq7bedW4U3Ubabl5FBq1JilnLuWpF3iCEtJxoCfLeuD1qi4YoYQInuFvzW8gi9e3gzq/gKNbV1BPoENwkrjAPaqi3KX+RYhs/tH44/wmhhG3e4/ExKrsvaZVzWJUJrvP98ERA/qnbRnd1dt3x7AEg73Ns0TJ4BY8VWqvx68v3reHsgfmb1lMC+mXBc8L+fCv/I3s/2psi36AnyqatJj3kQiahHL7oqjFp6pXEWf1MbEbScCIl4yaF56AWPxODF0KkqKlL0rDamIHqloNh5L/XkHDHZJ1S5iZxJH6cBuxclG6Xa5v26OS2R2b34IDLuudlpt9iFnzfE5bZwhm4whDvOjvI4j9/YsLhciW1966J0y/0nxR+h0PuxNJ3cxChqeagr9+r5fD0r4RfkKd0BrgPl0gEaWGFJdriVxKm6iAp93K9OI5FEZMdoQuK+dmtQrZB6j+MbqlL7f9uECwSapATOhp8taiSHWjC4DNxQjq2M+8CtwNAH2fWJFQRQ/p7/Na7zVczgtklyEm366ANmvcgLxwr7r1DPoBLRHotcyXVgx0ueRCwQOLF5ROTl2RWMyxhkl0zTzZeFqAdb5H+ylHhRYGdqKdanv5cJDXmXc1p2QG/OgXCRR4UfFQswCI749wyLfAg+5aUB+TT+mURqDpy0Ya2l1Hr4Hw+lB1nGy+BcEhHz/WMiYt25HsKIOP1Z/50mD0zP+/lTGac22jM/F9dx+FxnNk1QeLLwTvZZkwgC+rCBQFsaDzyhkpbYJxfji2NKwzPtllL8CrmDy4+j2Sfijv8RhkVugphP2EdBHpUFxpUdhYUUM04YYQwpjFpG6DnopeKf713/MGAu1ks+RTmAMkHfaInYubIGl7dbJBCZo9ruhy4RULEDuI+38C4OrjGOOnlckP4pq/RrYf0UKp2kdavu+7THMLw1bC03jllZTTbTqPwWkHPXLOrz9AvZMRkOUAxRN3/RDH6vIhD10ThimThH8JDfX0GqehiguC5Ns4FCll3HseoHAVlQ7y6iOyKCYbh2Idj+7gORhaAf5vhioXqMtzMS048RQ98LVS4sVgpwGCiExeEWv+5N1iO4DEKgZHdxe/Td7dleSuB23pW59HwTKjPtR+/wGJxxGUNR0gpsAlW/J+IFRoAMbTmJTKgqhAu+GzOLAyIrQFMG1kVm6KCtBWgzYsPuQXQo0XN0Eh+uo47azSJuvR5qXPJdFzOBVEalurgBLpyKRUJ9T3OXeoMU0CUtaOu0jeHr99j41e0QK+KXrl4gb4dQJBsR1hrUl++XSsbgM1dLuBbppxogk36xVJ9TvTBwdwNhxvnX1CCa62d+poW7ncl7pGe8E9UNXI341oI1np53lbE3zFdhpVIrqGfBNRKOUSDdsGac63S48RdY79RogeoTG5UZCFTNGenJFY+oKg2wVI8bvGBBtTpCvA+Wm9dHMbYjfjNzftk7qMGDnrb2uwB1r1rJaohco+buzP5PvhcOKNyCW7zR/IxTqiCQ6hJ9bzEBC5bbAqmzucQCC7d39m7ZMF3v1O4YxkLt8aCDPDENwPaXmWVAzWo+KCMqeWfIVzO4PPIjqabIx9Zho7Rbp9B/PBNsjj13hVWhw9dE9oBuPdmzkVLiBfqAW+mnprlFeLJ1REB6rwRG+NXoRp0VhyIPBsOV0i6CZhi24M8sJwaAFbwye6hqSVjwLLWqC9XVteUvp++lBwUMHum+oI/IOp/q3wYVErTKpAofE4PrrHs9JVOFX+Dj30erNq2UBnd06oILtQAZypPAYpM5hJcYOWZriRwhH3VLfCtuuuTjhfCsprNpilc+eS/6Jd48LYUmuzIupXdfqPIB5FS0yZMJkYa4V9fPzpvXvo1CUerRD9Cqp000kqfw1ycJy63n6YvYNkJOHlTjGRHPJHc3aXZLr+K59wEZNlcgUSfGV/1PdvMKlIEv+TKeFP8IwZsBu6XJf3p6icZPgBXHwSWV0p3lPa5JuVuNevXDtofgJxyzqxT3HdF+R3cJCpo6jMnXephSob97m4ya6En0ru60UaLiaQj66UAGetkbPvzF/UOt3uPOIAq1rfU9W+ixdNkBcMsEXX9hWekUL02ntIqiYh9mKBkqywJCIOmT6Xz0fkkhhUApNGmtqzeKwG09aOb1Xn2Hl3MQ8+FDmNAdPF38ddPS/W7y2kGFu08+DQkHzRHM29+LUqULcjobqRL4c58l90G3NC0mI3AwC7QRsD/I30jx8+KU1mhyeWvfhNxKMdlgwiYePVCFquHRDFZhhNsZ4rueXePIP00vBe0LlxA6R2JVkJlW7dzciZaY5ZExIqYkrKvf1a23bEy8N7cqlNhZOzXDws944YjT2/0HRiQLYYEU0zC+eu7wYWkeojyYWwgX1e4O97TR1VkvjcKEYO4+5IcYNDAtMR+mKN4wmHwdrmJzyNFTktSv4AYGaNu/TiRt+9a/xkEYb/QDRTzux7uNGrFVoVyk5MRgoUBo+z2ZMBR+MfNMimtsqsqxcOth/Fm3kti+R5jXDe1wGqoY7IuMQCf3bGXPUB8PqcuhndkDJfnCn7SjghhQSk8ONBA1/FXMAg9gWZ2IYYVMeHiM7IkTO8g3GCmNg8hEkX7aG971X3f/mnKJIY/TKrlZdpQQ9mduwnjMJFK/2GLOmCpASvxA04bugqKwKO4VwT0xAC/Xqf1Q5/pnL+hrNZQj4hWZRM5NwYff24fjHkVTsw2r7YN//DM/W3Ou8qcPWDHuPmVTPJIQw+K+eCcT7aNjRNAB2++FXUrEheoFn1jAIwG1bYhvwBd155DJpS9+CqTGhawtPwLLQz4pVJS4OdtT5Oyh5kKuUM3ooQ+YCVD/ny7rZR4eMtYcfvENI/j/0SiKdsbd40ny1LJVYXUZwxJrNpPGNWO6favXklvJ8tV5avB2nwCtTapovcG0DQg5pNyt9NOyALRSRIu4UEE6H67TcvLDJH8NyKIAM/nazD76KJSk8tT903lPpaU/zaZrys3YjFC9nD6/FCtEwYNjJ7/q18MSq3+/4eXXLcvu9pqflKF1t5vuNLZSsFnmY0lx+dESTZsEpw6UnVXAeC8TUXxrq9UYQNNFcRanSgS+wKizPQ5eeUgny6Mq3xlg2wVzsQPWH0IqBGyyljaFK8mDTzXoxJ217KQOf24x/iiU1XqCfTLyl0BAnU4uW3aHFtS+fd9dvnvLQ8nE66UHcXC16JRsvYBzyLcPoB1mjXBn6WF4y4f5w67SQbe9fXmpDmK17KCCOBng3KnDFFyVCcZoqCVzOgDd0CLg84ZIxEWyyrogExm+wf8Bg9CKY03EQF4jnNgHf+pMa1rR69/+k3rPyA1CFNV5uu6mqtdJ0jt6MfaQr+P9Pbx2w4GI4hyMzfcbeS+n/8j6J9n3Dn1dDw1yPAzZAbkdYlU0XP4i7Ft1fQn6GDRTk9PtgWYX2TGRQaN9zfY1BYd3+pJHI4AaJWWqWJezX9qg1B+l50khZm7h3r4oxn199fU2PtBdZyUqU4AzXd3RMxEKwz/gYXKVXvDnP9Y+BXzZ0NMEVvAkpk8dEGWUHXfjCPl/GLypb/+7ea285x6lx181K2o7OIEuMfqYtkAQsQbn6X0kp7CfOj3j0tc36fwHc1krOf+qZmWNzLk9J4nz9k9tAN2dzsRivUfdsem1AK3MgLcCIlgJHd6ovDmkm0IQS5Pucp9ZpDhH/khI/x9EfpMGvFbU4wHYW34jubQ7iMiC4616l8BDi2LIQ8lkDLQUsTxaVJ7Hno0n7VMdwGx3ES3vEGz/Vth3R2urwV94UKCV2/+OCCVZukNFAoMtgO8lhpvYyOPwcNTW1qhXNzkP3EG7MA+BslyfcyZwaBOnh1k6+CeCnwyLXytlLWr8WKJivy4W6rVvy7H6FNBrwNH7PQ6Ip74qjXbwwauIJID5uj8Cc+yAOES/EMtP4QPtRgFmzYzNQq6pTw3yYBAba/MnTDyD/UVfSh+s4OUcUEl4G7ZU1g8S46yb7ALyTClcBN8K5GBuxaD9970WeLq27IJNtZYRzL5xEnQu9NReFwP2rmp0nIDeUWbUyuWFYCgG3aBgil0xn8J+XMIEvF5luZQOX9HGaS7XihUxaZkdW6SC2tyOS8IBfQBmC1se/yh5z5V9boeGGLtWKoOKkelHqKtmzW5iLCbiL2/SkwiS/NxHnqqZid4WNsRyR9fbih9dQJGfZ3Niiub7aiTX0jRmmdsXKoUgbsNP5xih5gxndrYVrCN4ijb9eIp6sCY+SD1y+wPqedZUtWtNO3LAy/SaKvuRuORx1aEVuDPnr+w2OJ2E7PbtHD6Yfv+69cmnDsCqsFBB5fZl/ibyeZQLAh8dzvbQswXhxiiv0XoLUrqz1cbYQFqdmYGZryKLdBCdPtUscdcXC5UDXBNJInED5naQToQGWNz9RoAiYWrQ9EeChi0xLbRXL5dbNBBF0i5zC1J6O7z6lPA0kmIYVKDpmvyyA+vxIdg9CU8i3as+orB94riOeeZ0EwgtZ2to83oSEmtxLwcR9RsqgrnJsoupmTNYrllQFA7rXmdPT/RAnkCqbj6T0/UDdWNEnwj/h/GJzN2go9Jg4cQx93XI48dnI8zZR3L41rzfdk/kh6I0x3DSQnGNoAuNOax8hOtO42ozXTxI1cD+oRAIIMb7vzdP/LZvHNhzgohDPU6HPhuuEQrozN1t2pV1+2zVOC30Uf4649kg2TNRKVfEiuIbixFL4jIZV00BKiTOejNI5cZXcE7TWan1nsoBmTOx/rlnvD3fxMeqw5itGHELccU5rgvPZMvWaKUMmUlE9dQQB2YOhk4/zjnQ7n4TLNJvxll5+y38TKBuTKc4n21KPk6Xxm8/FucKMC655xZxowO5DnlWAZUdadqWks8cXlFa/CqCssogA5zXqldLp+dQX8j0aONTlnYAepRXtbVI8UuX2xzACHszR9XHZQsEay93CSkdIyQPVjXjpVkz4WdZzptFHiXtYPIbMZTg10Vo8fMwsvw9BgoqFZIX0+ylExJIpEuFpnR4XlYpbivgjunLh3JzFZMjXuLYQvmHcVu6pWfHzz/9ymIdnKLA+h+2eSbrtBzQ/2Cfq4MKTv4BSiNPH4D9r+Y4oeZWDrQL7bTRn8dKE1iAwwBrboc7Tu7kwRNlZ7ZM/nlNOxwCMQzbs3q1+n4bDI/+ZCqbDzV8cKm3UClx4fYlc77i+GtfeMW78lzum5Xgk69Kf0dS48EukkzzKwXFuMJJOehnLfzlkAGio8uTlvuaVfeP6JD+KLyP08Mu4p5rpGzeFO0601TvF2zB3W0WS6JSiOdAXyDyBnXVzbddQHJLm2ZEB97qSsUwYY2bX8dPWHqSZ8dmgLcEJBpHtQbDmz9YRvoe0wNDksjLTpDuyZGo8fm9pYUlhiJrplU5pJfNVca63at5bPfougSBZNU5RBDFWMc4t48G1MY8sFQy/uupnR/RjZY77CVcFLeQXyWI94wys6ExxRg8DpF+PD9sYg6eUgrtLEtHgh3XipLxnLpxi7N2b34VryQlTRytxjG1XEzArkCoMPLPMGwvwGCLqP1Z4kBZSbM8Fj7EAIJ/LMZTGChVoxpEVXBO0VHPlYXqhSZy34Gt9RDYGvibjGCPjoiK4CXJsZYuqPe4lxN3+DOluTyJfdR0TWKvH/qmQ0iqNS70ZW+63h3UcIxeMNp+w6WfcRIJPqHJqoaw7oZTjy6Ylwjp+Ax/JNoIm9tSkpG+VA6+NLbqATvgapS7hRcsXq7IRfNkA7HOzo/V6yUUbR9wK6v+pRydQUD3eDtkPZYbB0wjWUAy8C8CIPCRTP4SMYzfKFrZj5NmgWsbl4l9FqzdSIND0PODpBUk9E9nqnhKkfPhQPwzH8nP4q/0ebQblCLYGCwJ90Dibz+IN+v5I5AC5YIhVywbn2+I4sMJeyxkLxpG7dUhHrttK2WxVwNPXciYL6HRB2HVr782zglQqZKVoEeXoQBUUJpeQuF9q6JW86o0sYiiMFBepoX8ppO8DwDqmrl+kliTYaYrHno6Lnr7E58zCi3fxEA+xfgAj7cyOK4Y5JWdfOhb0ptemoCX6iMRrwgQf3jkO3LP9G9L49pV+VHOf60KW1RPb1yHhvKRfTXzWWBI8hpfHUOZG3Xzdo4K5M3L9Qhu23f/rEwwWYuoUhmJWI3A0VEowPI7oQND60RnfYTQAgJcAwvVSs/IsRcPvYK04CZqHY3IHHA8jFPWmD1/LNNqRgFXahBhckKdP3tjT0vZ0Q3jwPRmbLAiboUeF9U0XeBBklFBx4xvr70EKzKg4TKfb6gFhy7LcfgLXA1osZXu4FLYM6cGznaE6FtsRwg1RwrtBjRGE2It/h6MUuTG3RKgkE4ToHdgqnt9SARnFHTLjE/SamLF4vaz6I5a2jCA/wSjvZmLGWn9UCL0iLAo60QO5O0mGxJYmiQtuCfoo1myVgi+FjSHtk4DRoL0loHjmaPmg9/daT4QKCJW8DGIa8oUrqrNv8IqfLJp1yNLl8ZBFYQhJlfcKQdT/pIFF1LRJ5vWnIUkEK+uFqezvo1/jdYIn08hYtqRLH9fjksBTyIjWYZzM4IKWlllt/tD0BS6WyQALqaslPA7KEMq9+/UwM57lJeBB4MKgZFDQJaOoZCSKWMRssxKApqBf9idI/zw9E8TSE+LpHKXj+QgVGJT+Q1/vC7EMn7XlbmcQTbxKmB+131iDyFkDY6NfRTfWfzZVW4tq+RLsS1Z5gIWWLnc08rnGT0TgVCev0D8UP6/6gwL6/z8xxPxnXWLsLKycqtKtpv2Jyp4sAjUQTTzEOTtRAhAgr5mg/SDmlTBH1EVlUs6QwV5crli/p4yqvIKc9/ck/6BLx374+UMZvevBDWqdpB7sxwxJNpGAoksOMexQK4qh0LOBcHXyuvcMCA1TOmhaRXvj3vBTJ39cDiHv3yQcNW9D8M0+H2yQmDzcpssYKNE9I987sik3+3z66fN0P0RfufApOqR+SJVvIT2URBNx1Co+i8zbTdEuzoQS/MyYCqjkCGG0hIlylSeBhefGfxe1kmirEM7a5uSI4m45LJ61+9iIAqm7ixAFcbEdC/0sIb4Dqa9SqnLDxeUFpL0PKjo2VKA1YKju18BFuzOkPD+vhxSGMnq0g75CDENNzxFKUfaE/zxSD0wjz3asQxOisyxOsV6N70tazz+sJhtMIFM72xld6kcfaiYB9qENB/ReIhkS9asXaRr7bYRDMZw4hZDACl6UW1VM8qnUoIIbJrHKrBwhdaAI7QHw6Sw/m5QQUlZKDdodUaZwgNzUXRkxsA1dsNsF2WUmFBS5I+cBjC0UfEKmsLe0MpO10upcwWW3lXpa77r/XGqUk0IYE1Hzv4WwlkOg3KfC8gbivkbdPIzFsiLPOo+TL5VWC+TgW6TCH1ttymWRSXqlJDQqHpZE2k+ljvjscLcgHFMsnB6u2pntuLQhaFMbrySVmI6ZgDn9w6AFbkDk8nmgmIgnbvUZLFA8uu/oMWK9yAVbwu907xIfebDdXP1/SV2gZ5koyuy54sNln1bhzGkNqq05lpPZ5Us5jAFrjnMIuav8O2ttKkIPXdOt1RoYkebheWAVACt1fYo6XKzs+g61t5gVqWICxpDNEpZE1ka2s5Xqe04TYwdY3Ke8MjNMra9mW6FSmnVNeDYQzLmtGZkimKdA0wR6aIO5ZQ7v0gvVKEdEZmiop8fo3AYWk+G7CUMo7UDjIe7EHzOx3mJUGZOxya/2E8Nhob/kpw7fPnNI3B5Kx0Z+apGsGAffKIpR80lRoK8r3jlDfvOv4HHgsnWGq9OYovRHEYyxsSSQbW8z2FxFrM94iwtEJNN6PrOnIiFPSmq7+YH5v40CiRoPHkZ8d+V/kYneF+q5ChZrY3MJq3KJ7xlHHXcx7jAUklGF25v3LEHX3c0TN0YYV9qbEcTpEHGqLS0dxylCF5makHJlb15pbdpu+LrPSxPeUVe4c7GzkzBsMN30AWRDuxd7JI3tfMNPCtTij+B3dl1yhY0jQe6AYi269T9aA5TrGnhHoPEmEea46h9I6LqPOAufTq2a3h65XBqGXosjPpBae84ClSn0c0lM1f2XOzY+XKC2CWBN6S8LHLhT25zegSedB+4KT6yGiJSZzR8Fww+HhyK079cC1wHEnJgwWjuMbPNbPZhmFZgnRbllGVuwsMOmXkDQpG4rkpKBER/A5kZkpl45vewQDHzm5yK9MXlDduIsgyKjDiMHDPciXBzlL0f9YUoa1bNwD2VBGVnw7XLNy0D3nnpq0cnpop77m57wHr3asHMadeU4i1OUML9Ua7hG7YFrkQ7MxzxLJWKfJRsAQm0zVOTD4QRtuZWQcbjMni3rXArKgrGIeijbfe4zG3H02Vd8AmcQ6MNkAzR3mf+0kU68NaoPZjNIIz2Dt/CAvvB28y4/RgqJKkU+c+SpUDMd25GJwWCY8p+EHUIZbT00f4se+3mncPuEQgYbpP+ANIh7qQYkrCueuzPbLwp1X3WwbdiyHI+B/ff3Wzc2dbaGPsG2xy4z9i0rFnzQ23BgsmWTYnYZFXKw3BDYtqFYdQ15v+kw3bAMWr+filBxanzY99mZv41NPa6QBbjvigCbPGvsTSV3j9ThKQu6KadN0sm5flR6TNC/W/Xtm/ClvnAfwgMJxbx5Wn2rbyGwbRzGlC7USpbBFkycVM1vxqdqScCgS9bJ2s2gorS5m6S79rGwL1AZkGxBxV5f3K4AX7P77FcXsMppj191b8xhkJKg==</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      讲述C++中的友元函数、友元类、友元成员函数（加密文章）
    
    </summary>
    
      <category term="代码学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="C++学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/C-%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="C++" scheme="https://shuhaohwang.github.io/tags/C/"/>
    
      <category term="学习总结" scheme="https://shuhaohwang.github.io/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
      <category term="C++学习总结" scheme="https://shuhaohwang.github.io/tags/C-%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>数据结构学习总结-（5.7）二叉树遍历的衍生运用</title>
    <link href="https://shuhaohwang.github.io/2019/07/21/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%885-7%EF%BC%89%E4%BA%8C%E5%8F%89%E6%A0%91%E9%81%8D%E5%8E%86%E7%9A%84%E8%A1%8D%E7%94%9F%E8%BF%90%E7%94%A8/"/>
    <id>https://shuhaohwang.github.io/2019/07/21/数据结构学习总结-（5-7）二叉树遍历的衍生运用/</id>
    <published>2019-07-20T16:54:58.000Z</published>
    <updated>2019-07-20T17:14:47.593Z</updated>
    
    <content type="html"><![CDATA[<h4 id="二叉树遍历的衍生运用"><a class="header-anchor" href="#二叉树遍历的衍生运用">¶</a>二叉树遍历的衍生运用</h4><p>例图：<img src="/2019/07/21/数据结构学习总结-（5-7）二叉树遍历的衍生运用/1.png"></p><h5 id="递归求树的深度-高度"><a class="header-anchor" href="#递归求树的深度-高度">¶</a>递归求树的深度/高度</h5><ul><li><p>代码实现:</p><ul><li><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">GetTreeDepth</span><span class="params">(BiTreeNode* T)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!T)<span class="keyword">return</span> <span class="number">0</span>;<span class="comment">//递归出口</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> l = GetTreeDepth(T-&gt;L_Node);</span><br><span class="line">    <span class="keyword">int</span> r = GetTreeDepth(T-&gt;R_Node);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> (l &gt; r) ? (l + <span class="number">1</span>) : (r + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>实验结果: <img src="/2019/07/21/数据结构学习总结-（5-7）二叉树遍历的衍生运用/2.png"></p></li></ul></li><li><p>实现思路: 根据树的深度的概念—树中结点的最大层次或结点的最大深度，结点的深度又为结点的祖先个数+1，所以可以通过递归，从根结点开始往左右子树进行递归操作，当左右子树某一边的深度大于另一边的时候，返回最大的另一边的深度 + 1即可。</p></li></ul><hr><h5 id="递归求得树的总结点个数"><a class="header-anchor" href="#递归求得树的总结点个数">¶</a>递归求得树的总结点个数</h5><ul><li><p>代码实现：</p><ul><li><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">AllNodeCount</span><span class="params">(BiTreeNode* T)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!T)<span class="keyword">return</span> <span class="number">0</span>;<span class="comment">//递归出口</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> l = AllNodeCount(T-&gt;L_Node);</span><br><span class="line">    <span class="keyword">int</span> r = AllNodeCount(T-&gt;R_Node);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> (l + r + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>实验结果：<img src="/2019/07/21/数据结构学习总结-（5-7）二叉树遍历的衍生运用/3.png"></p></li></ul></li><li><p>实现思路：进行递归只要某个结点不为空就返回 1，通过递归进行累加，最终根结点会得到所有子树结点数量累加值。</p></li></ul><hr><p>–（本文未完）</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;二叉树遍历的衍生运用&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#二叉树遍历的衍生运用&quot;&gt;¶&lt;/a&gt;二叉树遍历的衍生运用&lt;/h4&gt;
&lt;p&gt;例图：&lt;img src=&quot;/2019/07/21/数据结构学习总结-（5-7）二叉树遍历的衍生运用/1.
      
    
    </summary>
    
      <category term="代码学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="数据结构学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="学习总结" scheme="https://shuhaohwang.github.io/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
      <category term="数据结构" scheme="https://shuhaohwang.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="数据结构-学习总结" scheme="https://shuhaohwang.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>数据结构学习总结-（5.6）树的广度优先遍历算法</title>
    <link href="https://shuhaohwang.github.io/2019/07/20/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%885-6%EF%BC%89%E6%A0%91%E7%9A%84%E5%B9%BF%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2%E7%AE%97%E6%B3%95/"/>
    <id>https://shuhaohwang.github.io/2019/07/20/数据结构学习总结-（5-6）树的广度优先搜索算法/</id>
    <published>2019-07-20T04:55:57.000Z</published>
    <updated>2019-07-20T08:15:54.512Z</updated>
    
    <content type="html"><![CDATA[<h4 id="广度优先遍历二叉树"><a class="header-anchor" href="#广度优先遍历二叉树">¶</a>广度优先遍历二叉树</h4><ul><li><p>又名：层次遍历</p></li><li><p>正如名字所描述，该遍历二叉树的方式是以层进行的，期间运用的队列的知识，通过先进先出的原理。</p></li><li><img src="/2019/07/20/数据结构学习总结-（5-6）树的广度优先搜索算法/1.gif"> <img src="/2019/07/20/数据结构学习总结-（5-6）树的广度优先搜索算法/2.gif"></li><li><p>如上图所示：整体思路是先让根结点进队并输出其数据并出队，然后让其左子树再进队，右子树再进队，通过循环重复上述过程</p></li><li><p>具体代码：</p></li><li><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Traversal</span><span class="params">(BiTreeNode* R)</span></span>&#123;</span><br><span class="line">    <span class="built_in">queue</span>&lt;BiTreeNode*&gt; Q;</span><br><span class="line">    Q.push(R);</span><br><span class="line">    <span class="keyword">while</span>(!Q.empty())&#123;</span><br><span class="line">        BiTreeNode* T = Q.front();</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; T-&gt;data &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">        Q.pop();</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (T-&gt;L_Node)Q.push(T-&gt;L_Node);</span><br><span class="line"><span class="keyword">if</span> (T-&gt;R_Node)Q.push(T-&gt;R_Node);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>实验结果: <img src="/2019/07/20/数据结构学习总结-（5-6）树的广度优先搜索算法/3.png"></p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;广度优先遍历二叉树&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#广度优先遍历二叉树&quot;&gt;¶&lt;/a&gt;广度优先遍历二叉树&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;又名：层次遍历&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;正如名字所描述，该遍历二叉树的方式是以
      
    
    </summary>
    
      <category term="代码学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="数据结构学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="学习总结" scheme="https://shuhaohwang.github.io/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
      <category term="数据结构" scheme="https://shuhaohwang.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="数据结构-学习总结" scheme="https://shuhaohwang.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>C++进阶学习总结-（2.4）虚函数、纯虚函数、override/final、虚析构函数</title>
    <link href="https://shuhaohwang.github.io/2019/07/19/C-%E8%BF%9B%E9%98%B6%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%882-4%EF%BC%89%E8%99%9A%E5%87%BD%E6%95%B0%E3%80%81%E7%BA%AF%E8%99%9A%E5%87%BD%E6%95%B0%E3%80%81override-final%E3%80%81%E8%99%9A%E6%9E%90%E6%9E%84%E5%87%BD%E6%95%B0/"/>
    <id>https://shuhaohwang.github.io/2019/07/19/C-进阶学习总结-（2-4）虚函数、纯虚函数、override-final、虚析构函数/</id>
    <published>2019-07-19T13:40:50.000Z</published>
    <updated>2019-07-19T14:58:39.989Z</updated>
    
    <content type="html"><![CDATA[<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="此文章是加密文章，请输入密码后查看.">    <label for="pass">此文章是加密文章，请输入密码后查看.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      讲述了C++11新引入的override/final关键字、虚函数、纯虚函数、虚析构函数（加密文章）
    
    </summary>
    
      <category term="代码学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="C++学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/C-%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="C++" scheme="https://shuhaohwang.github.io/tags/C/"/>
    
      <category term="学习总结" scheme="https://shuhaohwang.github.io/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
      <category term="C++学习总结" scheme="https://shuhaohwang.github.io/tags/C-%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>数据结构学习总结-（5.5）二叉树的链式实现与二叉树的先、中、后序遍历</title>
    <link href="https://shuhaohwang.github.io/2019/07/19/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%885-5%EF%BC%89%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E9%93%BE%E5%BC%8F%E5%AE%9E%E7%8E%B0%E4%B8%8E%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%85%88%E3%80%81%E4%B8%AD%E3%80%81%E5%90%8E%E5%BA%8F%E9%81%8D%E5%8E%86/"/>
    <id>https://shuhaohwang.github.io/2019/07/19/数据结构学习总结-（5-5）二叉树的链式实现与二叉树的先、中、后序遍历/</id>
    <published>2019-07-19T08:12:35.000Z</published>
    <updated>2019-07-19T09:34:52.668Z</updated>
    
    <content type="html"><![CDATA[<h4 id="二叉树的链式实现"><a class="header-anchor" href="#二叉树的链式实现">¶</a>二叉树的链式实现</h4><h5 id="创建链表二叉树"><a class="header-anchor" href="#创建链表二叉树">¶</a>创建链表二叉树</h5><ul><li><p>二叉树的链表实现有两种情况</p><ul><li>二叉链表：一个结点带有指向左右子树的指针和一个数据<ul><li><img src="/2019/07/19/数据结构学习总结-（5-5）二叉树的链式实现与二叉树的先、中、后序遍历/1.png"></li></ul></li><li>三叉链表：除了带有分别指向左右子树的两个指针外还有一个指向双亲结点的指针<ul><li><img src="/2019/07/19/数据结构学习总结-（5-5）二叉树的链式实现与二叉树的先、中、后序遍历/2.png"></li></ul></li></ul></li><li><p>现以二叉链表为例创建一个二叉树</p><ul><li><img src="/2019/07/19/数据结构学习总结-（5-5）二叉树的链式实现与二叉树的先、中、后序遍历/3.png"></li><li><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">BiTreeNode</span>&#123;</span></span><br><span class="line">    <span class="keyword">char</span> data;</span><br><span class="line">    BiTreeNode* L_Node = <span class="literal">nullptr</span>;<span class="comment">//指向左子树的指针</span></span><br><span class="line">    BiTreeNode* R_Node = <span class="literal">nullptr</span>;<span class="comment">//指向右子树的指针</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    BiTreeNode* T = <span class="keyword">new</span> BiTreeNode(); T-&gt;data = <span class="string">'A'</span>;</span><br><span class="line">T-&gt;L_Node = <span class="keyword">new</span> BiTreeNode(); T-&gt;L_Node-&gt;data = <span class="string">'B'</span>;</span><br><span class="line">T-&gt;R_Node = <span class="keyword">new</span> BiTreeNode(); T-&gt;R_Node-&gt;data = <span class="string">'C'</span>;</span><br><span class="line">BiTreeNode* p = T-&gt;L_Node;</span><br><span class="line">p-&gt;L_Node = <span class="keyword">new</span> BiTreeNode(); p-&gt;L_Node-&gt;data = <span class="string">'D'</span>;</span><br><span class="line">p-&gt;R_Node = <span class="keyword">new</span> BiTreeNode(); p-&gt;R_Node-&gt;data = <span class="string">'E'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><hr><h4 id="二叉树的遍历"><a class="header-anchor" href="#二叉树的遍历">¶</a>二叉树的遍历</h4><ul><li><u>遍历</u>对于二叉树来说是非常重要的。遍历是数结构插入、删除、修改、查找和排序运算的前提，<u>是二叉树一切运算的基础和核心</u>。</li><li>二叉树的遍历分为三种<ul><li>前序遍历(根-左子树-右子树)</li><li>中序遍历(左子树-根-右子树)</li><li>后序遍历(左子树-右子树-根)</li></ul></li></ul><h5 id="前序遍历"><a class="header-anchor" href="#前序遍历">¶</a>前序遍历</h5><ul><li><p>前序遍历就是先从根开始然后<strong>递归</strong>左子树再<strong>递归</strong>右子树。</p></li><li><p>例如：<img src="/2019/07/19/数据结构学习总结-（5-5）二叉树的链式实现与二叉树的先、中、后序遍历/3.png"></p></li><li><p>遍历的结果为： A、B、D、E、C</p></li><li><p>代码实现：</p><ul><li><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Pre_Traversal</span><span class="params">(BiTreeNode* T)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!T)<span class="keyword">return</span>;<span class="comment">//如果T为空那么就结束</span></span><br><span class="line">    </span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; T-&gt;data;<span class="comment">//先从根开始</span></span><br><span class="line">    Pre_Traversal(T-&gt;L_Node);<span class="comment">//递归遍历左子树</span></span><br><span class="line">    Pre_Traversal(T-&gt;R_Node);<span class="comment">//递归遍历右子树</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>实验结果：<img src="/2019/07/19/数据结构学习总结-（5-5）二叉树的链式实现与二叉树的先、中、后序遍历/4.png"></p></li></ul></li><li><p>具体递归实现解释：<img src="/2019/07/19/数据结构学习总结-（5-5）二叉树的链式实现与二叉树的先、中、后序遍历/5.png"></p></li></ul><hr><h5 id="中序遍历"><a class="header-anchor" href="#中序遍历">¶</a>中序遍历</h5><ul><li><p>中序遍历就是先<strong>递归</strong>左子树开始然后再到根再<strong>递归</strong>右子树。</p></li><li><p>例如：<img src="/2019/07/19/数据结构学习总结-（5-5）二叉树的链式实现与二叉树的先、中、后序遍历/3.png"></p></li><li><p>遍历的结果为： D、B、E、A、C</p></li><li><p>代码实现：</p><ul><li><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Mid_Traversal</span><span class="params">(BiTreeNode* T)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!T)<span class="keyword">return</span>;<span class="comment">//如果T为空那么就结束</span></span><br><span class="line">    </span><br><span class="line">    Mid_Traversal(T-&gt;L_Node);<span class="comment">//递归遍历左子树</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; T-&gt;data;</span><br><span class="line">    Mid_Traversal(T-&gt;R_Node);<span class="comment">//递归遍历右子树</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>实验结果：<img src="/2019/07/19/数据结构学习总结-（5-5）二叉树的链式实现与二叉树的先、中、后序遍历/6.png"></p></li></ul></li></ul><hr><h5 id="后序遍历"><a class="header-anchor" href="#后序遍历">¶</a>后序遍历</h5><ul><li><p>例如：<img src="/2019/07/19/数据结构学习总结-（5-5）二叉树的链式实现与二叉树的先、中、后序遍历/3.png"></p></li><li><p>遍历的结果为： D、E、B、C、A</p></li><li><p>代码实现：</p><ul><li><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Post_Traversal</span><span class="params">(BiTreeNode* T)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!T)<span class="keyword">return</span>;<span class="comment">//如果T为空那么就结束</span></span><br><span class="line">    </span><br><span class="line">    Post_Traversal(T-&gt;L_Node);<span class="comment">//递归遍历左子树</span></span><br><span class="line">    Post_Traversal(T-&gt;R_Node);<span class="comment">//递归遍历右子树</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; T-&gt;data;</span><br><span class="line">   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>实验结果：<img src="/2019/07/19/数据结构学习总结-（5-5）二叉树的链式实现与二叉树的先、中、后序遍历/7.png"></p></li></ul></li><li><p>具体文字解释：</p></li><li><p>①先从<code>Post_Traversal(T(A))</code>开始进入函数执行<code>Post_Traversal(T(A)-&gt;L_Node(B))</code></p></li><li><p>②在<code>Post_Traversal(T(B))</code>中又先执行执行<code>Post_Traversal(T(B)-&gt;L_Node(D))</code></p></li><li><p>③在执行<code>Post_Traversal(T(D))</code>的时候因为执行D结点中的<code>Post_Traversal(T(D)-&gt;L_Node)</code>为空结束递归，执行下一句<code>Post_Traversal(T(D)-&gt;R_Node)</code>也为空结束递归，执行<code>cout &lt;&lt; ‘D’;</code>到这里<code>Post_Traversal(T(D))</code>函数执行完毕，继续执行B结点中的<code>Post_Traversal(T(B)-&gt;R_Node(E))</code></p></li><li><p>④在执行<code>Post_Traversal(T(E))</code>的时候发现E的左右子树都为空，那么就只执行了<code>cout &lt;&lt; ‘E’;</code>返回B结点执行下一句<code>cout &lt;&lt; ‘B’;</code>至此<code>Post_Traversal(T(A)-&gt;L_Node(B))</code>已经执行完毕返回至A结点</p></li><li><p>⑤执行A结点中的<code>Post_Traversal(T(A)-&gt;R_Node(C))</code>也就是执行<code>Post_Traversal(T(C))</code>发现C结点的左右子树也为空，那么只执行了C结点中的<code>cout &lt;&lt; ‘C’;</code>返回A结点的函数，到这里A结点的<code>Post_Traversal(T(A)-&gt;R_Node(C))</code>执行完毕，再执行下一句<code>cout &lt;&lt; ‘A’;</code></p></li><li><p>⑥当<code>cout &lt;&lt; ‘A’;</code>执行完毕后<code>Post_Traversal(T(A))</code>函数结束。屏幕上输出DEBCA</p></li></ul><p>–（本文完）</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;二叉树的链式实现&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#二叉树的链式实现&quot;&gt;¶&lt;/a&gt;二叉树的链式实现&lt;/h4&gt;
&lt;h5 id=&quot;创建链表二叉树&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#创建链表二叉树&quot;&gt;¶&lt;/
      
    
    </summary>
    
      <category term="代码学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="数据结构学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="学习总结" scheme="https://shuhaohwang.github.io/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
      <category term="数据结构" scheme="https://shuhaohwang.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="数据结构-学习总结" scheme="https://shuhaohwang.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>数据结构学习总结-（5.4）二叉树的顺序储存结构</title>
    <link href="https://shuhaohwang.github.io/2019/07/19/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%885-4%EF%BC%89%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E9%A1%BA%E5%BA%8F%E5%82%A8%E5%AD%98%E7%BB%93%E6%9E%84/"/>
    <id>https://shuhaohwang.github.io/2019/07/19/数据结构学习总结-（5-4）二叉树的顺序储存结构/</id>
    <published>2019-07-18T19:16:38.000Z</published>
    <updated>2019-07-18T19:41:38.182Z</updated>
    
    <content type="html"><![CDATA[<h4 id="二叉树的抽象数据结构"><a class="header-anchor" href="#二叉树的抽象数据结构">¶</a>二叉树的抽象数据结构</h4><ul><li>ADT BinaryTree</li><li>Data<ul><li>D是具有相同特征的数据元素的集合</li></ul></li><li>Relative<ul><li>若D = ∅，则R = ∅；</li><li>若D ≠ ∅，则R = {H}；</li><li>root唯一</li><li>D<sub>j</sub>∩D<sub>k</sub> = ∅</li><li>…</li></ul></li><li>Operation<ul><li>createBiTree(&amp;T , defination)//构建二叉树</li><li>…</li></ul></li><li>endADT</li></ul><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;二叉树的抽象数据结构&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#二叉树的抽象数据结构&quot;&gt;¶&lt;/a&gt;二叉树的抽象数据结构&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;ADT BinaryTree&lt;/li&gt;
&lt;li&gt;Data
&lt;ul&gt;
&lt;li&gt;D是具有相同特征
      
    
    </summary>
    
      <category term="代码学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="数据结构学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="学习总结" scheme="https://shuhaohwang.github.io/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
      <category term="数据结构" scheme="https://shuhaohwang.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="数据结构-学习总结" scheme="https://shuhaohwang.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>C++进阶学习总结-（2.3）拷贝构造函数、继承与访问等级、函数遮蔽</title>
    <link href="https://shuhaohwang.github.io/2019/07/18/C-%E8%BF%9B%E9%98%B6%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%882-3%EF%BC%89%E6%8B%B7%E8%B4%9D%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E3%80%81%E7%BB%A7%E6%89%BF%E4%B8%8E%E8%AE%BF%E9%97%AE%E7%AD%89%E7%BA%A7%E3%80%81%E5%87%BD%E6%95%B0%E9%81%AE%E8%94%BD/"/>
    <id>https://shuhaohwang.github.io/2019/07/18/C-进阶学习总结-（2-3）拷贝构造函数、继承与访问等级、函数遮蔽/</id>
    <published>2019-07-18T11:38:55.000Z</published>
    <updated>2019-07-18T13:59:15.756Z</updated>
    
    <content type="html"><![CDATA[<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="此文章是加密文章，请输入密码后查看.">    <label for="pass">此文章是加密文章，请输入密码后查看.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      讲述了C++中的特殊的拷贝构造函数、继承与访问权限等级、函数遮蔽问题（加密文章）
    
    </summary>
    
      <category term="代码学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="C++学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/C-%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="C++" scheme="https://shuhaohwang.github.io/tags/C/"/>
    
      <category term="学习总结" scheme="https://shuhaohwang.github.io/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
      <category term="C++学习总结" scheme="https://shuhaohwang.github.io/tags/C-%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>数据结构学习总结-（5.3）二叉树的性质及推导</title>
    <link href="https://shuhaohwang.github.io/2019/07/17/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%885-3%EF%BC%89%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%80%A7%E8%B4%A8%E5%8F%8A%E6%8E%A8%E5%AF%BC/"/>
    <id>https://shuhaohwang.github.io/2019/07/17/数据结构学习总结-（5-3）二叉树的性质及推导/</id>
    <published>2019-07-17T03:03:38.000Z</published>
    <updated>2019-07-17T03:50:47.752Z</updated>
    
    <content type="html"><![CDATA[<h4 id="二叉树的性质"><a class="header-anchor" href="#二叉树的性质">¶</a>二叉树的性质</h4><h5 id="性质1：-层级-📝"><a class="header-anchor" href="#性质1：-层级-📝">¶</a>性质1：(层级)📝</h5><ul><li>在二叉树的第<code>i</code>层上<u>至多</u>有2<sup>i-1</sup>个结点。</li><li><img src="/2019/07/17/数据结构学习总结-（5-3）二叉树的性质及推导/1.png"></li><li>即：下层的结点最多是上层结点的2倍</li></ul><hr><h5 id="性质2：-深度-📝"><a class="header-anchor" href="#性质2：-深度-📝">¶</a>性质2：(深度)📝</h5><ul><li>深度为k的二叉树<u>至多</u>有2<sup>k</sup>-1个结点。</li><li><img src="/2019/07/17/数据结构学习总结-（5-3）二叉树的性质及推导/2.png"></li></ul><hr><h5 id="性质3📝："><a class="header-anchor" href="#性质3📝：">¶</a>性质3📝：</h5><ul><li><p>对于任何一颗二叉树，若2度的结点数有n<sub>2</sub>个，则叶子结点n<sub>0</sub>的个数比为n<sub>2</sub>+1</p></li><li><table><thead><tr><th>符号</th><th>解释</th></tr></thead><tbody><tr><td>n<sub>0</sub></td><td>度数为0的结点数(叶结点数)</td></tr><tr><td>n</td><td>总结点数</td></tr><tr><td>n<sub>1</sub></td><td>度数为1的结点数</td></tr><tr><td>n<sub>2</sub></td><td>度数为2的结点数</td></tr><tr><td>B</td><td>分枝数</td></tr></tbody></table></li></ul><ul><li><p><strong>n<sub>0</sub> = n<sub>2</sub>+1</strong></p></li><li><p><strong>其他公式</strong>🔎：</p><ul><li>分枝数(B)：<ul><li>B = n<sub>1</sub>+2n<sub>2</sub></li><li>B = n - 1(n为总结点数)B</li></ul></li></ul></li><li><img src="/2019/07/17/数据结构学习总结-（5-3）二叉树的性质及推导/3.png"></li><li><p><strong>推导过程（n<sub>0</sub> = n<sub>2</sub>+1）📜</strong>：</p><ul><li>因为 B = n -1① 且 n = n<sub>0</sub> + n<sub>1</sub> + n<sub>2</sub>②</li><li>所以B = n<sub>0</sub> + n<sub>1</sub> + n<sub>2</sub> - 1 ③所以 n<sub>0</sub> = B -  n<sub>1</sub> -  n<sub>2</sub> + 1④</li><li>又因为B = n<sub>1</sub>+2n<sub>2</sub>  代入④ n<sub>0</sub> = n<sub>1</sub> + 2n<sub>2</sub> -  n<sub>1</sub> -  n<sub>2</sub> + 1</li><li>得n<sub>0</sub> = n<sub>2</sub>+1</li></ul></li></ul><p>–（本文完）</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;二叉树的性质&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#二叉树的性质&quot;&gt;¶&lt;/a&gt;二叉树的性质&lt;/h4&gt;
&lt;h5 id=&quot;性质1：-层级-📝&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#性质1：-层级-📝&quot;&gt;¶&lt;/
      
    
    </summary>
    
      <category term="代码学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="学习总结" scheme="https://shuhaohwang.github.io/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
      <category term="数据结构" scheme="https://shuhaohwang.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="数据结构-学习总结" scheme="https://shuhaohwang.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>数据结构学习总结-（5.2）二叉树</title>
    <link href="https://shuhaohwang.github.io/2019/07/17/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%885-2%EF%BC%89%E4%BA%8C%E5%8F%89%E6%A0%91/"/>
    <id>https://shuhaohwang.github.io/2019/07/17/数据结构学习总结-（5-2）二叉树/</id>
    <published>2019-07-17T02:36:07.000Z</published>
    <updated>2019-07-17T03:01:21.748Z</updated>
    
    <content type="html"><![CDATA[<h4 id="二叉树-binary-tree"><a class="header-anchor" href="#二叉树-binary-tree">¶</a>二叉树(Binary Tree)</h4><ul><li><p>二叉树是一个连通的无环图，并且每一个顶点的度不大于3。有根二叉树还要满足根结点的度不大于2。</p></li><li><img src="/2019/07/17/数据结构学习总结-（5-2）二叉树/1.png"><ul><li>只有一个称为根的结点</li><li>除根外，其余结点分为不相交的子集T1和T2，分别称为T的左子树和右子树，且T1和T2本身又都是二叉树</li><li><img src="/2019/07/17/数据结构学习总结-（5-2）二叉树/2.png"></li></ul></li><li><p><strong>二叉树与树</strong>：</p></li><li><table><thead><tr><th>二叉树</th><th>树</th></tr></thead><tbody><tr><td>至多只有两个子树</td><td>没有限制子树的个数上限</td></tr><tr><td>子树有左右之分，其次序不能颠倒(有序树)</td><td>子树可有序也可以无序</td></tr><tr><td>具有递归性质</td><td>具有递归性质</td></tr></tbody></table></li></ul><hr><h4 id="二叉树的五中基本形态"><a class="header-anchor" href="#二叉树的五中基本形态">¶</a>二叉树的五中基本形态</h4><ul><li>空树</li><li>只有一个根结点的二叉树</li><li>只有左子树</li><li>只有右子树</li><li>完全二叉树</li></ul><img src="/2019/07/17/数据结构学习总结-（5-2）二叉树/3.png"><hr><h4 id="二叉树的优点"><a class="header-anchor" href="#二叉树的优点">¶</a>二叉树的优点</h4><ul><li>普通树相比二叉树代码很难实现</li><li>二叉树结构简单，规律性强</li><li>所有树都可以转为唯一对应的二叉树</li></ul><p>–（本文完）</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;二叉树-binary-tree&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#二叉树-binary-tree&quot;&gt;¶&lt;/a&gt;二叉树(Binary Tree)&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;二叉树是一个连通的无环图，并且每一个顶点的度不大于3
      
    
    </summary>
    
      <category term="代码学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="学习总结" scheme="https://shuhaohwang.github.io/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
      <category term="数据结构" scheme="https://shuhaohwang.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="数据结构-学习总结" scheme="https://shuhaohwang.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>数据结构学习总结-（5.1）树的定义及概念</title>
    <link href="https://shuhaohwang.github.io/2019/07/16/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%885-1%EF%BC%89%E6%A0%91%E7%9A%84%E5%AE%9A%E4%B9%89%E5%8F%8A%E6%A6%82%E5%BF%B5/"/>
    <id>https://shuhaohwang.github.io/2019/07/16/数据结构学习总结-（5-1）树的定义及概念/</id>
    <published>2019-07-16T12:34:49.000Z</published>
    <updated>2019-07-19T15:01:53.353Z</updated>
    
    <content type="html"><![CDATA[<h4 id="树"><a class="header-anchor" href="#树">¶</a>树</h4><h5 id="概念及定义"><a class="header-anchor" href="#概念及定义">¶</a>概念及定义</h5><ul><li><p>树是一个有层级结构的数据结构</p></li><li><p>定义：树是有n（n&gt;=0）个结点组成的有限集合</p><ul><li>如果n = 0 ，称为空树</li><li>如果n &gt; 0, 则：<ul><li>有一个特点的称之为为根(root)的结点，它只有直接后继，没有直接前驱。</li><li>除根以外的其他结点划分为m(m &gt;= 0)个互不相交的有限集合，T0、T1、…、Tm-1，每个集合又是一颗树，称为根的子树。和根有直接关系的结点分别是这些子树的根。</li></ul></li></ul></li><li><p>特点：每个结点有零个或多个子结点；没有父结点的结点称为根结点；每一个非根结点有且只有一个父结点；除了根结点外，每个子结点可以分为多个不相交的子树。</p></li><li><img src="/2019/07/16/数据结构学习总结-（5-1）树的定义及概念/1.png"></li></ul><h5 id="树结构与线性结构"><a class="header-anchor" href="#树结构与线性结构">¶</a>树结构与线性结构</h5><ul><li><p>线性结构：一对一</p></li><li><p>树结构：一对多</p></li><li><table><thead><tr><th>线性结构</th><th>树结构</th></tr></thead><tbody><tr><td>第一个元素(无前驱)</td><td>根结点(无前驱)</td></tr><tr><td>最后一个元素(无后继)</td><td>多个叶子结点(无后继)</td></tr><tr><td>其他数据元素(一个前驱、一个后继)</td><td>树中的其他结点(一个前驱、多个后继)</td></tr></tbody></table></li></ul><hr><h4 id="树结构的一些术语"><a class="header-anchor" href="#树结构的一些术语">¶</a>树结构的一些术语</h4><ul><li><strong>根</strong>：唯一没有双亲的结点，其他结点都有唯一的双亲<ul><li><img src="/2019/07/16/数据结构学习总结-（5-1）树的定义及概念/2.png"></li></ul></li><li><strong>结点的度</strong>：一个结点含有的子树的个数称为该结点的度<ul><li><img src="/2019/07/16/数据结构学习总结-（5-1）树的定义及概念/3.png"></li></ul></li><li><strong>树的度</strong>：树结构中，最大的结点的度称为树的度<ul><li><img src="/2019/07/16/数据结构学习总结-（5-1）树的定义及概念/3.png" title="树的度为3"></li></ul></li><li><strong>分支结点</strong>：度数不为0的结点<ul><li><img src="/2019/07/16/数据结构学习总结-（5-1）树的定义及概念/1.png" title="分支结点为D、E、J、F、G、A"></li></ul></li><li><strong>叶结点</strong>：度数为0的结点<ul><li><img src="/2019/07/16/数据结构学习总结-（5-1）树的定义及概念/1.png" title="叶结点为B、C、H、I、P、Q、K、L、M、N"></li></ul></li><li><strong>孩子结点/子结点</strong>：某个<u>结点</u>的子树的根<ul><li><img src="/2019/07/16/数据结构学习总结-（5-1）树的定义及概念/1.png" title="孩子结点为 J、F、G、E、D"></li></ul></li><li><strong>双亲结点/父节点</strong>：若一个结点含有子结点，则这个结点称为其子结点的父结点</li><li><strong>兄弟结点</strong>：同一个双亲结点的孩子结点之间互为兄弟结点</li><li><strong>结点的祖先</strong>：从根到该节点所经分支上的所有节点</li><li><strong>子孙</strong>：以某节点为根的子树中任一节点都称为该节点的子孙</li><li><strong>森林</strong>：多个数的集合<ul><li><img src="/2019/07/16/数据结构学习总结-（5-1）树的定义及概念/4.png"></li></ul></li><li><strong>子树森林</strong>：一个结点的所有子树构成的森林</li><li><strong>结点的深度</strong>：结点的祖先个数+1<ul><li><img src="/2019/07/16/数据结构学习总结-（5-1）树的定义及概念/5.png"></li></ul></li><li><strong>结点的高度</strong>：从结点到其子树叶结点经过的最大边数+1，叶结点的高度为1</li><li><strong>结点的层次</strong>：从根开始定义起，根为第1层，根的子节点为第2层，以此类推<ul><li><img src="/2019/07/16/数据结构学习总结-（5-1）树的定义及概念/7.png"></li></ul></li><li><strong>树的高度</strong>：高度最大的结点的高度<ul><li><img src="/2019/07/16/数据结构学习总结-（5-1）树的定义及概念/6.png"></li></ul></li><li><strong>树的深度</strong>：树中结点的最大层次或结点的最大深度</li><li><strong>堂兄弟结点</strong>：双亲在同一层的节点互为堂兄弟</li></ul><ul><li><strong>有序树</strong>：每个结点的子树有次序之分<ul><li><img src="/2019/07/16/数据结构学习总结-（5-1）树的定义及概念/8.png"></li></ul></li><li><strong>无序树</strong>：每个结点的子树没有次序之分<ul><li><img src="/2019/07/16/数据结构学习总结-（5-1）树的定义及概念/9.png"></li></ul></li></ul><hr><h4 id="树的类型"><a class="header-anchor" href="#树的类型">¶</a>树的类型</h4><h5 id="树的抽象数据类型"><a class="header-anchor" href="#树的抽象数据类型">¶</a>树的抽象数据类型</h5><ul><li>ADT Tree</li><li>DATA<ul><li>父子关系</li></ul></li><li>Operator<ul><li>Tree()     //初始化</li><li>Tree(definition) //从输入definition中创建树</li><li>Tree(const Tree &amp; T) //复制树</li><li>Node root() // 返回根结点</li><li>int depth()     //获得树的高度</li><li>int size()     //获得树的结点个数</li><li>Node parent(Node p)   //获得结点p的双亲</li><li>Node[] children§  //返回结点P的所有孩子</li><li>Node[] silbings(parent , p) //返回结点p的所有兄弟</li><li>Node find()    //查找结点</li><li>…</li></ul></li><li>endADT</li></ul><p>–（本文完）</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;树&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#树&quot;&gt;¶&lt;/a&gt;树&lt;/h4&gt;
&lt;h5 id=&quot;概念及定义&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#概念及定义&quot;&gt;¶&lt;/a&gt;概念及定义&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p
      
    
    </summary>
    
      <category term="代码学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="数据结构学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="学习总结" scheme="https://shuhaohwang.github.io/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
      <category term="数据结构" scheme="https://shuhaohwang.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="数据结构-学习总结" scheme="https://shuhaohwang.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>数据结构学习总结-（4.4.2）查询子串位置二-KMP算法[难点]</title>
    <link href="https://shuhaohwang.github.io/2019/07/14/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%884-4-2%EF%BC%89%E6%9F%A5%E8%AF%A2%E5%AD%90%E4%B8%B2%E4%BD%8D%E7%BD%AE%E4%BA%8C-KMP%E7%AE%97%E6%B3%95-%E9%9A%BE%E7%82%B9/"/>
    <id>https://shuhaohwang.github.io/2019/07/14/数据结构学习总结-（4-4-2）查询子串位置二-KMP算法-难点/</id>
    <published>2019-07-14T02:07:22.000Z</published>
    <updated>2019-07-14T02:46:24.592Z</updated>
    
    <content type="html"><![CDATA[<h4 id="简单-bf-算法的缺陷"><a class="header-anchor" href="#简单-bf-算法的缺陷">¶</a>简单(BF)算法的缺陷</h4><ul><li><strong>简单算法的实现</strong>📝：就让子串与主串进行<u>一个个</u>判断。<ul><li>例如 <code>“acdcda”</code>中找<code>“cda”</code>那么有：①c先与主串中的<code>‘a’</code>比较不匹配 主串后移、②c与主串中的<code>‘c‘</code>匹配，子串后移让d与主串中的<code>‘b’</code>比较。不匹配主串后移、③c与主串中的<code>‘d’</code>比较，匹配子串后移、④a与主串中的<code>‘c’</code>比较，不匹配,主串后移、⑤c与主串中的<code>‘d’</code>不匹配，主串后移、⑥c与子串中的<code>‘c’</code>匹配,子串后移，d与主串的下一个<code>‘d’</code>匹配，子串再后移，a与主串中的下一个<code>‘a’</code>匹配。找到，返回主串中第二个<code>‘c’</code>的位置。</li></ul></li><li><strong>发现问题​</strong>❗️：从上面可以看出，在③开始子串与已经比较过的主串字符又重新比较一次，从而大大的浪费了效率。</li></ul><hr><h4 id="kmp算法"><a class="header-anchor" href="#kmp算法">¶</a>KMP算法</h4><ul><li>正如上面所说的，简单算法，因为在最差的情况下，会进行大量的无意义的比较匹配。而KMP算法的发明者们便想：能否更加比较不匹配所给出的信息，跳过无意义的比较呢？这就是KMP算法的核心。</li></ul><p>–（本文未完）&lt;原创&gt;</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;简单-bf-算法的缺陷&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#简单-bf-算法的缺陷&quot;&gt;¶&lt;/a&gt;简单(BF)算法的缺陷&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;简单算法的实现&lt;/strong&gt;📝：就让子串与主串进行&lt;u&gt;一个个&lt;
      
    
    </summary>
    
      <category term="代码学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="数据结构学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="学习总结" scheme="https://shuhaohwang.github.io/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
      <category term="数据结构" scheme="https://shuhaohwang.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="数据结构-学习总结" scheme="https://shuhaohwang.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>数据结构学习总结-（4.4.1）查询子串位置算法一—简单算法</title>
    <link href="https://shuhaohwang.github.io/2019/07/14/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%884-4-1%EF%BC%89%E6%9F%A5%E8%AF%A2%E5%AD%90%E4%B8%B2%E4%BD%8D%E7%BD%AE%E7%AE%97%E6%B3%95%E4%B8%80%E2%80%94%E7%AE%80%E5%8D%95%E7%AE%97%E6%B3%95/"/>
    <id>https://shuhaohwang.github.io/2019/07/14/数据结构学习总结-（4-4-1）查询子串位置算法一—简单算法/</id>
    <published>2019-07-14T01:16:48.000Z</published>
    <updated>2019-07-14T02:20:06.086Z</updated>
    
    <content type="html"><![CDATA[<h4 id="简单-bf-算法的代码实现及思路"><a class="header-anchor" href="#简单-bf-算法的代码实现及思路">¶</a>简单(BF)算法的代码实现及思路</h4><ul><li><p>算法作用🔍：查找在给定的子串在主串中的位置。例如：子串<code>“llo”</code>在主串<code>“hello”</code>的位置为3。</p></li><li><p>实现思路💡：BF的算法的核心就是子串对主串逐一比较。所以只需用第一个循环来匹配子串的首字符与主串中的字符是否相等，如果相等那么在对子串后面的字符与此时主串的后面的字符进行比较。</p><ul><li>例如：要在<code>“AB CADB CADA BCA”</code>中查找子串<code>“ CADA”</code>则从主串A中第一个开始查找，因为<code>“A”</code>与<code>“ ”</code>不匹配所以子串与主串的下一个字符比较，但也不同所以后移，当到了第三个的时候开始匹配，所以主串的第四个字符与子串第二个比较…主串第五个与子串第三个比较…。但到了主串的第七个字符与子串第4个字符不一样，所以匹配失败，主串后移一位又与子串的第一位开始比较。</li></ul><hr><ul><li><img src="/2019/07/14/数据结构学习总结-（4-4-1）查询子串位置算法一—简单算法/2.png"></li></ul></li><li><p>具体实现💻:</p><ul><li><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(String str)</span> </span>&#123;</span><br><span class="line"> <span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line"> <span class="keyword">int</span> k = <span class="number">0</span>;</span><br><span class="line"> <span class="keyword">int</span> n = <span class="number">0</span>;</span><br><span class="line">       </span><br><span class="line"> <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; size &amp;&amp; j &lt; str.size; i++) &#123;</span><br><span class="line"> <span class="keyword">if</span> (<span class="keyword">this</span>-&gt;str[k] == str.str[j]) &#123;</span><br><span class="line"> j++;</span><br><span class="line"> k++;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">else</span> &#123;</span><br><span class="line"> </span><br><span class="line"> j = <span class="number">0</span>;</span><br><span class="line"> n++;</span><br><span class="line"> k = n;</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;</span><br><span class="line">       </span><br><span class="line"> <span class="keyword">if</span> (j &lt;= str.size)<span class="keyword">return</span> n;</span><br><span class="line"> <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></li><li><p>实验结果🔑: <img src="/2019/07/14/数据结构学习总结-（4-4-1）查询子串位置算法一—简单算法/1.png"></p></li></ul></li></ul><hr><h4 id="算法优化🔧："><a class="header-anchor" href="#算法优化🔧：">¶</a>算法优化🔧：</h4><ul><li><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(String ch)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i &lt; size &amp;&amp; j &lt; ch.size)&#123;</span><br><span class="line">        <span class="keyword">if</span>(str[i] == ch.str[j])&#123;</span><br><span class="line">            i++;</span><br><span class="line">            j++;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            i = i + <span class="number">1</span> - j;</span><br><span class="line">            j = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(j &lt;= ch.size) <span class="keyword">return</span> i - j;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>–（本文完）&lt;原创&gt;</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;简单-bf-算法的代码实现及思路&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#简单-bf-算法的代码实现及思路&quot;&gt;¶&lt;/a&gt;简单(BF)算法的代码实现及思路&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;算法作用🔍：查找在给定的子串在主串中的位置。例
      
    
    </summary>
    
      <category term="代码学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="数据结构学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="学习总结" scheme="https://shuhaohwang.github.io/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
      <category term="数据结构" scheme="https://shuhaohwang.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="数据结构-学习总结" scheme="https://shuhaohwang.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>数据结构学习总结-（4.3）实现字符串结构、相关操作代码和实现思路</title>
    <link href="https://shuhaohwang.github.io/2019/07/12/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%884-3%EF%BC%89%E5%AE%9E%E7%8E%B0%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%BB%93%E6%9E%84%E3%80%81%E7%9B%B8%E5%85%B3%E6%93%8D%E4%BD%9C%E4%BB%A3%E7%A0%81%E5%92%8C%E5%AE%9E%E7%8E%B0%E6%80%9D%E8%B7%AF/"/>
    <id>https://shuhaohwang.github.io/2019/07/12/数据结构学习总结-（4-3）实现字符串结构、相关操作代码和实现思路/</id>
    <published>2019-07-12T03:03:39.000Z</published>
    <updated>2019-07-12T08:26:54.392Z</updated>
    
    <content type="html"><![CDATA[<h4 id="字符串结构的实现"><a class="header-anchor" href="#字符串结构的实现">¶</a>字符串结构的实现</h4><ul><li><p>具体代码💻：</p><ul><li><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">String</span>&#123;</span></span><br><span class="line">    <span class="keyword">char</span>* str;<span class="comment">//字符串</span></span><br><span class="line">    <span class="keyword">int</span> size;<span class="comment">//字符串长度</span></span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">    String(<span class="keyword">const</span> <span class="keyword">char</span>* ch)&#123;</span><br><span class="line">        <span class="comment">/*计算ch长度*/</span></span><br><span class="line">        <span class="keyword">char</span>* temp = ch;</span><br><span class="line">        <span class="keyword">while</span>(*temp++ != <span class="string">'\0'</span>);</span><br><span class="line">        </span><br><span class="line">        str = <span class="keyword">new</span> <span class="keyword">char</span>[temp - ch];<span class="comment">//创建字符串</span></span><br><span class="line">        size = temp - ch - <span class="number">1</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= size; i++)str[i] = ch[i];    </span><br><span class="line">    &#125;</span><br><span class="line">    .......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>字符串是由字符数组来实现的,所以字符串的构造函数首先要根据<code>const char* ch</code>（传入的字符数组）求得其长度，然后创建足够大的空间，并对其逐一赋值即可完成<code>String</code>类型的创建。</p></li></ul></li></ul><hr><h4 id="相关简单操作的代码实现和实现思路"><a class="header-anchor" href="#相关简单操作的代码实现和实现思路">¶</a>相关简单操作的代码实现和实现思路</h4><ul><li><p>返回指定位置指定长度的子串 <code>subString()</code></p><ul><li><p>实现思路❗️：根据用户输入指定的长度来创建足够大的空间的<code>char* temp</code>用来储存子串，然后用循环从指定位置开始对<code>temp</code>进行赋值，直到长度达到用户给定的长度即可。<strong>并在后面补上一个结束符(’\0’)</strong>,因为这是一个主串中的子串，后尾赋值的时候没有结束符。最后丢入<code>String</code>类型的构造函数中，释放temp的空间，返回新的字符串。</p></li><li><p>具体代码💻：</p><ul><li><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">String <span class="title">subString</span><span class="params">(<span class="keyword">int</span> pos,<span class="keyword">int</span> len)</span></span>&#123;</span><br><span class="line">    <span class="keyword">char</span>* temp = <span class="keyword">new</span> <span class="keyword">char</span>[len+<span class="number">1</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>,k = pos; i &lt; len;i++,k++)&#123;<span class="comment">//对子串进行逐一赋值</span></span><br><span class="line">        temp[i] = <span class="keyword">this</span>-&gt;str[k];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    temp[len] = <span class="string">'\0'</span>;<span class="comment">//末尾补上结束符</span></span><br><span class="line">    <span class="function">String <span class="title">str</span><span class="params">(temp)</span></span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">delete</span>[] temp;<span class="comment">//释放堆空间</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> str;<span class="comment">//返回新的String</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>实验结果:<img src="/2019/07/12/数据结构学习总结-（4-3）实现字符串结构、相关操作代码和实现思路/1.png" title="以hello world为例"></p></li></ul></li></ul></li><li><p>重载运算符+=使其实现字符串的拼接</p><ul><li><p>实现思路❗️:拼接顾名思义，是把两个字符串连起来，所以定义一个<code>new_size</code>用来拼接后的字符串长度，只需分别求左右运算数的<code>size</code>相加即可。然后更加这个<code>new_size</code>长度定义一个新的字符串。之后先对左运算数，进行逐一赋值，然后在对右运算数进行赋值。即可完成拼接。</p></li><li><p>具体实现💻:</p><ul><li><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">String&amp; <span class="keyword">operator</span>+= (<span class="keyword">const</span> String&amp; str)&#123;</span><br><span class="line">    <span class="keyword">int</span> new_size = <span class="keyword">this</span>-&gt;size + str.size;</span><br><span class="line">    <span class="keyword">char</span>* temp = <span class="keyword">new</span> <span class="keyword">char</span>[new_size+<span class="number">1</span>];<span class="comment">//最后需要一个结束符所以+1</span></span><br><span class="line">    <span class="keyword">if</span>(!temp)<span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i &lt; <span class="keyword">this</span>-&gt;size)&#123;temp[i] = <span class="keyword">this</span>-&gt;str[i]&#125;;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>; k &lt;= str.size; k++,i++)&#123;</span><br><span class="line">        temp[i] = str[k];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">delete</span>[]<span class="keyword">this</span>-&gt;str;</span><br><span class="line">    str = temp;</span><br><span class="line">    size = new_size;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>实验结果: </p></li></ul></li></ul></li></ul><hr><h4 id="具体完成代码📜："><a class="header-anchor" href="#具体完成代码📜：">¶</a>具体完成代码📜：</h4><ul><li><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">String</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="keyword">char</span>* str;</span><br><span class="line"><span class="keyword">int</span> size;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line"><span class="comment">/*构造函数*/</span></span><br><span class="line">String(<span class="keyword">const</span> <span class="keyword">char</span>* str) &#123;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>* temp = str;</span><br><span class="line"><span class="keyword">while</span> (*temp++ != <span class="string">'\0'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">this</span>-&gt;str = <span class="keyword">new</span> <span class="keyword">char</span>[temp - str];</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">this</span>-&gt;str)<span class="keyword">throw</span> <span class="string">"内存分配失败"</span>;</span><br><span class="line">size = temp - str - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= size; i++)<span class="keyword">this</span>-&gt;str[i] = str[i];</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*返回指定位置指定长度的子串*/</span></span><br><span class="line"><span class="function">String <span class="title">subString</span><span class="params">(<span class="keyword">int</span> pos, <span class="keyword">int</span> len)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (pos &lt; <span class="number">0</span> || pos &gt;= size)<span class="keyword">throw</span> <span class="string">"指定位置超界"</span>;</span><br><span class="line"><span class="keyword">if</span> (pos + len &gt;= size)<span class="keyword">throw</span><span class="string">"待获取子串超界"</span>;</span><br><span class="line"><span class="keyword">char</span>* temp = <span class="keyword">new</span> <span class="keyword">char</span>[len + <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, k = pos; i &lt;= len ; i++, k++) &#123;</span><br><span class="line">temp[i] = <span class="keyword">this</span>-&gt;str[k];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">temp[len] = <span class="string">'\0'</span>;</span><br><span class="line"><span class="function">String <span class="title">str</span><span class="params">(temp)</span></span>;</span><br><span class="line"><span class="keyword">delete</span>[]temp;</span><br><span class="line"><span class="keyword">return</span> str;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*重载运算符+=*/</span></span><br><span class="line">String&amp; <span class="keyword">operator</span>+=(<span class="keyword">const</span> String&amp; str) &#123;</span><br><span class="line"><span class="keyword">int</span> new_size = <span class="keyword">this</span>-&gt;size + str.size;</span><br><span class="line"><span class="keyword">char</span>* temp = <span class="keyword">new</span> <span class="keyword">char</span>[new_size + <span class="number">1</span>];</span><br><span class="line"><span class="keyword">if</span> (!temp)<span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (i &lt; <span class="keyword">this</span>-&gt;size) &#123; temp[i] = <span class="keyword">this</span>-&gt;str[i]; i++; &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt;= str.size; k++, i++) &#123;</span><br><span class="line">temp[i] = str.str[k];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">delete</span>[] <span class="keyword">this</span>-&gt;str;</span><br><span class="line"><span class="keyword">this</span>-&gt;str = temp;</span><br><span class="line">size = new_size;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="function">String <span class="title">str</span><span class="params">(<span class="string">"hello world "</span>)</span></span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"原字符串为:"</span> &lt;&lt; str.str &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">String str2 = str.subString(<span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"其位置2开始长度为3的字串为 : "</span> &lt;&lt;str2.str &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="function">String <span class="title">str3</span><span class="params">(<span class="string">"ShuHao"</span>)</span></span>;</span><br><span class="line">str += str3;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; str.str &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>–（本文完）&lt;原创&gt;</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;字符串结构的实现&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#字符串结构的实现&quot;&gt;¶&lt;/a&gt;字符串结构的实现&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;具体代码💻：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;figure class=&quot;highlight c
      
    
    </summary>
    
      <category term="代码学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="数据结构学习" scheme="https://shuhaohwang.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="学习总结" scheme="https://shuhaohwang.github.io/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
      <category term="数据结构" scheme="https://shuhaohwang.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="数据结构-学习总结" scheme="https://shuhaohwang.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
</feed>
