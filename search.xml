<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[数据结构学习总结-（4.3）实现字符串结构、相关操作代码和实现思路]]></title>
    <url>%2F2019%2F07%2F12%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%884-3%EF%BC%89%E5%AE%9E%E7%8E%B0%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%BB%93%E6%9E%84%E3%80%81%E7%9B%B8%E5%85%B3%E6%93%8D%E4%BD%9C%E4%BB%A3%E7%A0%81%E5%92%8C%E5%AE%9E%E7%8E%B0%E6%80%9D%E8%B7%AF%2F</url>
    <content type="text"><![CDATA[字符串结构的实现 具体代码:computer:： 12345678910111213141516class String&#123; char* str;//字符串 int size;//字符串长度 public: String(const char* ch)&#123; /*计算ch长度*/ char* temp = ch; while(*temp++ != '\0'); str = new char[temp - ch];//创建字符串 size = temp - ch - 1; for(int i = 0; i &lt;= size; i++)str[i] = ch[i]; &#125; .......&#125; 字符串是由字符数组来实现的,所以字符串的构造函数首先要根据const char* ch（传入的字符数组）求得其长度，然后创建足够大的空间，并对其逐一赋值即可完成String类型的创建。 相关简单操作的代码实现和实现思路 返回指定位置指定长度的子串 subString() 实现思路:exclamation:：根据用户输入指定的长度来创建足够大的空间的char* temp用来储存子串，然后用循环从指定位置开始对temp进行赋值，直到长度达到用户给定的长度即可。并在后面补上一个结束符(‘\0’),因为这是一个主串中的子串，后尾赋值的时候没有结束符。最后丢入String类型的构造函数中，释放temp的空间，返回新的字符串。 具体代码:computer:： 1234567891011121314String subString(int pos,int len)&#123; char* temp = new char[len+1]; for(int i = 0,k = pos; i &lt; len;i++,k++)&#123;//对子串进行逐一赋值 temp[i] = this-&gt;str[k]; &#125; temp[len] = '\0';//末尾补上结束符 String str(temp); delete[] temp;//释放堆空间 return str;//返回新的String&#125; 实验结果: 重载运算符+=使其实现字符串的拼接 实现思路:exclamation::拼接顾名思义，是把两个字符串连起来，所以定义一个new_size用来拼接后的字符串长度，只需分别求左右运算数的size相加即可。然后更加这个new_size长度定义一个新的字符串。之后先对左运算数，进行逐一赋值，然后在对右运算数进行赋值。即可完成拼接。 具体实现:computer:: 1234567891011121314String&amp; operator+= (const String&amp; str)&#123; int new_size = this-&gt;size + str.size; char* temp = new char[new_size+1];//最后需要一个结束符所以+1 if(!temp)return *this; int i = 0; while(i &lt; this-&gt;size)&#123;temp[i] = this-&gt;str[i]&#125;; for(int k = 0; k &lt;= str.size; k++,i++)&#123; temp[i] = str[k]; &#125; delete[]this-&gt;str; str = temp; size = new_size;&#125; 实验结果: 具体完成代码:scroll:： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768#include&lt;iostream&gt;using namespace std;class String &#123;public: char* str; int size;public: /*构造函数*/ String(const char* str) &#123; const char* temp = str; while (*temp++ != '\0'); this-&gt;str = new char[temp - str]; if (!this-&gt;str)throw "内存分配失败"; size = temp - str - 1; for (int i = 0; i &lt;= size; i++)this-&gt;str[i] = str[i]; &#125; /*返回指定位置指定长度的子串*/ String subString(int pos, int len) &#123; if (pos &lt; 0 || pos &gt;= size)throw "指定位置超界"; if (pos + len &gt;= size)throw"待获取子串超界"; char* temp = new char[len + 1]; for (int i = 0, k = pos; i &lt;= len ; i++, k++) &#123; temp[i] = this-&gt;str[k]; &#125; temp[len] = '\0'; String str(temp); delete[]temp; return str; &#125; /*重载运算符+=*/ String&amp; operator+=(const String&amp; str) &#123; int new_size = this-&gt;size + str.size; char* temp = new char[new_size + 1]; if (!temp)return *this; int i = 0; while (i &lt; this-&gt;size) &#123; temp[i] = this-&gt;str[i]; i++; &#125; for (int k = 0; k &lt;= str.size; k++, i++) &#123; temp[i] = str.str[k]; &#125; delete[] this-&gt;str; this-&gt;str = temp; size = new_size; &#125; &#125;;int main() &#123; String str("hello world "); cout &lt;&lt; "原字符串为:" &lt;&lt; str.str &lt;&lt; endl; String str2 = str.subString(2, 3); cout &lt;&lt; "其位置2开始长度为3的字串为 : " &lt;&lt;str2.str &lt;&lt; endl; String str3("ShuHao"); str += str3; cout &lt;&lt; str.str &lt;&lt; endl;&#125; –（本文完）&lt;原创&gt;]]></content>
      <categories>
        <category>代码学习</category>
        <category>数据结构学习</category>
      </categories>
      <tags>
        <tag>学习总结</tag>
        <tag>数据结构</tag>
        <tag>数据结构-学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[C++进阶学习总结-（2.2）类中的static函数/成员变量、类函数const后缀、mutable]]></title>
    <url>%2F2019%2F07%2F12%2FC-%E8%BF%9B%E9%98%B6%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%882-2%EF%BC%89%E7%B1%BB%E4%B8%AD%E7%9A%84static%E5%87%BD%E6%95%B0-%E6%88%90%E5%91%98%E5%8F%98%E9%87%8F%E3%80%81%E7%B1%BB%E5%87%BD%E6%95%B0const%E5%90%8E%E7%BC%80%E3%80%81mutable%2F</url>
    <content type="text"><![CDATA[此文章是加密文章，请输入密码后查看. Incorrect Password! No content to display! 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]]></content>
      <categories>
        <category>代码学习</category>
        <category>C++学习</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>学习总结</tag>
        <tag>C++学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据结构学习总结-（4.2）实现字符串strlen和strcpy]]></title>
    <url>%2F2019%2F07%2F10%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%884-2%EF%BC%89%E5%AE%9E%E7%8E%B0%E5%AD%97%E7%AC%A6%E4%B8%B2strlen%E5%92%8Cstrcpy%2F</url>
    <content type="text"><![CDATA[实现字符串中的简单操作一strlen() 作用：返回字符串的长度 实现思路：因为在c/c++中字符串是以char*指针来实现的，并且这些字符串中的末尾都有一个‘\0’结束符，所以在c/c++中可以利用指针和地址来求得字符串的长度，首先定义一个临时指针然后用待求字符串长度的字符串对其进行赋值，再用循环对这个临时指针进行自加移动，当判断在某个地址中的数据为‘\0’结束符的时候，再让其与原来的字符串相减，即可得到字符串的长度。 具体实现: 123456int strlen(const char* str)&#123; const char* temp = str; while(*temp != '\0')&#123;temp++;&#125; return temp - str;&#125; 实验结果: strcpy() 作用：进行字符串复制操作 实现思路：因为这个函数本身是实现复制操作，所以可以用原字符串对目标字符串进行逐一赋值即可实现。用一个临时指针存储目标字符串，然后用原字符串对这个临时指针进行逐一修改赋值，然后返回目标字符串即可。 具体实现: 123456char* strcpy(char* p,const char* s)&#123; char* temp = p; while((*temp++ = *s++) != 0); return p&#125; 实验结果: 错误记录：在编写strcpy()时，忘记了char*p是一个指针，结果直接运用循环对其进行自加移动赋值修改，然后再返回该指针。 错误代码: 12345char* strcpy(char* p , const char* s)&#123; while((*p++ = *s++) != 0); return p;&#125; 实验结果: 错误总结:上述错误代码中，因为p是一个指针，在循环的时候虽然是进行了逐一修改赋值，但指针也随之移动了，所以结果s不再是指向该字符串的首字符地址，而是指向了未知的末尾地址，从而造成指针p变成野指针。返回的结果也就想当然的是乱码了。 –（本文完）&lt;原创&gt;]]></content>
      <categories>
        <category>代码学习</category>
        <category>数据结构学习</category>
      </categories>
      <tags>
        <tag>学习总结</tag>
        <tag>数据结构</tag>
        <tag>数据结构-学习总结</tag>
        <tag>错误记录</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据结构学习总结-(4.1)字符串]]></title>
    <url>%2F2019%2F07%2F10%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-4-1-%E5%AD%97%E7%AC%A6%E4%B8%B2%2F</url>
    <content type="text"><![CDATA[(字符)串类型定义及概念串的一些概念 以(&quot;Hello world&quot;)为例 主串：即整个字符串被称为主串。 str = “Hello World”；str就是主串 子串：在主串中的一小段。(顺序相同) &quot;llo&quot;是主串“Hello World”的字串、“eH”不是该主串的字串(顺序错了) 位置：某个字符、或字符段的第一个字符位于主串的位置下标。 例如字串“llo”在主串&quot;Hello World&quot;的位置为3 串相等：当两个字符串之间，完全相同(长度相同，每个字符相同且位置相同)称为两个串相等 ”hello world“与“Hello World”不相等(字符不相等) 空串：串长度为为0的字符串被称为空串。 注意：空串与空格串不一样，空格串中的空格也算一个字符长度 串的抽象数据类型 ADT String Data：字符序列，以c/c++为例，char*类型数据，字符序列 Operation： bool init(T,char*) //初始化一个字符串 int find(S ,T) //查找字符串中是否存在字串 String strcat(T , S) //拼接字符串 String subStr(S,pos,size) //将s中的pos位置开始size长度的字串获取 bool inserStr(s,pos,T) //将T插入到s的pos位置 bool deleteStr(S,pos,size) //将S的pos位置开始的size长度的字串删除 bool copy(T,S) //将S拷贝给T int size() //获得字符串长度 void clear() //清空字符串 ……. endADT –（本文完）&lt;原创&gt;]]></content>
      <categories>
        <category>代码学习</category>
        <category>数据结构学习</category>
      </categories>
      <tags>
        <tag>学习总结</tag>
        <tag>数据结构</tag>
        <tag>数据结构-学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[C++进阶学习总结-（2.1）类与构造函数]]></title>
    <url>%2F2019%2F07%2F08%2FC-%E8%BF%9B%E9%98%B6%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%882-1%EF%BC%89%E7%B1%BB%E4%B8%8E%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%2F</url>
    <content type="text"><![CDATA[此文章是加密文章，请输入密码后查看. Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>代码学习</category>
        <category>C++学习</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>学习总结</tag>
        <tag>C++学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据结构学习总结-（3.5）顺序存储结构队列]]></title>
    <url>%2F2019%2F07%2F06%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%883-5%EF%BC%89%E9%A1%BA%E5%BA%8F%E9%98%9F%E5%88%97%2F</url>
    <content type="text"><![CDATA[顺序队列算法即实现思路顺序储存结构的队列定义(以char类型为例) 实现思路：因为顺序队列是要基于数组来实现队列的操作，所以可以定义两个数值头数值(front)和尾数值(rear)，在创建队列的时候根据capacity(队列容量)的大小创建线性表，然后让头数值和尾数值都为0代表数组下标为0的第一个数据的位置，入队时对rear进行操作移动即可实现，出队只需移动front即可完成出队。 12345678910111213class SqQueue&#123; char* datas;//线性表 int capacity;//队列容量 int front;//队首 int rear;//队尾 public: SqQueue(int c)&#123; capacity = c; datas = new char[capacity]; front = rear = 0; &#125; &#125; 顺序队列 入队操作 思路：因为顺序队列是要通过数组来实现队列的数据结构。所以可以先定义两个值分别代表尾数值和头数值，创建队列时，这头尾两个数值均为0，代表为数组第一个元素。入队时只需让下标为尾数值的数组元素进行添值即可。 具体实现： 1234567bool push(T e)&#123; if(rear == capacity) return false; datas[rear] = e; rear++; return true;&#125; 出队操作 思路：直接让头数值进行自加即可实现出队操作 具体实现： 123bool pop()&#123; front++;&#125; 出现一个问题:前面只是实现了基本的队列应该有的操作，如果对其进行出队操作，一定量的数据出队后会照成队列无法使用的情况。为此可以对顺序队列进行改造优化使它成为环状的顺序队列从而可以循环使用。 循环队列 入队操作： 思路：相比顺序队列，循环队列在入队操作时只是对尾数值进行改进使其只能在队列容量之内循环变化。即：rear = (rear+1)%capacity 算法解释：(以容量为5的队列为例) 第一步：push入队一个元素rear让其从初值0加1再取模5【(0+1)%5 = 1%5 = 1】以此类推，第二个数据入队，rear为2….第四个为4。 第二步：当到达尾数值即下标为4的时候再进行上方的运算。即【(4+1)%5 = 5%5=0】重置尾数值为0。 具体实现： 1234567bool push(T e)&#123; if((rear+1)%capacity == front)//满队判断 return false; datas[rear] = e; rear = (rear+1)%capacity; return true;&#125; 满队的处理：这里是用(rear+1)%capacity == front来作为满队判断的，即队首和队尾都只隔了1。例如：当队首为3，队尾为2为满队。因为(2+1)%5 = 3%5 = 3 出队操作 思路：与顺序队列相同，只是队头也要控制在capacity队列容量之内，即front = (front + 1)% capacity。 具体实现： 123456bool pop()&#123; if(front == rear)//空队判断 return false front = (front + 1)% capacity; return true;&#125; 具体代码实现：1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374#include&lt;iostream&gt;using namespace std;template&lt;typename T&gt; class SqQueue &#123; T* datas; int capacity; int rear; int front;public: /*构造函数*/ SqQueue(int c = 10) &#123; capacity = c; datas = new T[capacity]; rear = front = 0; &#125; /*入队操作*/ bool push(T e) &#123; if ((rear + 1) % capacity == front) return false; datas[rear] = e; rear = (rear+1)%capacity; return true; &#125; /*出队操作*/ bool pop() &#123; if (rear == front) return false; front = (front + 1) % capacity; &#125; void tr(void(*fb)(T&amp; e)) &#123; for (int i = front; i &lt; rear; i++) &#123; fb(datas[i]); &#125; &#125;&#125;;void Print(char&amp; a) &#123; cout &lt;&lt; a &lt;&lt; " ";&#125;int main() &#123; SqQueue&lt;char&gt; s; cout &lt;&lt; "数据a入队了" &lt;&lt; endl; s.push('a'); s.tr(Print); cout &lt;&lt; endl; cout &lt;&lt; "数据b入队了" &lt;&lt; endl; s.push('b'); s.tr(Print); cout &lt;&lt; endl; cout &lt;&lt; "数据c入队了" &lt;&lt; endl; s.push('c'); s.tr(Print); cout &lt;&lt; endl; cout &lt;&lt; "数据d入队了" &lt;&lt; endl; s.push('d'); s.tr(Print); cout &lt;&lt; endl; cout &lt;&lt; "数据e入队了" &lt;&lt; endl; s.push('e'); s.tr(Print); cout &lt;&lt; endl; cout &lt;&lt; "头数据出队了 " &lt;&lt; endl; s.pop(); s.tr(Print); cout &lt;&lt; endl; cout &lt;&lt; "头数据出队了 " &lt;&lt; endl; s.pop(); s.tr(Print); cout &lt;&lt; endl; cout &lt;&lt; "头数据出队了 " &lt;&lt; endl; s.pop(); s.tr(Print); cout &lt;&lt; endl; cout &lt;&lt; "头数据出队了 " &lt;&lt; endl; s.pop(); s.tr(Print); cout &lt;&lt; endl; cout &lt;&lt; "头数据出队了 " &lt;&lt; endl; s.pop(); s.tr(Print); cout &lt;&lt; endl;&#125; 实验结果: –（本文完）&lt;原创&gt;]]></content>
      <categories>
        <category>代码学习</category>
        <category>数据结构学习</category>
      </categories>
      <tags>
        <tag>学习总结</tag>
        <tag>数据结构</tag>
        <tag>数据结构-学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[C++进阶学习总结-(1.7)数据类型转换]]></title>
    <url>%2F2019%2F07%2F04%2FC%2B%2B%E8%BF%9B%E9%98%B6%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-(1.7)%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2%2F</url>
    <content type="text"><![CDATA[此文章是加密文章，请输入密码后查看. Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>代码学习</category>
        <category>C++学习</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>学习总结</tag>
        <tag>C++学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据结构学习总结-（3.4）队列及链式队列的实现]]></title>
    <url>%2F2019%2F07%2F03%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%883-4%EF%BC%89%E9%98%9F%E5%88%97%2F</url>
    <content type="text"><![CDATA[队列的基本概念及定义 定义： 队列与栈相似，相比栈的先进后出，队列是先进先出为特征的，队列的增添必须是在队列后边进行添加，删除则在前面，正与它的名字一样，队列这种数据结构跟平常时人们买票排队一样，先去排的会先买到票，后面来的只能先排着队。 特征：先进先出(FIFO,First In First Out) 队列的抽象数据类型 ADT Queue Data 线性关系(a1,a2,…,an) Operation bool push(e) 入队操作 bool pop() 出队 T&amp;front() 获得队首数据 bool empty() 判断队列是否为空 void clear() 清空队列 …….. 链式队列实现算法及思路 入队操作 * 思路：因为队列是先进先出的，所以要使一个指针能始终能指向新进来的元素，方便后续出队操作。所以可以先让尾指针的next指针指向这个新入队的元素，然后再让尾指针指向这个元素。 具体代码实现: 123456789101112bool push(T e)&#123; Node* p = new Node; if(!p)return false; p-&gt;data = e; p-&gt;next = nullptr; rear-&gt;next = p; rear = p; return true&#125; 出队操作 思路：先进先出，此时可以直接删除第一个数据，即头结点next指向的数据。但要记住这操作不能在队列为空的情况下使用。 具体代码实现： 1234567891011bool pop()&#123; if(rear == head) return false; Node* p = head-&gt;next; head-&gt;next = p-&gt;next; delete p; return true; &#125; 具体代码实现情况： 入队(完成) push(T e) 出队(完成) pop() 是否为空(完成) IsEmpty(); 获得队首元素(完成) getFirst() 清空队列(完成) clear() 具体代码：123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131#include&lt;iostream&gt;using namespace std;template&lt;typename T&gt;class Queue &#123; struct Node &#123; T data; Node* next; &#125;; Node* head; Node* rear;public: Queue() &#123; head = new Node; head-&gt;next = nullptr; rear = head; &#125; /*入队操作*/ bool push(T e) &#123; Node* p = new Node; p-&gt;data = e; p-&gt;next = nullptr; rear-&gt;next = p; rear = p; return true; &#125; /*出队操作*/ bool pop() &#123; if (head == rear) return false; Node* p = head-&gt;next; head-&gt;next = p-&gt;next; delete p; return true; &#125; /*是否为空*/ bool IsEmpty() &#123; return head == rear; &#125; /*获得首元素*/ T getFirst() &#123; return head-&gt;next; &#125; /*清空队列*/ bool clear() &#123; Node* p = head-&gt;next; Node* q = nullptr; while (p != rear) &#123; q = p; p = p-&gt;next; delete q; &#125; delete rear; rear = head; return true; &#125; void Ta(void(*fb)(T&amp; e)) &#123; Node* p = head; while (p != rear) &#123; p = p-&gt;next; fb(p-&gt;data); &#125; &#125;&#125;;template &lt;typename T&gt; void print(T&amp; e) &#123; cout &lt;&lt; e &lt;&lt; " ";&#125;int main() &#123; Queue&lt;char&gt; q; cout &lt;&lt; "a数据进队了" &lt;&lt; endl; q.push('a'); q.Ta(print); cout &lt;&lt; endl; cout &lt;&lt; "b数据进队了" &lt;&lt; endl; q.push('b'); q.Ta(print); cout &lt;&lt; endl; cout &lt;&lt; "c数据进队了" &lt;&lt; endl; q.push('c'); q.Ta(print); cout &lt;&lt; endl; cout &lt;&lt; "d数据进队了" &lt;&lt; endl; q.push('d'); q.Ta(print); cout &lt;&lt; endl; cout &lt;&lt; "清空队列" &lt;&lt; endl; q.clear(); cout &lt;&lt; "e数据进队了" &lt;&lt; endl; q.push('e'); q.Ta(print); cout &lt;&lt; endl; cout &lt;&lt; "f数据进队了" &lt;&lt; endl; q.push('f'); q.Ta(print); cout &lt;&lt; endl; cout &lt;&lt; "g数据进队了" &lt;&lt; endl; q.push('g'); q.Ta(print); cout &lt;&lt; endl; cout &lt;&lt; "h数据进队了" &lt;&lt; endl; q.push('h'); q.Ta(print); cout &lt;&lt; endl; cout &lt;&lt; "首数据出队了" &lt;&lt; endl; q.pop(); q.Ta(print); cout &lt;&lt; endl; cout &lt;&lt; "首数据出队了" &lt;&lt; endl; q.pop(); q.Ta(print); cout &lt;&lt; endl; cout &lt;&lt; "首数据出队了" &lt;&lt; endl; q.pop(); q.Ta(print); cout &lt;&lt; endl;&#125; 实验结果: –（本文完）&lt;原创&gt;]]></content>
      <categories>
        <category>代码学习</category>
        <category>数据结构学习</category>
      </categories>
      <tags>
        <tag>学习总结</tag>
        <tag>数据结构</tag>
        <tag>数据结构-学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[栈的应用-括号匹配]]></title>
    <url>%2F2019%2F07%2F02%2F%E6%A0%88%E7%9A%84%E5%BA%94%E7%94%A8-%E6%8B%AC%E5%8F%B7%E5%8C%B9%E9%85%8D%2F</url>
    <content type="text"><![CDATA[括号匹配 对一段字符串进行检查和判断括号是否匹配。例如：{（）[]{}} 匹配。即出现一个左括号就一定要一个相对应的右括号与其匹配。 实现思路：可以对一个字符串进行扫描和检查，如果是左括号那么就入栈，如果遇到一个与之匹配的右括号，那么就使其出栈。最后判断栈是否为空从而判断括号是否匹配即可。 以（{heheda}[123]())为例。 第一步扫描上方字符串。发现第一个左括号‘(’使其入栈，第二个&#39;{&#39;入栈，发现&#39;}&#39;为右括号，与栈顶数据进行匹配发现，此时栈顶就是&#39;{&#39;与之匹配那么就出栈。（类似消消乐） 具体代码实现：1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556#include"LKStack.h"#include&lt;iostream&gt;bool CheckStr(string str) &#123; LkStack&lt;char&gt; stack; cout &lt;&lt; "字符串：" &lt;&lt; str &lt;&lt; " "; for (int i = 0; i &lt; str.length(); i++) &#123; /*如果是左括号那么就入栈，等待匹配*/ if (str[i] == '[' || str[i] == '&#123;' || str[i] == '(') &#123; stack.push_back(str[i]); &#125; /*如果是右括号那么就对栈顶数据进行判断，如果匹配那么就使此时的栈顶数据出栈*/ if (str[i] == ']' || str[i] == '&#125;' || str[i] == ')') &#123; /*排除只出现右括号没出现左括号的情况，和多出有右括号的情况*/ if (stack.isEmpty()) &#123; cout &lt;&lt; "括号不匹配！" &lt;&lt; endl; return false; &#125; if (!stack.isEmpty() &amp;&amp; str[i] == ']' &amp;&amp; stack.GetTop() == '[') stack.pop(); if (!stack.isEmpty() &amp;&amp; str[i] == '&#125;' &amp;&amp; stack.GetTop() == '&#123;') stack.pop(); if (!stack.isEmpty()&amp;&amp; str[i] == ')' &amp;&amp; stack.GetTop() == '(') stack.pop(); &#125;&#125; /*如果空栈那么就说明左括号全部匹配完毕，括号匹配成功，反之括号不匹配*/ if (stack.isEmpty()) &#123; cout &lt;&lt; "括号匹配成功！" &lt;&lt; endl; return true; &#125; else &#123; cout &lt;&lt; "括号不匹配！" &lt;&lt; endl; return false; &#125; &#125;int main() &#123; CheckStr("12312()()[]&#123;&#123;&#125;&#125; "); CheckStr("&#125;"); CheckStr("[()(),hello&#123;&#125;]"); CheckStr("test"); CheckStr("()(&#125;[]");&#125; 实验结果： –（本文完）&lt;原创&gt;]]></content>
      <categories>
        <category>数据结构</category>
      </categories>
      <tags>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[算法性能分析]]></title>
    <url>%2F2019%2F07%2F02%2F%E7%AE%97%E6%B3%95%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90%2F</url>
    <content type="text"><![CDATA[算法性能分析好的算法应当满足 正确性：算法应能满足具体问题的需求 可读性：算法应应易于阅读和理解 健壮性：输入数据非法时，算法也能适当作出反应或进行处理 高效性：算法执行时间短，占用存储空间少 时间复杂度 程序：算法在计算机上的实现 程序的执行时间取决于如下因素： 算法本身 问题规模 编程语言 硬件性能 选择一个“基本操作”，分析基本操作执行的次数 用该基本操作的重复次数表示算法的执行时间，一般为问题规模n的函数f(n)，简称“频度”。 算法的时间复杂度为：和f(n)同阶的简化无穷大量T(n) = O(f(n))]]></content>
      <categories>
        <category>代码学习</category>
        <category>数据结构学习</category>
      </categories>
      <tags>
        <tag>数据结构</tag>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[链表应用- 两数相加]]></title>
    <url>%2F2019%2F06%2F29%2F%E9%93%BE%E8%A1%A8%E5%BA%94%E7%94%A8-%E4%B8%A4%E6%95%B0%E7%9B%B8%E5%8A%A0%2F</url>
    <content type="text"><![CDATA[两数相加 问题： 给定两个非空链表来表示两个非负整数。位数按照逆序方式储存，它们的每个节点只存储单个数字。将两数相加返回一个新的链表。你可以假设除了数字0之外，这两个数字都不会以零开头。 示例： 输入：(2 -&gt; 4 -&gt; 3) + (5 -&gt; 6 -&gt; 4) 输出: 7 -&gt; 0 -&gt; 8 原因: 342 + 465 = 807 一些算法的思路： 先把一个数字转换为一个链表 243 转换为 2 -&gt; 4 -&gt; 3 所以先用一个 将数字转换为链表的函数 12345678Lklist ToLKlist(int r) &#123; Lklist stack; while (r) &#123; stack.push(r % 10); r /= 10; &#125; return stack;&#125; 实现思路：对进来的数字，直接模10取个位，然后后插入一个链表中，然后取十位……以此类推直到把所以值都后插入链表中。 转换数字后就会得到两个链表。然后进行相加。相加时得实现把链表转换成数字，例如 2 -&gt; 4 -&gt; 3转换成数字342。 123456789101112int number(Lklist num) &#123; int result = 0; int len = num.Getlength(); int i = 1; while (!num.IsEmpty()) &#123; result += num.getfirst() * i; num.deletefirst(); i *= 10; &#125; return result;&#125; 实现思路：因为获得的数字链表是2 -&gt; 4 -&gt; 3，而实际对应的数字是342，所以可以先把第一个个位数字获得，加上十位，百位。 最后一步把相加的结果再ToLKlist()用变为链表。 具体实现:123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133#include&lt;iostream&gt;using namespace std;class Lklist &#123; struct LNode &#123; int data; LNode* next; &#125;; LNode* head; int length;public: Lklist() &#123; head = new LNode; head-&gt;next = nullptr; length = 0; &#125; /*前插操作*/ bool push(int e) &#123; LNode* p = new LNode; if (!p)return false; p-&gt;data = e; p-&gt;next = head-&gt;next; head-&gt;next = p; length++; return true; &#125; /*后插操作*/ bool push_back(int e) &#123; LNode* p = head; LNode* q = new LNode(); int j = 0; while (p-&gt;next) &#123; p = p-&gt;next; &#125; if (!p)return false; q-&gt;data = e; q-&gt;next = 0; p-&gt;next = q; length++; return true; &#125; /*删除第一个数据操作*/ bool deletefirst() &#123; if (!head-&gt;next) return false; LNode* p = head-&gt;next-&gt;next; delete head-&gt;next; head-&gt;next = p; length--; return true; &#125; /*获得第一个元素*/ int getfirst() &#123; return head-&gt;next-&gt;data; &#125; /*判断是否为空链表*/ bool IsEmpty() &#123; return head-&gt;next == nullptr; &#125; /*获得链表长度*/ int Getlength() &#123; return length; &#125;&#125;;/*转换为数字*/int number(Lklist num) &#123; int result = 0; int len = num.Getlength(); int i = 1; while (!num.IsEmpty()) &#123; result += num.getfirst() * i; num.deletefirst(); i *= 10; &#125; return result;&#125;/*数字转换为链表*/Lklist ToLKlist(int r) &#123; Lklist stack; while (r) &#123; stack.push(r % 10); r /= 10; &#125; return stack;&#125;/*两数相加核心代码*/Lklist TwoNumberAdd(Lklist num1, Lklist num2) &#123; int a = number(num1); int b = number(num2); return ToLKlist(a + b);&#125;int main() &#123; int a; int b; Lklist s; cout &lt;&lt; "请输入第一个数： "; cin &gt;&gt; a; cout &lt;&lt; endl &lt;&lt; "请输入第二个数： "; cin &gt;&gt; b; s = TwoNumberAdd(ToLKlist(a), ToLKlist(b)); int i = 0; int len = s.Getlength(); while (!s.IsEmpty()) &#123; cout &lt;&lt; s.getfirst(); if (i &lt; len - 1) &#123; cout &lt;&lt; "-&gt;"; i++; &#125; s.deletefirst(); &#125;&#125; 实验结果: 标准参考答案：1234567891011121314151617181920212223242526272829303132333435363738394041424344class Solution &#123;public : ListNode* addTwoNumber(ListNode* l1, ListNode* l2) &#123; int x = 0; int y = 0; int carry = 0; int sum = 0; ListNode* h = nullptr; ListNode** t = &amp;h; while (l1!=nullptr||l2!=nullptr) &#123; x = getValueAndMoveNext(l1); y = getValueAndMoveNext(l2); sum = carry + x + y; ListNode* node = new ListNode(sum % 10); *t = node; t = (&amp;node-&gt;next); carry = sum / 10; &#125; if (carry &gt; 0) &#123; ListNode* node = new ListNode(carry % 10); *t = node; &#125; return h;&#125;private: int getValueAndMoveNext(ListNode*&amp; l) &#123; int x = 0; if (l != nullptr) &#123; x = l-&gt;val; l = l-&gt;next; &#125; return x; &#125;&#125;; 参考答案的核心算法思路： ListNode* addTwoNumber(ListNode* l1, ListNode* l2) 这步先把两个链表的第一个元素取出存入X和Y中，然后让其想加并加上一个进位carry数。以(2 -&gt; 4 -&gt; 3) + (5 -&gt; 6 -&gt; 4)为例。 第一步： 取出两个链表中的第一个元素2和5。 第二步： 让其相加并加上一个进位数即sum = carry(此时为0) + 2 + 5 = 7 第三步： 把结果7模上10并push_back进结果链表。此时结果为7并且是结果链表的第一个数据 然后重置进位carry即：carry = sum / 10,因为2 + 5 = 7小于10所以不用进位。 第四步： 循环上面的步骤 第二次循环中4和6的和是10，模上10取余后的结果为0，push_back进结果链表作为第二个数据 因为10是大于等于10的，所以要进位，故进行carry = sum / 10时，carry结果会为1作为下一次循环，sum = carry + x + y中的进位 总体来看，首先因为题目描述为 位数按照逆序方式储存，所以这里运用了普通加法运算。即：从个位开始相加，满10进1至下位的思路。 个人实现代码优化后：123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596#include&lt;iostream&gt;using namespace std;class LKlist &#123;public: struct LNode &#123; int data; LNode* next; &#125;; LNode* head; int length;public: LKlist() &#123; head = new LNode(); head-&gt;next = nullptr; length = 0; &#125; bool push_back(int e) &#123; LNode* p = new LNode; LNode* t = head; p-&gt;data = e; while (t-&gt;next) &#123; t = t-&gt;next; &#125; t-&gt;next = p; p-&gt;next = nullptr; length++; return true; &#125; bool IsEmpty() &#123; return head-&gt;next == nullptr; &#125; bool deletefirst() &#123; if (!head-&gt;next) return false; LNode* p = head-&gt;next-&gt;next; delete head-&gt;next; head-&gt;next = p; length--; return true; &#125; int getfirst() &#123; return head-&gt;next-&gt;data; &#125; int Getlength()&#123; return length; &#125;&#125;;int getValueAndMoveNext(LKlist&amp; l) &#123; int x = 0; LKlist::LNode* T; if (l.head-&gt;next) &#123; x = l.head-&gt;next-&gt;data; T = l.head-&gt;next-&gt;next; delete l.head-&gt;next; l.head-&gt;next = T; &#125; return x;&#125;LKlist addTwoNumber(LKlist&amp; l1, LKlist&amp; l2) &#123; int x = 0; int y = 0; int sum = 0; int carry = 0; LKlist h; while (!l1.IsEmpty() || !l2.IsEmpty()) &#123; x = getValueAndMoveNext(l1); y = getValueAndMoveNext(l2); sum = carry + x + y; h.push_back(sum % 10); carry = sum / 10; &#125; if (carry &gt; 0) &#123; h.push_back(carry % 10); &#125; return h;&#125; 实验结果: –（本文完）&lt;原创&gt;]]></content>
      <categories>
        <category>数据结构</category>
      </categories>
      <tags>
        <tag>数据结构</tag>
        <tag>链表</tag>
        <tag>算法题</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[栈的应用-进制的转换]]></title>
    <url>%2F2019%2F06%2F29%2F%E6%A0%88%E7%9A%84%E5%BA%94%E7%94%A8-%E8%BF%9B%E5%88%B6%E7%9A%84%E8%BD%AC%E6%8D%A2%2F</url>
    <content type="text"><![CDATA[数制转换 以十进制转八进制为例，十进制转八进制的时候是把十进制模8取其余数直至除尽，最终结果为余数从下到上的数。 例如： 结合数据结构栈，可以发现转换最终结果跟栈的出栈一样，所以用栈来实现十进制的转换就较为方便 123456789101112void changeNumber(int n,int b)&#123;//n为十进制数，b为将要转的进制数 Stack&lt;int&gt; stack；//定义一个栈 while(n)&#123; stack.push(n%b);//获取余数并入栈 n = n/b;//更新n &#125; while(!stack.isEmpty())&#123;//出栈并输出。直至为空栈 cout &lt;&lt; stack.getTop();//获得栈顶元素 stack.pop();//每输出一个就出栈一个数据 &#125; &#125; 代码实现:123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081#include&lt;iostream&gt;using namespace std;/***********链栈实现************/template&lt;typename T&gt;class Stack &#123; struct LNode &#123; T data; LNode* next; &#125;; LNode* head;public: Stack() &#123; head = new LNode; head-&gt;next = nullptr; &#125; /*入栈操作*/ bool push(T e) &#123; LNode* p = new LNode; if (!p)return false; p-&gt;data = e; p-&gt;next = head-&gt;next; head-&gt;next = p; return true; &#125; /*出栈操作*/ bool pop() &#123; if (!head-&gt;next) return false; LNode* p = head-&gt;next-&gt;next; delete head-&gt;next; head-&gt;next = p; return true; &#125; /*获得栈顶元素*/ T getTop() &#123; return head-&gt;next-&gt;data; &#125; /*判断是否为空栈*/ bool IsEmpty() &#123; return head-&gt;next == nullptr; &#125;&#125;;/*********************************//*数据转换*/void ChangeNumber(int n,int b) &#123; Stack&lt;int&gt; stack; int result = 0; while (n) &#123; stack.push(n % b); n = n / b; &#125; while (!stack.IsEmpty()) &#123; cout &lt;&lt; stack.getTop(); stack.pop(); &#125; &#125;int main() &#123; ChangeNumber(75, 8);&#125; 实验结果: –（本文完）&lt;原创&gt;]]></content>
      <categories>
        <category>数据结构</category>
      </categories>
      <tags>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[C++ vector容器常用操作和内存释放]]></title>
    <url>%2F2019%2F06%2F29%2FC-vector%E5%AE%B9%E5%99%A8%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E5%92%8C%E5%86%85%E5%AD%98%E9%87%8A%E6%94%BE%2F</url>
    <content type="text"><![CDATA[一、对字符串的处理 对字符串每一个字符进行遍历修改操作 12345678910111213141516#include&lt;iostream&gt;#include&lt;vector&gt;#include&lt;string&gt;using namespace std;int main() &#123; string ifo = "ShuHaoHwang"; for (auto iter = ifo.begin(); iter != ifo.end(); iter++) &#123; *iter = toupper(*iter); &#125; cout &lt;&lt; ifo &lt;&lt; endl;&#125; 二、查找配置项信息及内存释放 用迭代器及vector容器实现通过一个配置项名就能查询获得相应配置项的信息，最后利用vector进行内存释放。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869#include&lt;iostream&gt;#include&lt;vector&gt;#include&lt;string&gt;using namespace std;struct conf&#123; char confname[40];//配置项名 char confid[100];//配置项信息&#125;;char* getifo(vector&lt;conf*&gt;&amp; a, const char* s) &#123; vector&lt;conf*&gt;::iterator iter; for (iter = a.begin(); iter != a.end(); iter++) &#123; if (strcmp((*iter)-&gt;confname, s) == 0) &#123;//如果找到对应配置项名，就返回其配置项的信息 return (*iter)-&gt;confid; &#125; &#125; return nullptr;&#125;int main() &#123; conf* server = new conf; conf* server2 = new conf; /*配置项名1*/ strcpy_s(server-&gt;confname,sizeof(server-&gt;confname),"ServerName"); /*配置信息1*/ strcpy_s(server-&gt;confid, sizeof(server-&gt;confid), "1区"); /*配置项名2*/ strcpy_s(server2-&gt;confname, sizeof(server2-&gt;confname), "ServerID"); /*配置信息2*/ strcpy_s(server2-&gt;confid, sizeof(server2-&gt;confid), "10000"); vector&lt;conf*&gt; cinfo; cinfo.push_back(server);//把结构指针放入容器 cinfo.push_back(server2); vector&lt;conf*&gt;::iterator iter; /*查找信息*/ char* temp; temp = getifo(cinfo, "ServerName"); if (temp != nullptr) &#123; cout &lt;&lt; "ServerName: " &lt;&lt; temp &lt;&lt; endl; &#125; /*释放内存*/ for (iter = cinfo.begin(); iter != cinfo.end(); iter++) &#123; delete (*iter);//因为*iter是一个指针 &#125; cinfo.clear();//最后清空容器 &#125;]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>技术类</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[C++迭代器的失控范例和解决方案]]></title>
    <url>%2F2019%2F06%2F28%2FC-%E8%BF%AD%E4%BB%A3%E5%99%A8%E7%9A%84%E5%A4%B1%E6%8E%A7%E8%8C%83%E4%BE%8B%E5%92%8C%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%2F</url>
    <content type="text"><![CDATA[迭代器失控范例情形一： 很多在使用迭代器类型进行遍历容器的操作进行对容器容量的变化都会导致迭代器的失控，即输出错误的值。例如：要对vector容器进行push_back()操作、对vector容器进行插入操作、删除操作。都会使end()函数返回的迭代器类型位置错乱，导致出现可能会修改未被使用内存的风险，从而使程序崩溃。 例如： 1234567891011vector&lt;int&gt; arrays&#123;12,35,56,78&#125;;vector&lt;int&gt;::iterator iter = arrays.begin();for(iter;iter!=arrays.end();iter++)&#123; cout &lt;&lt; *iter &lt;&lt;endl; arrays.push_back(2);&#125;//或者下面这种情况for(iter;iter!=arrays.end();iter++)&#123; cout &lt;&lt; *iter &lt;&lt;endl; arrays.insert(1,100);&#125; 实验结果： 在一般情况下，如果只是要对容器进行添加一个元素，可以使用下面的方法。 123456789101112vector&lt;int&gt; arrays&#123;12,35,56,78&#125;;vector&lt;int&gt;::iterator iter = arrays.begin();for(iter;iter!=arrays.end();iter++)&#123; cout &lt;&lt; *iter &lt;&lt;endl; arrays.push_back(2); break;//添加元素后直接跳出&#125;//再进行一次迭代器遍历for(iter;iter!=arrays.end();iter++)&#123; cout &lt;&lt; *iter &lt;&lt;endl; arrays.push_back(2);&#125; 实验结果： 如果真的在实际项目中要进行在迭代器遍历容器的时候对容器多次进行增添内容，可以使用下面的方法。 123456789101112131415vector&lt;int&gt; arrays&#123;12,35,56,78&#125;;vector&lt;int&gt;::iterator iter = arrays.begin();int i = 0//用来控制插入次数（循环次数） while(iter != arrays.end())&#123; iter = arrays.insert(iter,100); if(i &gt; 5) break; iter++; i++; &#125;for(iter = arrays.begin(); iter != arrays.end(); iter++)&#123; cout &lt;&lt; *iter &lt;&lt; endl;&#125; 实验结果： 实现思路:因为arrays.insert()的返回值是一个迭代器类型，所以在循环中不断刷新循环的起始位置(因为是前插，所以end()的值没有发生变化)。多次更新迭代器的起始begin()的值，从而使迭代器类型的指向不会失控。 同样的如果使用push_back(): 123456789101112131415161718vector&lt;int&gt; arrays&#123;12,35,56,78&#125;;vector&lt;int&gt;::iterator iter = arrays.begin();int i = 0//用来控制插入次数（循环次数） while(iter != arrays.end())&#123; arrays.push_back(100);//不断更新iter的值起始 iter = arrays.begin() if(i &gt; 5) break; iter++; i++; &#125;for(iter = arrays.begin(); iter != arrays.end(); iter++)&#123; cout &lt;&lt; *iter &lt;&lt; endl;&#125; 实验结果： 总体：即每对容器的容量进行变化一次便刷新迭代器的值。使其成为新的迭代器进行操作，就可以避免容器的失控。弊端：麻烦，代码较繁杂。 情形二： 如果在某个时候要对容器进行清空操作，多数下使用容器自带的clear()函数即可。但在某些特殊情况下，要对vector容器的某些元素进行删除，就得使用容器自带的` `函数。但是这样做就是对容器容量进行修改操作，会使迭代器指向失控。 例如： 12345vector&lt;int&gt; arrays&#123;12,35,56,78&#125;vector&lt;int&gt;::iterator iter;for(iter = arrays.begin(); iter != arrays.end(); iter++)&#123; arrays.erase(iter);&#125; 使用结果 如果真的要进行这样的操作可以这样做： 12345678910vector&lt;int&gt; arrays&#123;12,35,56,78&#125;vector&lt;int&gt;::iterator iter = arrays.begin();while(iter != arrays.end())&#123; iter = arrays.erase(iter);//直接让erase函数来更新迭代器指向的位置&#125;//for版for(iter; iter != arrays.end(); )&#123; iter = arrays.erase(iter);&#125; 实验结果： 实现思路：因为erase()函数是清除该位置的数据，并返回下一个元素的位置，所以可以通过它来对迭代器进行更新，从而不会时迭代器指向失控。 此情形更好的实现版本 1234567vector&lt;int&gt; arrays&#123;12,35,56,78&#125;vector&lt;int&gt;::iterator iter = arrays.begin();while(!arrays.empty())&#123;//如果不为空就继续 auto iter = arrays.begin();//每开始一轮循环就更新迭代器的指向。 arrays.erase(iter);&#125; –（本文完）&lt;原创&gt;]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>技术类</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[C++进阶学习总结-（1.6）迭代器]]></title>
    <url>%2F2019%2F06%2F26%2FC-%E8%BF%9B%E9%98%B6%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%881-6%EF%BC%89%E8%BF%AD%E4%BB%A3%E5%99%A8%2F</url>
    <content type="text"><![CDATA[此文章是加密文章，请输入密码后查看. Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>代码学习</category>
        <category>C++学习</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>学习总结</tag>
        <tag>C++学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据结构学习总结-（3.3）链栈]]></title>
    <url>%2F2019%2F06%2F26%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%883-3%EF%BC%89%E9%93%BE%E6%A0%88%2F</url>
    <content type="text"><![CDATA[栈的链式实现算法及思路 栈的链式实现是以前插法为基础的。即以头结点next指向的是栈顶，进行入栈出栈等操作。 入栈 思路：创建好空链栈后，每插入一个数据，便创建一个新的结点p，让p结点的next指针等于head的next指针，让head的next指针再指向新结点p，从而完成push_back操作。 具体实现： 12345678bool push_back(T e)&#123; LNode*p = new LNode(); p-&gt;data = e; p-&gt;next = head-&gt;next; head-&gt;next = p; return true;&#125; 出栈 思路：直接让head的next指针指向head-&gt;next-&gt;next即跳过原栈的数据，所以可以先让一个临时的p指向head-&gt;next,然后让head的next指针直接指向p的next指针。之后释放p的空间。(注意：进行出栈操作要首先判断是否空栈) 具体实现： 123456789bool pop()&#123; LNode* p = head-&gt;next; if(!head-&gt;next)&#123; head-&gt;next = p-&gt;next; delete p; return true; &#125; return false;&#125; 析构函数 思路：析构函数就是链栈的销毁操作。总体上先把所有的数据进行出栈并释放空间，最后再把头结点释放了。所以要先用循环，分别释放每一个数据的空间。循环结束的判断条件是head-&gt;next 为空。 具体实现： 12345678~LkStack()&#123; LNode*p = head-&gt;next; while(p)&#123; head-&gt;next = p-&gt;next; delete p; p = head-&gt;next; &#125;&#125; 具体代码实现：1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495969798#include&lt;iostream&gt;using namespace std;template&lt;typename T&gt;class LkStack&#123; struct LNode &#123; T data; LNode* next; &#125;; LNode* head;public: LkStack() &#123; head = new LNode(); head-&gt;next = nullptr; &#125; ~LkStack() &#123; LNode* p = head-&gt;next; while (p) &#123; head-&gt;next = p-&gt;next; delete p; p = head-&gt;next; &#125; delete head; &#125; /*入栈操作*/ bool push_back(T e) &#123; LNode* p = new LNode(); p-&gt;data = e; p-&gt;next = head-&gt;next; head-&gt;next = p; return true; &#125; /*出栈操作*/ bool pop() &#123; if (!isEmpty()) &#123; LNode* p = head-&gt;next; head-&gt;next = p-&gt;next; delete p; return true; &#125; return false; &#125; /*是否为空*/ bool isEmpty() &#123; if (!head-&gt;next) return true; return false; &#125; /*获得栈顶数据*/ T&amp; GetTop() &#123; return head-&gt;next-&gt;data; &#125;&#125;;int main() &#123; LkStack&lt;int&gt; stack; cout &lt;&lt; "入栈了数据1" &lt;&lt;endl; stack.push_back(1); cout &lt;&lt; "入栈了数据2" &lt;&lt;endl; stack.push_back(2); cout &lt;&lt; "入栈了数据3" &lt;&lt;endl; stack.push_back(3); cout &lt;&lt; "入栈了数据4" &lt;&lt;endl; stack.push_back(4); cout &lt;&lt; "入栈了数据5" &lt;&lt;endl; stack.push_back(5); while (!stack.isEmpty()) &#123; cout &lt;&lt; stack.GetTop() &lt;&lt; endl; stack.pop(); &#125;&#125; –（本文完）&lt;原创&gt;]]></content>
      <categories>
        <category>代码学习</category>
        <category>数据结构学习</category>
      </categories>
      <tags>
        <tag>学习总结</tag>
        <tag>数据结构</tag>
        <tag>数据结构-学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[C++个人学习路线]]></title>
    <url>%2F2019%2F06%2F25%2FC-%E4%B8%AA%E4%BA%BA%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF%2F</url>
    <content type="text"><![CDATA[此文章是加密文章，请输入密码后查看. Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>个人随感</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>学习计划</tag>
        <tag>目标</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[C++进阶学习总结-（1.5）vector容器详解]]></title>
    <url>%2F2019%2F06%2F25%2FC-%E8%BF%9B%E9%98%B6%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%881-5%EF%BC%89vector%E5%AE%B9%E5%99%A8%E8%AF%A6%E8%A7%A3%2F</url>
    <content type="text"><![CDATA[此文章是加密文章，请输入密码后查看. Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>代码学习</category>
        <category>C++学习</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>学习总结</tag>
        <tag>C++学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据结构学习总结-（3.2）顺序栈的实现]]></title>
    <url>%2F2019%2F06%2F24%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%883-2%EF%BC%89%E9%A1%BA%E5%BA%8F%E6%A0%88%E7%9A%84%E5%AE%9E%E7%8E%B0%2F</url>
    <content type="text"><![CDATA[顺序栈的实现与算法思路（以char数据类型为例） 入栈push(char e)； 思路：在栈未满的情况下，直接对top(栈顶)指针指向的地址内容进行赋值，修改完毕后，直接top++移动栈顶至下一个位置。如果栈满则调用扩容操作。 具体实现： 1234567bool SqStack::push(char e) &#123; if ((top - data) == capacity)//容量满了就进行扩容 realloc(); *top = e; top++;//直接修改并移动top指针 return true;&#125; 出栈pop(); 思路：在没有空栈的情况下，直接让top自减一。 具体实现： 1234567bool SqStack::pop() &#123; if (top == data)//判断是否空栈。 return false; top--; return true; &#125; 顺序栈的实现情况 出栈(完成) push(char e) 入栈(完成) pop() 扩容(完成) realloc() 遍历(完成) Traverse(void(*fb)(char&amp; e)) 获得栈顶数据(完成) GetTop() 是否为空栈(完成) IsStackEmpty() 获得栈总容量(完成) GetCapacity() 具体代码： 123456789101112131415161718192021222324252627282930313233343536//Sqstack.h#ifndef _SQSTACK_H_#define _SQSTACK_H_ class SqStack &#123; char* top = nullptr; char* data = nullptr; int capacity;public: /*构造函数*/ SqStack(int c = 5); /*入栈操作*/ bool push(char e); /*出栈操作*/ bool pop(); /*遍历*/ void Traverse(void(*fb)(char&amp;e)); char GetTop(); bool IsStackEmpty(); int GetCapacity();private: /*扩容*/ bool realloc();&#125;; /*打印*/ void Print(char&amp; e);#endif // !_SQSTACK_H_ 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182//Sqstack.cpp#include&lt;iostream&gt;#include"Sqstack.h"using namespace std;/*构造函数*/SqStack::SqStack(int c) &#123; capacity = c;//默认给一个初值 data = new char[capacity]; top = data;&#125;/*扩容*/bool SqStack::realloc() &#123; char* n_data = new char[2 * capacity]; for (int i = 0; i &lt; capacity; i++) &#123; n_data[i] = data[i]; &#125; delete[]data; data = n_data; top = data + capacity;//这里要注意top也有重新赋值新的地址 capacity *= 2; cout &lt;&lt; "扩容成功！！" &lt;&lt; endl; return true;&#125;/*入栈操作*/bool SqStack::push(char e) &#123; if ((top - data) == capacity) realloc(); *top = e; top++; return true;&#125;/*出栈操作*/bool SqStack::pop() &#123; if (top == data) return false; top--; return true; &#125;/*遍历*/void SqStack::Traverse(void(*fb)(char&amp; e)) &#123; for (int i = 0; i &lt; top - data; i++) &#123; fb(data[i]); &#125; &#125;/*获得栈顶元素*/char SqStack::GetTop() &#123; return*(top - 1);&#125;/*判断是否空栈*/bool SqStack::IsStackEmpty() &#123; if (top == data) return true; return false;&#125;/*获得容量*/int SqStack::GetCapacity() &#123; return capacity;&#125;/*打印*/ void Print(char&amp; e) &#123; cout &lt;&lt; e &lt;&lt; " "; &#125; 123456789101112131415161718192021222324252627//main.cpp#include&lt;iostream&gt;#include"Sqstack.h"using namespace std;int main() &#123; SqStack stack; cout &lt;&lt; "入栈一个数据a" &lt;&lt; endl; stack.push('a'); stack.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "入栈一个数据b" &lt;&lt; endl; stack.push('b'); stack.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "入栈一个数据c" &lt;&lt; endl; stack.push('c'); stack.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "入栈一个数据d" &lt;&lt; endl; stack.push('d'); stack.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "入栈一个数据e" &lt;&lt; endl; stack.push('e'); stack.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "入栈一个数据f" &lt;&lt; endl; stack.push('f'); stack.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "出栈一个数据" &lt;&lt; endl; stack.pop(); stack.Traverse(Print); cout &lt;&lt; endl; &#125; –（本文完）&lt;原创&gt;]]></content>
      <categories>
        <category>代码学习</category>
        <category>数据结构学习</category>
      </categories>
      <tags>
        <tag>学习总结</tag>
        <tag>数据结构</tag>
        <tag>数据结构-学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据结构学习总结-（3.1）栈]]></title>
    <url>%2F2019%2F06%2F24%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%883-1%EF%BC%89%E6%A0%88%2F</url>
    <content type="text"><![CDATA[初识栈 定义：栈(stack)是限定仅在表尾插入和删除操作的线性表。 允许插入和删除的一段称为栈顶(top),另一段称为栈底(bottom)。 不含任何数据元素的栈称为空栈。 特点： 先进后出 后进先出 注意： 栈又被称为后进先出(Last in First out)的线性表 栈的插入操作，被称为进栈，也称压栈、入栈(push) 栈的删除操作也称出栈，也称为弹栈(pop) 示意图： 栈的抽象数据类型 ADT 栈(Stack) Data 栈的数据对象集合为{a1,a2,a3,…,an},每一个元素的类型均为同一个数据类型。其中除了第一个数据为，每个元素有且只有一个直接前驱元素，除了最后一个数据外，每个元素有且只有一个直接的后继元素。数据元素之间的关系是一对一的关系， Operation InitStack；初始化，创建一个空栈 destoryStack; 销毁栈 StackEmpty；判断是否为空 clearStack； 清空栈 getTop；获得栈顶元素 push 压栈 pop 出栈 stacklength；获得栈的长度 endADT 注意：栈本身就是一个线性表结构、线性表的顺序储存和链式存储，对于栈来说也同样适用 –（本文未完）]]></content>
      <categories>
        <category>代码学习</category>
        <category>数据结构学习</category>
      </categories>
      <tags>
        <tag>学习总结</tag>
        <tag>数据结构</tag>
        <tag>数据结构-学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[C++进阶学习总结-（1.4）函数新特性、const关键字精解]]></title>
    <url>%2F2019%2F06%2F23%2FC-%E8%BF%9B%E9%98%B6%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%881-4%EF%BC%89%E5%87%BD%E6%95%B0%E6%96%B0%E7%89%B9%E6%80%A7%E3%80%81const%E5%85%B3%E9%94%AE%E5%AD%97%E7%B2%BE%E8%A7%A3%2F</url>
    <content type="text"><![CDATA[此文章是加密文章，请输入密码后查看. Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>代码学习</category>
        <category>C++学习</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>学习总结</tag>
        <tag>C++学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据结构学习总结-（2.9）顺序存储结构与链式存储结构的逆置]]></title>
    <url>%2F2019%2F06%2F22%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%882-9%EF%BC%89%E9%A1%BA%E5%BA%8F%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84%E4%B8%8E%E9%93%BE%E5%BC%8F%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84%E7%9A%84%E9%80%86%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[顺序结构的逆置算法与思路： 夹逼法： 思路：通过对数组头部和尾部相互对调并向中间靠近。 实现：(假设以整型为数据类型实现) 12345678910//length为顺序表总长度。bool Convert()&#123; int temp;//用来对换位置时使用的临时变量 for(int i = 0; i &lt; length/2; i++)&#123;//注意：length要除于2！！！！length要除于2！！！！ temp = datas[i]; datas[i] = datas[length - 1 - i];//前后换位置并向中间靠近 datas[length - 1 - i] = temp; &#125; return true;&#125; 注意：这里的length是要除于2的，因为只需向中间靠近即可而不是再往中间远离。即：移动的范围只是数组长度的一半。 算法优化： 12345678910//length为顺序表总长度。bool Convert()&#123; int temp;//用来对换位置时使用的临时变量 for(int i = 0 ，j = length - 1; i &lt; j; i++,j--)&#123; temp = datas[i]; datas[i] = datas[j];//前后换位置并向中间靠近 datas[j] = temp; &#125; return true;&#125; 此方法更能体现夹逼法。 链式存储结构的逆置算法与思路： 思路：把头结点和数据结点断开，然后把数据结点一个个前插进链表。（循环链表和单向链表均适用）,具体做法先让一个结点指针p保存第一个数据的地址，然后让头结点的next指针归零（即：使其与数据结点断开），开始循环：让一个临时指针指向p的下一个数据的地址，然后把这个第一个数据插入头结点后面（此时p指向为第一个数据的地址），即：p-&gt;next = head-&gt;next;head -&gt;next = p;其次移动指针p到下一个数据，这里就要运用到一开始的临时指针了。循环上面的操作，直到把所有数据都前插完毕。 实现1(单向链表)： 12345678910111213141516bool Convert()&#123; LNode* p = head-&gt;next; LNode* temp = nullptr;//临时指针 head-&gt;next = nullptr; while(p)&#123; temp = p-&gt;next;//获取下一个数据的值 p-&gt;next = head-&gt;next;//前插 head-&gt;next = p; p = temp;//移动指针到下一个数据 &#125; return true;&#125; 实现2(循环链表) 12345678910111213141516bool Convert()&#123; LNode* p = head-&gt;next; LNode* temp = nullptr;//临时指针 head-&gt;next = nullptr; while(p!=head)&#123; temp = p-&gt;next;//获取下一个数据的值 p-&gt;next = head-&gt;next;//前插 head-&gt;next = p; p = temp;//移动指针到下一个数据 &#125; return true;&#125; 前后只是循环条件发生变化。 –（本文完）&lt;原创&gt;&lt;待增添修改&gt;]]></content>
      <categories>
        <category>代码学习</category>
        <category>数据结构学习</category>
      </categories>
      <tags>
        <tag>学习总结</tag>
        <tag>数据结构</tag>
        <tag>数据结构-学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据结构学习总结-（2.8）线性表的顺序存储结构和链式存储结构之间的比较]]></title>
    <url>%2F2019%2F06%2F21%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%882-8%EF%BC%89%E7%BA%BF%E6%80%A7%E8%A1%A8%E7%9A%84%E9%A1%BA%E5%BA%8F%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84%E5%92%8C%E9%93%BE%E5%BC%8F%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84%E4%B9%8B%E9%97%B4%E7%9A%84%E6%AF%94%E8%BE%83%2F</url>
    <content type="text"><![CDATA[顺序结构与链式结构的比较： 顺序结构 链式结构 按序号下标读取 直接读取通过A[index]即可获的数据+++ 要从头开始找，找的下标才能获取数据— 内存实验 要先规定好顺序结构的长度，可能没有利用好空间或空间不够用，不够用时还要扩容可能没有足够的空间或多出空间— 按需要分配，想要一个就一个可利用很小的碎片空间+++ 插入元素 插入一个元素需要不断移动后面的元素，速度慢，消耗相比大— 直接插入，速度快，消耗相比小+++ 删除 需要移动元素— 直接删除+++ –（本文完）&lt;原创&gt;]]></content>
      <categories>
        <category>代码学习</category>
        <category>数据结构学习</category>
      </categories>
      <tags>
        <tag>学习总结</tag>
        <tag>数据结构</tag>
        <tag>数据结构-学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[C++进阶学习总结-（1.3）范围for语句、动态分配、nullptr]]></title>
    <url>%2F2019%2F06%2F21%2FC%2B%2B%E8%BF%9B%E9%98%B6%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%881-3%EF%BC%89%E8%8C%83%E5%9B%B4for%E8%AF%AD%E5%8F%A5%EF%BC%8C%E5%8A%A8%E6%80%81%E5%88%86%E9%85%8D%2F</url>
    <content type="text"><![CDATA[此文章是加密文章，请输入密码后查看. Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>代码学习</category>
        <category>C++学习</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>学习总结</tag>
        <tag>C++学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据结构学习总结-（2.7）双向链表]]></title>
    <url>%2F2019%2F06%2F20%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%882-7%EF%BC%89%E5%8F%8C%E5%90%91%E9%93%BE%E8%A1%A8%2F</url>
    <content type="text"><![CDATA[双向链表 与单向链表的不同之处： 单向链表 双向链表 只知道后继节点，不知道前驱节点。每次查找只能从头开始查找。 相比单向链表增加了一个前驱指针，使前驱节点很快就能被找到 双向链表由于有了前后指针。可以使其从前往后走，也可以从后往前走。 根据双向链表具有前后两个指针的这个特性 在插入算法和删除算法中都有很好的优势 插入算法： 12345678910111213141516171819202122bool InsertElement(int index, T e) &#123; LNode* node = new LNode(); LNode* p = head; node-&gt;data = e; int j = 0; while (j &lt; index)//直接定位到要插入的位置即可 &#123; p = p-&gt;next; j++; &#125; p-&gt;prior-&gt;next = node;//指定位置的前一个数据的next指针指向新插入的数据地址 node-&gt;prior = p-&gt;prior;//新插入数据的prior指针指向原来位置数据的前一个数据地址 p-&gt;prior = node;//插入位置的前一个数据更变为新插入的数据地址 node-&gt;next = p;//新插入数据的next指针指向插入位置的地址 length++;//链表总长度加1 return true; &#125; 删除算法 12345678910111213141516bool DeleteElement(int index) &#123; LNode* p = head; int j = 0; while (j &lt; index)//直接定位到要删除的数据结点 &#123; p = p-&gt;next; j++; &#125; p-&gt;prior-&gt;next = p-&gt;next;//待删除的数据的前一个数据的next指针指向待删除数据的下一个数据的地址 p-&gt;next-&gt;prior = p-&gt;prior;//待删除数据的下一个数据的prior指针指向待删除数据的前一个数据 delete p;//释放待删除数据的空间 return true; &#125; 删除算法即可以直接跳过待删除数据结点。 其他测试代码详情：123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170#include&lt;iostream&gt;using namespace std;template&lt;typename T&gt;class BSLkList &#123; struct LNode &#123; T data; LNode* next; LNode* prior; &#125;; LNode* head; LNode* rear; int length;public: BSLkList() &#123; head = new LNode(); head-&gt;next = head; head-&gt;prior = head; rear = head; length = 0; &#125; /*后插操作*/ bool Push_back(T e) &#123; length++; LNode* node = new LNode(); LNode* p = head; if (!node) return false; while (p-&gt;next != head) &#123; p = p-&gt;next; &#125; node-&gt;data = e; p-&gt;next = node; node-&gt;next = head; node-&gt;prior = p; rear = node; return true; &#125; /*插入操作*/ bool InsertElement(int index, T e) &#123; LNode* node = new LNode(); LNode* p = head; node-&gt;data = e; int j = 0; while (j &lt; index) &#123; p = p-&gt;next; j++; &#125; p-&gt;prior-&gt;next = node; node-&gt;prior = p-&gt;prior; p-&gt;prior = node; node-&gt;next = p; length++; return true; &#125; /*删除操作*/ bool DeleteElement(int index) &#123; LNode* p = head; int j = 0; while (j &lt; index) &#123; p = p-&gt;next; j++; &#125; p-&gt;prior-&gt;next = p-&gt;next; p-&gt;next-&gt;prior = p-&gt;prior; delete p; return true; &#125; /*遍历操作*/ void Traverse(void(*fb)(T&amp; e)) &#123; LNode* p = head-&gt;next; while (p != head) &#123; fb(p-&gt;data); p = p-&gt;next; &#125; &#125; /*指定位置遍历操作*/ void Traverse(T e, void(*fb)(T&amp; e)) &#123; LNode* s = GetDataAddress(e); LNode* p = s; do &#123; if(s!=head) fb(s-&gt;data); s = s-&gt;next; &#125; while (s != p); &#125; private: /*获得指定结点地址操作*/ LNode* GetDataAddress(T e) &#123; LNode* p = head; while (p-&gt;next != head) &#123; if (p-&gt;data == e) return p; p = p-&gt;next; &#125; return NULL; &#125;&#125;;template&lt;typename T&gt;void Print(T&amp;e) &#123; cout &lt;&lt; e &lt;&lt; " ";&#125;int main() &#123; BSLkList&lt;char&gt; list; cout &lt;&lt; "后插入了一个A数据" &lt;&lt; endl; list.Push_back('A'); list.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "后插入了一个B数据" &lt;&lt; endl; list.Push_back('B'); list.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "后插入了一个C数据" &lt;&lt; endl; list.Push_back('C'); list.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; endl; cout &lt;&lt; "在2号位置插入了一个p数据" &lt;&lt; endl; list.InsertElement(2, 'p'); list.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "在2号位置插入了一个p数据" &lt;&lt; endl; list.InsertElement(2, 'p'); list.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; endl; cout &lt;&lt; "删除了3号位置的数据" &lt;&lt; endl; list.DeleteElement(3); list.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "删除了1号位置的数据" &lt;&lt; endl; list.DeleteElement(1); list.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; endl; cout &lt;&lt; "从B数据开始遍历" &lt;&lt; endl; list.Traverse('B', Print); cout &lt;&lt; endl;;&#125; 测试效果图： –(本文完)&lt;原创&gt;]]></content>
      <categories>
        <category>代码学习</category>
        <category>数据结构学习</category>
      </categories>
      <tags>
        <tag>学习总结</tag>
        <tag>数据结构</tag>
        <tag>数据结构-学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据结构学习总结-（2.6.1）附加：循环链表的优点之从指定结点开始遍历]]></title>
    <url>%2F2019%2F06%2F19%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%882-6-1%EF%BC%89%E9%99%84%E5%8A%A0%EF%BC%9A%E5%BE%AA%E7%8E%AF%E9%93%BE%E8%A1%A8%E7%9A%84%E4%BC%98%E7%82%B9%E4%B9%8B%E4%BB%8E%E6%8C%87%E5%AE%9A%E7%BB%93%E7%82%B9%E5%BC%80%E5%A7%8B%E9%81%8D%E5%8E%86%2F</url>
    <content type="text"><![CDATA[体现循环链表的优点之从指定结点开始遍历​ 上一篇总结文章介绍了循环链表的基本概念和个人理解，但我觉得能很好区分非循环链表和循环链表初了链表的合并，还有一个就是循环链表可以从指定的结点开始遍历整个链表，这是非循环链表所做不到的。非循环链表每次遍历只能从头一个个开始遍历每一个元素，而循环链表就不同了，因为它的尾部是与头部相连的，这样就可以实现从某一个结点开始就可以遍历到链表每一个结点上，大大提高了效率。 这里通过遍历函数来体现这一特性。 123456789101112131415161718192021222324252627282930313233//查找链表中的某一个元素并获得它的地址LNode* GetDataAddress(T e) &#123; LNode* p = head-&gt;next; while (p != head) &#123; if (p-&gt;data == e) return p; p = p-&gt;next; &#125; return NULL; &#125;/*从某一个结点进行遍历*/ void Traverse(T e,void(*fb)(T&amp; t)) &#123; LNode* p = GetDataAddress(e);//获得指定结点的地址 LNode* q = p; if (!p) &#123; cout &lt;&lt; "链表为空" &lt;&lt; endl; return; &#125; do &#123; if(p!=head)//越过头结点 fb(p-&gt;data); p = p-&gt;next; &#125; while (p != q); &#125; 思路：先获得指定结点的地址先记录下来，并再用一个指针记下这个位置（便于判断）。其次这里使用的是do-while循环结构（使用do-while循环可以避免while循环漏遍历一个指定结点的数据），先调用函数指针的内容，然后移动指针p。直到指针p再次等于原来的指定结点的地址就停止。 具体实验代码： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126#include&lt;iostream&gt;using namespace std;template&lt;typename T&gt;class CLkList&#123; struct LNode &#123; T data;//数据 LNode* next;//指向下一个数据的指针 &#125;; LNode* head;//头指针 LNode* rear;//尾指针 int length;public: /*构造函数*/ CLkList() &#123; head = new LNode(); length = 0; if (!head)throw"No Memory";//若没有new出来就抛出异常 head-&gt;next = head; rear = head-&gt;next; &#125; /*后插入操作*/ bool push_back(T e) &#123; length++; LNode* p = head-&gt;next; LNode* q = new LNode(); while (p-&gt;next != head) &#123; p = p-&gt;next; &#125; if (!p)return false; q-&gt;data = e;//进行data赋值 rear = q; q-&gt;next = head; p-&gt;next = q;//原最后一个元素数据的next指向这个新插入的空间地址 //length++; return true; &#125; /*获得指定结点地址操作*/ LNode* GetDataAddress(T e) &#123; LNode* p = head-&gt;next; while (p != head) &#123; if (p-&gt;data == e) return p; p = p-&gt;next; &#125; return NULL; &#125; /*遍历操作*/ void Traverse(void(*fb)(T &amp; t)) &#123; LNode* p = head-&gt;next;//从头结点开始遍历每一个元素的data while (p != head) &#123; fb(p-&gt;data); p = p-&gt;next; &#125; &#125; /*从某一个结点进行遍历*/ void Traverse(T e,void(*fb)(T&amp; t)) &#123; LNode* p = GetDataAddress(e);//从头结点开始遍历每一个元素的data LNode* q = p; if (!p) &#123; cout &lt;&lt; "链表为空" &lt;&lt; endl; return; &#125; do &#123; if(p!=head) fb(p-&gt;data); p = p-&gt;next; &#125; while (p != q); &#125;private:&#125;;template&lt;typename T&gt;void Print(T&amp; e) &#123; cout &lt;&lt; e &lt;&lt; " ";&#125;int main() &#123; CLkList&lt;char&gt; list; cout &lt;&lt; "后面插入了一个a数据" &lt;&lt; endl; list.push_back('a'); list.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "后面插入了一个b数据" &lt;&lt; endl; list.push_back('b'); list.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "后面插入了一个c数据" &lt;&lt; endl; list.push_back('c'); list.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "后面插入了一个d数据" &lt;&lt; endl; list.push_back('d'); list.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "从b数据开始遍历链表； " &lt;&lt; endl; list.Traverse('b', Print); cout &lt;&lt; endl; cout &lt;&lt; "从c数据开始遍历链表； " &lt;&lt; endl; list.Traverse('c', Print); cout &lt;&lt; endl; &#125; 运行结果： 小结：​ 这里只是单单用遍历体现了循环链表的这个特点。 ​ 其实不单单在遍历操作上，这个更可以在查找操作上体现出这个优点，例如：在指定结点开始寻找其后的某个值、删除操作也可以运用上。 –（本文完）&lt;原创&gt;]]></content>
      <categories>
        <category>代码学习</category>
        <category>数据结构学习</category>
      </categories>
      <tags>
        <tag>学习总结</tag>
        <tag>数据结构</tag>
        <tag>数据结构-学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据结构学习总结-（2.6）循环链表（单向链表）、清空链表与销毁链表]]></title>
    <url>%2F2019%2F06%2F19%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%882-6%EF%BC%89%E5%BE%AA%E7%8E%AF%E9%93%BE%E8%A1%A8%EF%BC%88%E5%8D%95%E5%90%91%E9%93%BE%E8%A1%A8%EF%BC%89%2F</url>
    <content type="text"><![CDATA[循环链表 相较于非循环链表 在非循环链表中，最后一个元素的next指针是空指针，造成浪费。 每次寻找后继指针的时候都要重新从头开始找。 循环链表 尾指针直接指向表头，使最后一个元素的next指针被利用起来。 从每一个元素开始都能遍历表中每一个元素。 便于类似于链表合并这样的算法实现。 其他不同： 循环链表与非循环链表的判断条件发生了变化 判断的具体解释（循环链表） 判断到前驱结点： 1234while (p-&gt;next != head) &#123; p = p-&gt;next; &#125; ​ 因为最后一个结点的next指针不再是空指针而是一个指向head的指针，所以在while循环中如果p的next指针下一个为head指针那么这时指针p就定位到head的前驱指针了。 判断到头结点： 1234while (p != head) &#123; p = p-&gt;next; &#125; ​ 这个也很好判断，不断移动指针p当等于头结点时就跳出循环，此时p定位到头结点。 循环链表的尾指针 循环链表通常是有一个尾指针的它指向的是最后一个元素的地址。 尾指针的好处： 找head指针非常方便。rear-&gt;next的值便是head。 便于链表的合并。 代码实现空表时的尾指针： 1234567891011121314151617181920212223class CLkList&#123; struct LNode &#123; T data;//数据 LNode* next;//指向下一个数据的指针 &#125;; LNode* head;//头指针 LNode* rear;//尾指针 int length;public: /*构造函数*/ CLkList() &#123; head = new LNode(); length = 0; head-&gt;next = head; rear = head-&gt;next;//空表时的尾指针 &#125;&#125; 当插入一个元素后尾指针的变化 123456789101112131415161718192021//从链表最后面插入元素bool push_back(T e) &#123; length++; LNode* p = head-&gt;next; LNode* q = new LNode(); while (p-&gt;next != head) &#123; p = p-&gt;next; &#125; if (!p)return false; q-&gt;data = e;//进行data赋值 rear = q;//因为是从最后面插入那么此时这个最后一个元素的的地址是尾指针指向的 q-&gt;next = head; p-&gt;next = q;//原最后一个元素数据的next指向这个新插入的空间地址 return true; &#125; 链表合并的实现: 具体思路（链表2合并到链表1）：先获得链表2的头结点的地址（即：链表2的指针head）然后让链表1的head指针指向链表2的指针head-&gt;next指向的地址（即：链表2的第一个元素的地址），然后让链表2的指针rear（尾指针）指向链表1的head-&gt;指向的地址（即指向链表1的第一个元素）最后delete 链表2的head指针。完成合并操作。 合并前： 合并后： 具体实现： 1234567891011121314bool ListCombine(CLkList* s) &#123; LNode* t_head_of_s = s-&gt;head;//获得链表2的head指针 s-&gt;rear-&gt;next = head-&gt;next;//让链表2的尾指针指向链表1的第一个元素 head-&gt;next = t_head_of_s-&gt;next;//让链表1的head-&gt;next指针指向链表1第一个元素 delete t_head_of_s;//释放原链表2的head指针 return true;&#125; 循环链表具体代码实现123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231#include&lt;iostream&gt;using namespace std;template&lt;typename T&gt;class CLkList&#123; struct LNode &#123; T data;//数据 LNode* next;//指向下一个数据的指针 &#125;; LNode* head;//头指针 LNode* rear; int length;public: /*构造函数*/ CLkList() &#123; head = new LNode(); length = 0; if (!head)throw"No Memory";//若没有new出来就抛出异常 head-&gt;next = head; rear = head-&gt;next; &#125; /*往后插入操作*/ bool push_back(T e) &#123; length++; LNode* p = head-&gt;next; LNode* q = new LNode(); while (p-&gt;next != head) &#123; p = p-&gt;next; &#125; if (!p)return false; q-&gt;data = e;//进行data赋值 rear = q; q-&gt;next = head; p-&gt;next = q;//原最后一个元素数据的next指向这个新插入的空间地址 //length++; return true; &#125; /*获得链表长度*/ int GetLength() &#123; return length; &#125; /*插入元素操作*/ bool InsertElement(int index,T e) &#123; LNode* p = head; LNode* q = new LNode(); int j = 0; while ( j &lt; index-1) &#123; p = p-&gt;next; j++; &#125; q-&gt;data = e; q-&gt;next = p-&gt;next; p -&gt; next = q; length++; return true; &#125; /*删除操作（下标型）*/ bool DeleteElement(int index) &#123; LNode* p = head; LNode* q = head-&gt;next; int j = 0; while (j &lt; index-1) &#123; p = p -&gt; next; q = q -&gt; next; j++; &#125; p-&gt;next = q-&gt;next; delete q; length--; return true; &#125; /*删除操作（找值型）*/ bool DeleteElement(T e) &#123; LNode* p = head; LNode* q = head-&gt;next; while (q != head) &#123; if (q-&gt;data == e) &#123; p-&gt;next = q-&gt;next; delete q; length--; return true; &#125; p = p-&gt;next; q = q-&gt;next; &#125; return false; &#125; /*清空链表操作*/ bool ListClean() &#123; length = 0; LNode* p = head-&gt;next; LNode* q; while (p-&gt;next != head)//定位到头结点之前，清空初头结点的外的其他数据空间 &#123; q = p -&gt; next; delete p; p = q; &#125; head-&gt;next = head; return true; &#125; /*合并操作*/ bool ListCombine(CLkList* s) &#123; LNode* t_head_of_s = s-&gt;head; s-&gt;rear-&gt;next = head-&gt;next; head-&gt;next = t_head_of_s-&gt;next; length += s-&gt;length; delete s-&gt;head; return true; &#125; /*遍历操作*/ void Traverse(void(*fb)(T &amp; t)) &#123; LNode* p = head-&gt;next;//从头结点开始遍历每一个元素的data while (p != head) &#123; fb(p-&gt;data); p = p-&gt;next; &#125; &#125;private:&#125;;template&lt;typename T&gt;void Print(T&amp; e) &#123; cout &lt;&lt; e &lt;&lt; " ";&#125;int main() &#123; CLkList&lt;char&gt; list; cout &lt;&lt; "后面插入了一个a数据" &lt;&lt; endl; list.push_back('a'); list.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "后面插入了一个b数据" &lt;&lt; endl; list.push_back('b'); list.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "后面插入了一个c数据" &lt;&lt; endl; list.push_back('c'); list.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "后面插入了一个d数据" &lt;&lt; endl; list.push_back('d'); list.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "在2号位置插入p数据" &lt;&lt; endl; list.InsertElement(2, 'p'); list.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "删除测试 " &lt;&lt; endl; cout &lt;&lt; "2号位置的数据被删除了" &lt;&lt; endl; list.DeleteElement(2); list.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "数据a删除了" &lt;&lt; endl; list.DeleteElement('a'); list.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "数据b删除了" &lt;&lt; endl; list.DeleteElement('b'); list.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "list2: " &lt;&lt; endl; CLkList&lt;char&gt; list2; cout &lt;&lt; "后面插入了一个v数据" &lt;&lt; endl; list2.push_back('v'); list2.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "后面插入了一个n数据" &lt;&lt; endl; list2.push_back('n'); list2.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "后面插入了一个m数据" &lt;&lt; endl; list2.push_back('m'); list2.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "list2合并到list" &lt;&lt; endl; list.ListCombine(&amp;list2); cout &lt;&lt; "合并后：" &lt;&lt; endl; list.Traverse(Print); cout &lt;&lt; endl; //清空list list.ListClean(); cout &lt;&lt; "清空完成" &lt;&lt; endl; &#125; 销毁链表与清空链表的区别： 销毁链表 清空链表 具体解释 包括头结点全部清空全部delete 保留头结点其他数据元素全部delete清空 产生的后果 头指针丢失，链表无法使用 清空链表后，保留了头结点，只是元素被清空了（即链表回到初始空表状态）还可以使用。 –（本文完）&lt;原创&gt;]]></content>
      <categories>
        <category>代码学习</category>
        <category>数据结构学习</category>
      </categories>
      <tags>
        <tag>学习总结</tag>
        <tag>数据结构</tag>
        <tag>数据结构-学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[C++进阶学习总结-(1.2)auto、头文件防卫]]></title>
    <url>%2F2019%2F06%2F18%2FC%2B%2B%E8%BF%9B%E9%98%B6%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-(1.2)auto%E3%80%81%E5%A4%B4%E6%96%87%E4%BB%B6%E9%98%B2%E5%8D%AB%2F</url>
    <content type="text"><![CDATA[Auto auto：变量的自动类型推断。 可以在声明变量的时候根据变量初始值的类型自动为此变量选择匹配的类型。（声明时要初始化） 自动推断发生在编译期间，所以使用auto不会造成程序效降低。 头文件防卫式声明 语法： 123456#ifndef _文件名_H#define _文件名_H内容#endif 为什么要用到头文件防卫式声明？ 目的：为了防止头文件中多重、重复定义内容。 情景假设： 假设一个工程里面有两个个头文件.h文件。里面都有自己的内容 123//head1.hint number1 = 8； 123//head2.hint number2 = 5; 1234567891011//main.cpp#include&lt;iostream&gt;#include"head1.h"#include"head2.h"using namespace std;int main()&#123; cout &lt;&lt; number1 &lt;&lt; endl; cout &lt;&lt; number2 &lt;&lt; endl;&#125; 编译运行情况： 假设在head2.h也include了head1.h，且在main.cpp里面也分别include了head1.h和head2.h再进行编译就会出现： 错误原因：出现了number1重复定义的错误，为啥呢？因为在执行main.cpp文件编译的时候已经对head1.h里面的内容进行了编译定义，但到了head2.h的文件的时候又include了head1.h意味着又重复定义了一次head1.h里面的内容从而造成head1.h里的number1重复定义的错误。 如何解决？—-对头文件进行防卫式定义 即对head1.h文件编辑 1234567//head1.h#ifndef _HEAD1_H//如果head1.h没有被定义那么就执行下面的内容#define _HEAD1_H//定义head1.hint number1 = 8；#endif//结束如果 当main.cpp执行编译操作的时候head1.h是没有定义的。所以#ifndef下面的内容将被执行即先定义head1.h文件。但到了include”head2.h”的时候发现head2.h里面也有include“head1.h”但此时head1.h已经被定义了，故#ifndef不成立下面的内容就没有被执行了，从而避免了头文件重复定义的情况。 结论：所以以后定义头文件的时候都可以进行防卫式定义然后就可以随便include定义的头文件了避免这些错误了。 –(本文完)&lt;原创&gt;]]></content>
      <categories>
        <category>代码学习</category>
        <category>C++学习</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>学习总结</tag>
        <tag>C++学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[C++进阶学习总结-(1.1)命名空间]]></title>
    <url>%2F2019%2F06%2F17%2FC%2B%2B%E8%BF%9B%E9%98%B6%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-(1.1)%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4%2F</url>
    <content type="text"><![CDATA[命名空间的基本概念简介基本概念 命名空间就是为了防止名字冲突引入的一种机制。系统中可以定义多个命名空间，每个命名空间都有自己的名字，不可以同名。 可以把命名空间看成一个作业域，在这个命名空间定义的函数，跟你另外一个命名空间里定义的函数，即便同名，也互不影响。 命名空间定义： 1234namespace 命名空间名&#123; void fb()&#123;&#125;//函数 ....&#125; 命名空间的定义可以不连续，甚至可以写在多个文件中，如果以为没有定义这个命名空间，那么相当于定义命名空间，如果已经定义了，那么就算打开这个命名空间并可以往里面添加新成员的声明； 情形 假设同一个工程里面有两个project.cpp和project2.cpp文件并分别给两个程序员去编写，在编写过程中张三和李四都定义了同名、返回值相同、参数也相同的void Print()函数，在编译时将会出现： 找到一个或多个多重定义的符号 void_cdecl Print(void)已在project2.obj中定义的错误 如何去解决这种问题呢？分别去改函数名或许是个好方法，但是如果这样的情况多了起来难免就太麻烦了。这里就可以用命名空间来解决具体： 123456//project1.cppnamespace ZhangSan &#123; void Print() &#123; cout &lt;&lt; "这是张三的Print函数" &lt;&lt; endl; &#125;&#125; 这样就解决了这种重名的问题。如果要调用张三的这个同名函数就可以用 命名空间名::实体名（函数名）的方法调用张三的Print函数 （其中“ : : “是作用域运算符）。 12345int main() &#123; ZhangSan::Print();//张三的 Print();//李四的&#125; 运行情况： 但是每次调用的时候都要用命名空间名::实体名（函数名）的方法岂不是也太麻烦了。 所以这里就要用上using关键字了，只要在头文件引入语句下面加入： using namespace ZhangSan就可以了 1234567891011#include&lt;iostream&gt;#include"project2.h"//张三命名空间定义所在的头文件using namespace std;using namespace ZhangSan;//使用的张三的命名空间int main() &#123; Print();//张三的&#125; 运行情况: –(本文完)&lt;原创&gt;]]></content>
      <categories>
        <category>代码学习</category>
        <category>C++学习</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>学习总结</tag>
        <tag>C++学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据结构学习总结-(2.5)链表存储结构的算法]]></title>
    <url>%2F2019%2F06%2F17%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%882.5%EF%BC%89%E9%93%BE%E8%A1%A8%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84%E7%9A%84%E7%AE%97%E6%B3%95%2F</url>
    <content type="text"><![CDATA[链表储存结构 链表（LinkedList） 定义: 每个元素用一个指针（以存储下一个数据的地址）相互串联起来为存储方式的物理存储结构 对应线性表操作： 前插数据元素 Insert_Front() 后插数据元素 Push_back() 插入数据 Insert_Element() 删除数据 Delete_Element() 获得数据 Get() 设置数据 Set() 遍历链表 Traverse() …… 对应一些算法实现思路 插入操作： 思路：先通过移动指针获得要插入位置前一个元素的地址，然后创建一个新的元素空间让要插入的数据对其进行赋值，然后将前一个数据的next指针指向这个新空间的地址，而原来next指针指向的地址赋值给新空间的next指针 具体实现： 123456789101112131415bool InsertElement(int index, T e) &#123; LNode* p = head;//这里的p是指向头结点的指针，目的是要从第一个数据开始往下算下标 int j = 0; while (p &amp;&amp; j &lt; index-1)//定位到要插入元素位置的前一个元素（即：寻找前驱结点） &#123; p = p-&gt;next; ++j; &#125; LNode* s = new LNode();//创建一个链表数据空间 s-&gt;data = e;//把要插入的数据放入这个空间 s-&gt;next = p-&gt;next;//这个新的空间的下一个指针地址是上一个元素的下一个元素地址 p-&gt;next = s;//上一个元素的下一个指针地址变为新空间的地址 return true; &#125; 删除操作： 思路：根据要删除的位置的下标先让一个指针定位到这个位置的前一个元素。这时要先创建一个临时的指针指向将删除的元素的地址（此步目的是获得下一个元素的地址，因为删除后不能获得要删除元素next指针的地址），然后将待删除的元素的前一个元素的next指针等于这个临时指针的next指针，最后delete这个临时指针。 具体实现： 1234567891011121314bool DeleteElement(int index) &#123; LNode* p = head;//定位到头结点 int j = 0;//从第0个元素开始移动指针 while (p &amp;&amp; j &lt; index - 1) &#123;//找到要删除元素数据的前一个位置 p = p-&gt;next; ++j; &#125; LNode* q = p-&gt;next;//用一个临时指针存储要删除数据元素的位置（目的为了获取待删除数据元素的下一个数据元素的位置） p-&gt;next = q-&gt;next;//把前一个数据元素的下一个指针地址存储 delete q;//释放临时指针（即：要删除数据元素）的空间 length--; return true; &#125; 链表存储结构代码实现情况： 前插操作（完成） bool InsertFront(T e) 后插操作（完成） bool push_back(T e) 插入操作（完成） bool InsertElement(int index, T e) 删除操作（完成） bool DeleteElement(int index) 获得操作（完成） bool Get(int index,T&amp; e) 修改操作（完成） bool Set(int index, T e) 遍历操作（完成） void Traverse(void(*fb)(T&amp; t)) 代码详细123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192#include&lt;iostream&gt;using namespace std;template&lt;typename T&gt;class LkList&#123; struct LNode &#123; T data;//数据 LNode* next;//指向下一个数据的指针 &#125;; LNode* head;//头指针 int length;public: /*构造函数*/ LkList() &#123; head = new LNode(); length = 0; if (!head)throw"No Memory";//若没有new出来就抛出异常 head-&gt;next = 0; &#125; /*获得数据操作*/ bool Get(int index,T&amp; e) &#123; LNode* p = head-&gt;next;//这里的p指向的下一个元素的头指针 int j = 1; while (p &amp;&amp; j &lt; index) &#123; p = p-&gt;next;//把p的指针往后一个元素头指针移动 ++j; &#125; if (!p || j &gt; index) return false; e = p-&gt;data;//获得数据 return true; &#125; /*插入元素操作*/ bool InsertElement(int index, T e) &#123; LNode* p = head;//这里的p是指向头结点的指针，目的是要从第一个数据开始往下算下标 int j = 0; while (p &amp;&amp; j &lt; index-1)//定位到要插入元素位置的前一个元素（即：寻找前驱结点） &#123; p = p-&gt;next; ++j; &#125; if (!p || j &gt; index) return false; LNode* s = new LNode();//创建一个链表数据空间 s-&gt;data = e;//把要插入的数据放入这个空间 s-&gt;next = p-&gt;next;//这个新的空间的下一个指针地址是上一个元素的下一个元素地址 p-&gt;next = s;//上一个元素的下一个指针地址变为新空间的地址 length++; return true; &#125; /*删除元素操作*/ bool DeleteElement(int index) &#123; LNode* p = head;//定位到头结点 int j = 0;//从第0个元素开始移动指针 while (p &amp;&amp; j &lt; index - 1) &#123;//找到要删除元素数据的前一个位置 p = p-&gt;next; ++j; &#125; if (!p || j &gt; index) return false; LNode* q = p-&gt;next;//用一个临时指针存储要删除数据元素的位置（目的为了获取待删除数据元素的下一个数据元素的位置） p-&gt;next = q-&gt;next;//把前一个数据元素的下一个指针地址存储 delete q;//释放临时指针（即：要删除数据元素）的空间 length--; return true; &#125; /*前插操作*/ bool InsertFront(T e) &#123; LNode* q = new LNode();//创建一个新数据空间 if (!q)return false; q-&gt;data = e;//对要插入的数据进行赋值到这个空间的data q-&gt;next = 0;//避免第一个数据next指针出现野指针的问题 q-&gt;next = head-&gt;next;//与头结点相连 head-&gt;next = q;//这个next指针指向第二个数据的位置 length++; return true; &#125; /*往后插入操作*/ bool push_back(T e) &#123; LNode* p = head;//从头结点开始让指针指向最后一个数据元素的地址 LNode* q = new LNode(); int j = 0; while (p-&gt;next)//如果p-&gt;next为空指针，意味着找到了最后一个数据元素的地址 &#123; p = p-&gt;next; &#125; if (!p)return false; q-&gt;data = e;//进行data赋值 q-&gt;next = 0;//因为是后插，说明后面没有数据元素地址，让这个空间的next指针赋值为0 避免野指针问题 p-&gt;next = q;//原最后一个元素数据的next指向这个新插入的空间地址 length++; return true; &#125; /*设置操作*/ bool Set(int index, T e) &#123; LNode* p = head;//从头结点开始寻找要修改的位置 int j = 0; while (p &amp;&amp; j &lt; index) &#123; p = p-&gt;next; ++j; &#125; if (!p || j &gt; index) return false; p-&gt;data = e;//数据进行修改 return true; &#125; /*遍历操作*/ void Traverse(void(*fb)(T&amp; t)) &#123; LNode* p = head-&gt;next;//从头结点开始遍历每一个元素的data while (p) &#123; fb(p-&gt;data); p = p-&gt;next; &#125; &#125;private:&#125;;template&lt;typename T&gt;void Print(T&amp;t) &#123; cout &lt;&lt; t &lt;&lt; " ";&#125;int main() &#123; LkList&lt;char&gt; List; cout &lt;&lt; "前插了一个A " &lt;&lt; endl; List.InsertFront('A'); List.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "前插了一个B " &lt;&lt; endl; List.InsertFront('B'); List.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "后插了一个C " &lt;&lt; endl; List.push_back('C'); List.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "在第4个位置插入了O " &lt;&lt; endl; List.InsertElement(4, 'O'); List.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "在第4个位置插入了G " &lt;&lt; endl; List.InsertElement(4, 'G'); List.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "删除了第2位的元素 " &lt;&lt; endl; List.DeleteElement(2); List.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "把第3位的数据修改成I" &lt;&lt; endl; List.Set(3,'I'); List.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "获得第4位的数据 " &lt;&lt; endl; char ch; List.Get(4, ch); cout &lt;&lt; ch &lt;&lt; endl;&#125; –（本文完)&lt;原创&gt;]]></content>
      <categories>
        <category>代码学习</category>
        <category>数据结构学习</category>
      </categories>
      <tags>
        <tag>学习总结</tag>
        <tag>数据结构</tag>
        <tag>数据结构-学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据结构学习总结-(2.4)初识链表]]></title>
    <url>%2F2019%2F06%2F16%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%882.4%EF%BC%89%E5%88%9D%E8%AF%86%E9%93%BE%E8%A1%A8%2F</url>
    <content type="text"><![CDATA[链表基本概念 结点包括数据域和指针域。 链表是有n个结点链结成，第一个结点的存储位置叫做头指针，最后一个结点的指针为“空”。 相较于顺序表存储结构的优点： 不用定义时规定长度。 存储的元素个数不受限制。 插入和删除元素时，不用移动其他元素。 链表的头指针和头结点 基本概念 头指针：链表中第一个结点的储存位置。 头结点：在单链表的第一个结点前附设的一个结点。 头指针 头结点 若链表有头结点，则是指向头结点的指针；若没有则是链表指向第一个结点的指针 头结点是为了操作的统一和方便而设立的，放在第一个结点之前 其数据域一般无意义（可以存储链表的长度） 头指针具有表示作用，所以常常有头指针表示链表的名字 有了头结点，在第一个结点前插入和删除第一个结点时，操作与其他结点的操作就统一了 无论链表是否为空，头指针均不为空。头指针是链表的必要元素 头结点不一定是链表的必须要素 链表存储结构 链表存储结构的特点是如何将数据域与“指标”（指针域）配对，以及指示下一条数据的内存位置。 链表存储结构中，数据存储在内存中分散的位置。各个数据由一个指针相互连接 一个数据中的指针域存放的是下一个数据的地址。 由于数据储存在不同的位置，每一个数据只能通过指针域中的指针来访问 删除：删除元素时只需将前一个数据的指针域指向要删除数据的下一个数据的地址即可，从而避免了顺序表存储结构多次的数据调换的麻烦。 添加：添加只需把要添加的位置的前一个数据的指针指向新数据，再让新数据的“指标”指向后一个数据的地址即可。 –（本文完）]]></content>
      <categories>
        <category>代码学习</category>
        <category>数据结构学习</category>
      </categories>
      <tags>
        <tag>学习总结</tag>
        <tag>数据结构</tag>
        <tag>数据结构-学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据结构学习总结-（2.3）顺序表存储结构代码、算法实现]]></title>
    <url>%2F2019%2F06%2F15%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%882.3%EF%BC%89%E9%A1%BA%E5%BA%8F%E8%A1%A8%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81%E3%80%81%E7%AE%97%E6%B3%95%E5%AE%9E%E7%8E%B0%2F</url>
    <content type="text"><![CDATA[顺序表储存结构 顺序表(SqList) 定义： 顺序表存储结构是一个以连续空间地址存储为方式的物理结构 实现线性表相应操作： SqList（） 初始化线性表：创建一个空的线性表List SqList.InsertElement（index ， e） 在线性表List的index下标处插入元素e SqList.DeleteElement（ index， *e) 删除线性表List中的第i个元素，并返回删除元素指针e SqList.GetLength（） 获得线性表的长度 SqList.DeleteAllElement（） 清空线性表 SqList.find（e） 查找线性表中的元素e ………. 一些基础算法的实现思路 插入算法： 思路：根据想要插入的下标为准，用循环各各数值往后移动（即：相互覆盖赋值）空出指定下标进行插入赋值。从最后一个元素开始往后赋值 具体实现： 12345678910void InsertElement(int index, Datas t) &#123; length++;//因为要插入一个新的元素，故实际长度要加1 for (int i = length; i &gt; index; i--) &#123;//先把后面的元素全部往后覆盖赋值 datas[i] = datas[i - 1]; &#125; datas[index] = t;//在目标index位置插入新元素 &#125; 删除算法： 思路：根据要删除元素的下标为目标往前覆盖赋值。 具体实现： 1234567void DeleteElement(int index) &#123; for (int i = index; i &lt; length-1; i++) &#123; datas[i] = datas[i + 1]; &#125; length--;//每删除一个length（实际长度）将减少 &#125; 扩容： 思路：先判断是否是否满了，（即：用最大容量与实际长度相互比较如果相等那么就算满了），确定满容后先重新获得一个跟大的空间容量，然后把原来的线性表数组对其进行赋值。Delete原线性表数组，地址等于新扩容后的地址，完成扩容操作。 具体实现： 1234567891011121314if(length == capacity)//判断使用扩容的时机void realloc() &#123; T* p = new T[2 * capacity];//最大容量扩大两倍 for (int i = 0; i &lt; length; i++) &#123;//把原顺序表赋值到新顺序表 p[i] = datas[i]; &#125; delete[]datas;//清空原线性表里的元素 datas = p;//把新扩容后线性表的地址赋给datas p = NULL;//避免临时指针p变为野指针 capacity *= 2;//总容量扩大 &#125; 根据线性表用顺序存储结构实现的操作完成情况： 增加元素（完成） bool Push_back(T) 查找元素（完成） bool GetElement(int index,T&amp;c) 扩容（完成） bool realloc() 删除元素（完成） bool DeleteElement(int index) 插入元素(完成) bool InsertElement(int index, T t) 清空元素（完成）&lt;待完善修改&gt; bool DeleteAllElement() 代码详细：123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198#include&lt;iostream&gt;#define MAX_SIZE 1 //定义最大容量using namespace std;template&lt;typename T&gt;class SqList&#123;private: T* datas; //线性表 int length = 0;//实际容量 int capacity;//总容量public: /*构造函数*/ SqList() &#123; capacity = MAX_SIZE;//总容量等于最大容量（进行初始化） datas = new T[capacity]; cout &lt;&lt; "初始化成功！！！" &lt;&lt; endl; &#125; /*获得总容量*/ int GetLength() &#123; return length; &#125; /*查找并取值操作*/ bool GetElement(int index, T&amp; c) &#123; if (index &lt; 0 || index &gt; length) return false; c = datas[index]; return true; &#125; /*增加元素操作*/ bool Push_back(T NewElem) &#123; if (length == capacity)//判断顺序表是否满了 &#123;//如果满了调用扩容操作 if(!realloc())//如果扩容失败那么Push_back也失败 return false; &#125; datas[length] = NewElem; length++; return true; &#125; /*设置元素操作*/ bool SetElement(int index, T t) &#123; if (index&lt;0 || index&gt;length)//判断下标是否输入正确 return false; datas[index] = t; return true; &#125; /*插入元素操作*/ bool InsertElement(int index, T t) &#123; if (index&lt;0 || index&gt;length)//判断下标是否输入正确 return false; length++;//因为要插入一个新的元素，故实际长度要加1 if (length == capacity)//判断顺序表是否满了 &#123;//如果满了调用扩容操作 if (!realloc())//如果扩容失败那么Push_back也失败 return false; &#125; for (int i = length; i &gt; index; i--) &#123;//先把后面的元素全部后退 datas[i] = datas[i - 1]; &#125; datas[index] = t;//在目标index位置插入新元素 return true; &#125; /*删除元素操作*/ bool DeleteElement(int index) &#123; if (index&lt;0 || index&gt;length)//判断下标是否输入正确 return false; for (int i = index; i &lt; length-1; i++) &#123; datas[i] = datas[i + 1]; &#125; length--;//每删除一个length（实际长度）将减少 return true;//删除动作完成后返回true &#125; /*清空元素操作*/ bool DeleteAllElement() &#123; int len = length; for (int i = 0; i &lt; len; i++) &#123; DeleteElement(0); &#125; return true; &#125; /*查找元素操作*/ int find(T e, int pos = 0) &#123; for (int i = pos; i &lt; length; i++) &#123; if(datas[i] == e) return i; &#125; return -1; &#125;private: /*扩容操作*/ bool realloc() &#123; T* p = new T[2 * capacity];//最大容量扩大两倍 cout &lt;&lt; "扩容成功！！！" &lt;&lt; endl; if (!p)return false; for (int i = 0; i &lt; length; i++) &#123;//把原顺序表赋值到新顺序表 p[i] = datas[i]; &#125; delete[]datas;//清空原线性表里的元素 datas = p;//把新扩容后线性表的地址赋给datas p = NULL;//避免临时指针p变为野指针 capacity *= 2;//总容量扩大 return true;//更换扩容操作完成后宣布扩容操作成功 &#125;&#125;;//打印顺序表操作template&lt;typename T&gt;//模版void Print(SqList&lt;T&gt;&amp; L) &#123; T e; for (int i = 0; i &lt; L.GetLength(); i++) &#123; L.GetElement(i, e); cout &lt;&lt; e &lt;&lt; " "; &#125; cout &lt;&lt; endl;&#125; int main() &#123; SqList&lt;char&gt; List; char ch; if (!List.GetElement(1, ch)) cout &lt;&lt; "未找到" &lt;&lt; endl; cout &lt;&lt; "加入A" &lt;&lt; endl; List.Push_back('A'); Print(List); cout &lt;&lt; "加入B" &lt;&lt; endl; List.Push_back('B'); Print(List); cout &lt;&lt; "修改下标为1的B为G" &lt;&lt; endl; List.SetElement(1, 'G'); Print(List); cout &lt;&lt; "加入C" &lt;&lt; endl; List.Push_back('C'); Print(List); cout &lt;&lt; "加入D" &lt;&lt; endl; List.Push_back('D'); Print(List); cout &lt;&lt; "在下标为2的位置插入O" &lt;&lt; endl; List.InsertElement(2, 'O'); Print(List); cout &lt;&lt; "删除下标为1的G" &lt;&lt; endl; List.DeleteElement(1); Print(List); cout &lt;&lt; "寻找M的下标为： " &lt;&lt; List.find('M') &lt;&lt; endl; cout &lt;&lt; "清空了所有元素" &lt;&lt; endl; List.DeleteAllElement(); cout &lt;&lt; "加入F" &lt;&lt; endl; List.Push_back('F'); Print(List); cout &lt;&lt; "寻找A的下标为： " &lt;&lt; List.find('A') &lt;&lt; endl; cout &lt;&lt; "在下标9位置插入G" &lt;&lt; endl; List.InsertElement(9, 'G'); Print(List);&#125; –(本文完)&lt;原创&gt;]]></content>
      <categories>
        <category>代码学习</category>
        <category>数据结构学习</category>
      </categories>
      <tags>
        <tag>学习总结</tag>
        <tag>数据结构</tag>
        <tag>数据结构-学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[大学学习个人计划及路线规划]]></title>
    <url>%2F2019%2F06%2F15%2F%E5%A4%A7%E5%AD%A6%E5%AD%A6%E4%B9%A0%E4%B8%AA%E4%BA%BA%E8%AE%A1%E5%88%92%E5%8F%8A%E8%B7%AF%E7%BA%BF%E8%A7%84%E5%88%92%2F</url>
    <content type="text"><![CDATA[Welcome to my blog, enter password to read. Incorrect Password! No content to display! U2FsdGVkX19FOPxaONz2uatCnrdOgjGeEByFrWokFEZlYo0XiBmqR5sgJEO3cEIaBaSiEuLZ0heabBfSXT6RNS9TT+Zc3/gFGz/xCpbJ64qA4BK1UeDgf9W8DvvG97l96HeMY8JWHz1Yo1IOdWvyW0x0XjkmYDjBbQNzasoxgtdPjY7/GmYL5lIVmv15rOxUoziL/KML+WP5vtfTnkLQDYtBJA8KzMw0huz5VPTKh3+bOFj9ZOZkrOy5jO01gzGQv8MpLaxQjzOCdvyy3VgJCyw27EXoJ+hTHN/Okkjb4ADYpEpX2bKCsL5TkDrLpl7ceU+Fy8ox+nBaqsP9ooJjTsUQoU6UFhtVISvXYpY18WUKX3b28Z6Wu6u3hb6I6iMZgjzcZmOhyXx1PuYmzJw+1CFpKEyeQ8g+bhaIipY8igaBKzjmmemjVm7yxO4R0mFLNstktxR5x7xDVhWOdVGIezADFNMMjLobOniuoyOco5e5f8fiwxAaplwlfj8UqtI7q8bimcSsXZfkuM2j1u26/SFC/Ps0fYmJvbSrrgppTyTj+AO7lHOg3b0Rp4xHj1XYVhNEugvlX78SPjQm6mTrHduEPiplnY4NVESzMXtS6flLf7Y2ouQQYAEa1nUvls1tr5LimnzZ4fdTpgGyMVX98BoDZkpM1rep6vBVBOUYqHpaS/K8T6qlT5crSyJw9N26t0oSFDcXMccWV2Jr2cQDwmHTPAYZlM7EO7zIoYf0liqXURF9NlXjkt8XS0TTAiOz6jw0RmfvM6A3rR3RH624o9axfm9MxpvGUgPeTFXPt9b0Sg7CDMWWjC7dwnzEFl+twmA4S2LW0Z3gTpvjQFz5XcDRvPjgM/lGitzRvOEByJnj9LU3XUrzp1Jhcl687wLHW2oevpDxsMOE8nzZMcE5S8XPfj/ndbayymiIyiGOY/VIMurmCzaEj8zDQOi4B3kmqj6ljuNKO50Bwri6zqUgoJ+qvVE6aeELzhBK3cchpfBvs0aQ9Jx29P1S6e30h0oFcTD/In4NT4YgPYuML93o8SUdS+E3GknYlfyE73vfW7OEBkvHzpp7qdIqp4lHc+ohSc2h4TQOLqO7gm8VLExwJRbmrM4oZl0wfS6OeBj3zCtsoz7zHlFR400sJiY4ymwQjjbCe4ExWgjgjDt61svutaqujisHNvdaU37/xHFbziYi6VtfsU0Ip2gFgpvYiUHZ/4dcfiTKkFxorWEsieunR7WgiMPdH3vBsA0a0uis2vZIq4RUOExxWctkEOG083hlJR6YtrZs8yUUChJ6QUtmow==]]></content>
      <categories>
        <category>个人随感</category>
      </categories>
      <tags>
        <tag>学习计划</tag>
        <tag>目标</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据结构学习总结-（2.2）顺序表存储结构]]></title>
    <url>%2F2019%2F06%2F14%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%882.2%EF%BC%89%E9%A1%BA%E5%BA%8F%E8%A1%A8%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84%2F</url>
    <content type="text"><![CDATA[顺序表结构 顺序存储结构的线性表–顺序表 定义：指的是用一段地址连续的存储单元依次存储线性表的数据元素（数组） 顺序表的构成 需要定义线性表的最大存储空间 #define int Max_SIZE = 255; 线性表里需要有统一类型的元素集合 12345678910111213141516#define int MAX_SIZE = 255;//最大存储长度 /*定义线性表*/typedef int ElemType;//给int起一个别名 ElementTypetypedef struct&#123; int num;char* name;&#125;ElementType;/*定义顺序表结构*/typedef struct &#123; ElementType Datas[MAX_SIZE]; int length;//当前长度&#125;SeqList; –(本文完)&lt;待完善&gt;]]></content>
      <categories>
        <category>代码学习</category>
        <category>数据结构学习</category>
      </categories>
      <tags>
        <tag>学习总结</tag>
        <tag>数据结构</tag>
        <tag>数据结构-学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[石膏球（练习）]]></title>
    <url>%2F2019%2F06%2F14%2F%E7%9F%B3%E8%86%8F%E7%90%83%EF%BC%88%E7%BB%83%E4%B9%A0%EF%BC%89%2F</url>
    <content type="text"><![CDATA[]]></content>
      <categories>
        <category>绘画</category>
        <category>练习</category>
      </categories>
      <tags>
        <tag>绘画练习</tag>
        <tag>素描</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java学习心得体会]]></title>
    <url>%2F2019%2F06%2F14%2FJava%E5%AD%A6%E4%B9%A0%E5%BF%83%E5%BE%97%E4%BD%93%E4%BC%9A%2F</url>
    <content type="text"><![CDATA[​ 先简单说一下我对于编程这一门课程个人感受吧，编程说难也难，但说它简单也不过分。难，难在程序编写过程的中的思考方式。简单，就简单在一旦你掌握了基本语句和方法的基础下，有着一个活跃的思维思考能力，程序编程基本都是水到渠成的事。接下来我就简单说下我个人对于Java学习过程中一些心得和学习方法供大家参考一下吧。 心得：​ 首先我在大一是有接触过C++的，刚拿到课本也是一头雾水，看不明白。但在深入学习后，我认为掌握一门程序语言重要的不是知道它具体的语法和规则，而是运用这些语法和规则时的思维。为什么编程的思维很重要呢？这是一个很现实的问题，如今知识更新快，社会发展非常快，意味着编程语言的变化也是很无常的，或许你刚掌握了java语言，市场上就有了更好的编程语言。这就意味着你要继续学习新的语言和知识，如果此时你有一个活跃的编程思维，去接触新的语言学会它会非常容易。 说了这么多思维很重要，那编程思维到底是怎样的？举个小例子：假设你要编程一个超市商品结账的程序，先不要想怎么去编写它。先去思考一下，假如你在超市工作并给一个顾客买的两个东西结账。结账时你要做的事情：你要先识别他买的两个东西单价分别是多少钱，买了多少个，总金额多少，付钱结账最后打印一个小票给这个顾客。简化下来就是：1.识别物品，2.计算金额3.打印信息。好的！接下来用编程来搞定它，1.识别物品从你一大堆的商品信息中找到这个商品的信息。怎么编这个功能？用循环被一个个找。找到同名的商品并得到它的金额信息就可以了。2.计算金额 用循环累加，3.打印出信息 完成本次结账，程序结束。从上面可以看出编这个程序思考方向：明确你程序要干的事情是什么（目的是结账），干这个事情有什么动作（1.识别食品找到对应的价格2.计算总金额3.打印信息），完成这些动作要用什么方法（1.可以用循环来找或其他方法2.每一项金额累加3.打印上面步骤得到的数据信息）。你能在看见一个动作就能想到一个方法去解决它。这就要靠活跃的思维，怎么样用你所学到的编程规则与语句对应想出编写针对它解决它的方法，这就是一个编程的思维。 学习方法：​ 根据上文所述的思维的方式我说下我自己的学习方法供大家参考。 根据自己的想法用自己的话去总结每一章学习的知识：这里要注意！自己每次学习完一章内容尽量地去总结且一定要根据自己的话和自己的思考去总结不能网上复制粘贴一下概念知识。这样做有两个好处：①加固加深你所学的知识，毕竟是根据自己思考后总结出来的、②培养独立的学习思考能力（说白了就是把你学到的知识用自己的理解写一个类似于教材的总结）。 建立编程错误库：其实很多人在编程的时候都会遇到红标报错，这是很正常的事情我们本来就是在试错中才能积累经验。你每一次出错，如果你有时间可以编写一个文档计入每一次遇到的新的报错 并且记录下错因是什么 怎么去解决，这样遇到同样的错误就会有条件反射：“哦！我以前犯过NullPointException的错误，这个错误是空指针错误，原因是有一个对象没有给它空间，应该调用它的构造方法去解决它。”慢慢的就会有独立去解决这些错误的能力了。当然如果你没有多余的时间，也可以让自己的脑子去记下来QWQ。 找个好（ji）朋友进行讨论和思维碰撞：单干是很寂寞的。可以找一个好朋友、舍友进行思维碰撞和讨论。这也很重要！为什么，因为每一个对同一个问题的思考方式、方向都不可能完全相同的。通过思维的交汇，朋友间能相互提高且提高的跟快。再者可以有效的避免一些舍友之间的矛盾。 兴趣主导目标引领：有一个学习目标是很重要的，当然这得取决你不会去排斥它，就如编程。你主动爱它虽然它不会爱你_(:з」∠)_。但你排斥它，它也一定会排斥你这也是必然的。所以学好一门课首先是要培养出对它的兴趣，然后java语言与其他编程语言一样，学习它时候是要用大量的课余时间去练习它。练习也是要有目的的，你可以就按每次作业的要求去学习它，在完成作业后，你也可以自己想一点小玩意供自己去练习。例如：你看见你去钱用的很乱，你就会想编一个记账的小程序，然后就有一个目标出现了。你就会根据你的小目标去主动学习主动搜索你所需要的知识。学习一门课程，只要你站在主动的一方，一切问题就非常好解决了。 从初学就养成良好的编码习惯：这里有些人可能有点疑问，码是我编的，我想咋编就咋编我看得懂就ok这样的思想是很错误的。首先这样做DEbug会非常辛苦，现在是小程序可能体会不出来，当你编写几百行几万行以上的代码就会痛苦的不得了。（个人亲试过：你体验过自己编了700多行代码的程序，de一个bug蹦出一堆bug的快感吗？）。这里我非常推荐一点要写注释！特别是自己想的方法。这样做有两个好处：①这样你编写这个方法的时候思路会比较明确，知道每一步要怎么去做。 ②.对于以后工作写文档会有用处，未来的代码是要给别人看的。 然后我提一点其他的好习惯吧。㈠定义变量的时候命名让它有意义，且在定义的时候一个变量占一行，有关联的变量尽量相近定义。㈡善用回车换行，这里举一个简单的例子吧。每个方法尽量用两个回车来分开。这样做，一是方便注释，二是方便分辨每一个方法体，且美观。这里要注意回车换行适度就行，不宜太多。其他方法可以搜索网上资料。这里就不一一叙述了。养成良好的编程习惯一是方便你自己，二来也对未来工作有非常大的帮助。 尽量先靠自己去想怎么做：不要一遇到不会就百度、参考其他同学的代码。切记！有人会说，参考后我会自己去理解，之后也不是会变成我自己的知识吗？这样说吧：这样做好比你在海上航行，你知道答案了就像你知道目的地的准确位置了，接下来你只需把船开过去即可，但正常情况下，你应该要靠自己的能力去找目的地而不是知道它在哪的前提下去航海。未来工作也是这样。一个是逆向思考，另一个是正向思考。两者是不一样的。所以我们一定要先独立思考。直到真的完全不会了再去参考学习。每次都参考别人的东西去学习，会导致一个依赖感长期的逆向思考，到了真的要自己动手的时候发现一点都不会。这也解释了一些同学看得懂代码，自己动手却什么都不会的原因。 ​ 最后我先明确我的这些理解和见解只供大家去参考。我的一些理解和心得可能没有你们的好，学习方法或许你的也会更棒。所以不要太局限于我的见解QAQ。 –（本文完）&lt;原创&gt;]]></content>
      <categories>
        <category>个人随感</category>
      </categories>
      <tags>
        <tag>学习总结</tag>
        <tag>心得体会</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据结构学习总结-（2.1）线性表的抽象数据类型]]></title>
    <url>%2F2019%2F06%2F14%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%882.1%EF%BC%89%E7%BA%BF%E6%80%A7%E8%A1%A8%E7%9A%84%E6%8A%BD%E8%B1%A1%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%2F</url>
    <content type="text"><![CDATA[线性表 定义： 零个或多个数据元素的有限序列。 特点: 它是一个序列 数据元素之间是有有序的。 数据元素之间是一对一的关系。 有限性 两个数据元素的有限序列称为空表。 常见线性表的操作： 删除 插入 创建 初始化 清空 查找 线性表的抽象数据类型 ADT 线性表(List) Data 线性表数据元素是一个集合{a_1 , a_2 , a_3 , …. , a_n},数据元素的类型DataType（int , char ,…)。 除了第一个（a_1）元素外，每个元素有且只有一个直接的前驱元素。 例如 : a_2的前驱元素是a_1。 除了最后一个（a_n）元素外，每一个元素有且只有一个直接的后继元素。 例如: a_3是a_2的后继元素。 Operation InitList（*List） 初始化线性表：创建一个空的线性表List InsertElement（*List ， index ， e） 在线性表List的index下标处插入元素e DeleteElement（*List ， index， *e) 删除线性表List中的第i个元素，并返回删除元素指针e GetLength（*List） 获得线性表的长度 IsEmpty（*List） 判断线性表是否为空表 ClearList（*List） 清空线性表 ExsitElement（*List ， e） 查找线性表中的元素e endADT 个人理解：​ 在实际上，线性表可以理解为一群人在排队，排队的都是人（数据元素类型相同），然后他们是排成一条线的。首先排队的人肯定是有限的（即：有限性）其次他们每一个人是相互连成一条线的，即一个人跟着一个人有顺序（即：一对一、有序的）。 ​ 再者，这队排队的人，除了第一个人前面没人，最后一个人后面没人外。其中每一个人都是前后都有人的。例如第二个人的前面是第一个人（即：第一个人为第二个人的前驱元素），而第三个人是第二个人的后面（即：第三个人为第二个人的后继元素）。 ​ 这队排队的人是在等待上车的。他们之间可能会有人在中途想上厕所从而离开了队伍（即：删除），又或者有人在后面加入进去了（即：增加），这时检票员也会一一核对信息对照人员表查找每一个人是否到齐了（即：查找），这时上厕所的人回来了因为这队人是有顺序的，所以这位回来的也可以插入原来的位置（即：插入）。 –（本文完）]]></content>
      <categories>
        <category>代码学习</category>
        <category>数据结构学习</category>
      </categories>
      <tags>
        <tag>学习总结</tag>
        <tag>数据结构</tag>
        <tag>数据结构-学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据结构学习总结-（2）第二章预习]]></title>
    <url>%2F2019%2F06%2F12%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%882%EF%BC%89%E7%AC%AC%E4%BA%8C%E7%AB%A0%E9%A2%84%E4%B9%A0%2F</url>
    <content type="text"><![CDATA[问题： 线性表的顺序存储的优点和缺点有哪些？ 线性表的删除和插入算法的思路？ 数组长度和线性表长度的区别？ 顺序存储结构的三大属性？ –（本文未完）]]></content>
      <categories>
        <category>代码学习</category>
        <category>数据结构学习</category>
      </categories>
      <tags>
        <tag>学习总结</tag>
        <tag>数据结构</tag>
        <tag>数据结构-学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据结构学习总结-(1.2)抽象数据类型]]></title>
    <url>%2F2019%2F06%2F12%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%881.2%EF%BC%89%E6%8A%BD%E8%B1%A1%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%2F</url>
    <content type="text"><![CDATA[抽象数据类型数据类型 定义： 计算机中，内存空间是最有限的，不同的类型的数据分配的内存空间大小不同。 例如：在C++ 中 整型占4个字节，双精度浮点数占8个字节等等 数据类型就是指一组性质相同的值和集合及定义在此集合上的一些操作的总称 例如在C/C++语言中的数据类型中是按取值不同分类的数据类型 原子型（不可再分）：不可再分的数据类型。例如：int(整型)、double（双精度浮点型）等等 结构型（可再分）：若干个数据类型（包括原子型和结构型）组成的一个组合。例如：数组，类，结构体（C/C++）等。 抽象数据类型（Abstruct Data Type[ADT]) 定义：是对已有的数据类型进行抽象 抽象数据类型是指一个数据模型及定义在该模型上的一组操作 模板： ADT 抽象数据类型名 Data 数据元素之间的逻辑关系的定义 Operation 操作1 初始条件 操作结果描述 操作2 … 操作n … endADT 个人理解：通过套用上面的模板 解释int（整型数据类型） int（整型） 是以线性结构存储一个int（整型）数据类型占4个字节 Operation 操作1：加法 需要两个数 结果为两个数的和 操作2：减法 需要两个数 结果为两个数的差 操作3：乘法 … 操作4：除法 … 个人总结： 用自己的话简述下列术语： 数据：类似一个或几个人的全部基本信息（姓名、性别、爱好等）。 数据元素：人基本类型里面的单一个姓名、性别等。 数据对象：单一个人的基本信息。 数据结构：数据通过一定的结构、关系（计算方法【算法】）存储起来就是数据结构 例如：上面所说的数据 –多个人的基本信息 一般是用列表格的形式存储的，即所用的是线性逻辑结构存储的。 存储结构（物理结构）：是对逻辑结构在计算机上的表示。即对上面的数据结构在计算机进行实习，如果是顺序存储结构，那么这些个人基本信息可能是用数组储存起来的。 数据类型：例如 整型、浮点型就是一个数据类型，数据类型是一组相同值和其每个值之间特有的关系上的操作的总称。例如整型，它每一个数据元素都是一个整数，他们可以进行加减乘除等操作。 抽象数据类型：类似于数据类型，但是把一些东西抽象化成数据类型。例如游戏角色，它的数据元素（对比就是整型里面的整数）有很多，例如武器、玩家属性等、这个数据类型可以执行的动作有移动攻击等。 数据结构和抽象数据类型的概念与程序设计语言中的数据类型概念的区别 抽象数据类型是对软件设计过程中问题模型抽象出来的逻辑结构和在逻辑结构上的运算。 数据结构是计算机处理元素的组织形式的相互关系。 程序设计语言中的数据类型是已经实现了的数据结构。 即：一个还没有被实现（抽象数据类型）一个是已经实现的了（程序设计语言中的数据类型） 而数据结构是指： 数据的相互之间存在一种或多种特点关系的数据元素的集合。 --（本文完）&lt;待完善&gt;]]></content>
      <categories>
        <category>代码学习</category>
        <category>数据结构学习</category>
      </categories>
      <tags>
        <tag>学习总结</tag>
        <tag>数据结构</tag>
        <tag>数据结构-学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java模拟考心得体会]]></title>
    <url>%2F2019%2F06%2F12%2FJava%E6%A8%A1%E6%8B%9F%E8%80%83%E5%BF%83%E5%BE%97%E4%BD%93%E4%BC%9A%2F</url>
    <content type="text"><![CDATA[今天进行了Java期末考试的模拟考，颇有心得与感触，以本文进行叙述：遇到的问题比较多：例如 &gt;&gt; 与 &gt;&gt;&gt;运算符 这里的意思是这样的 &gt;&gt;有符号的右移这是对二进制的数来说的 int i=8，那么 i &gt;&gt; 2就是二进制往右移两位，即：（0）1000【8】 往右移两位就是 （0）0010【2】，而&gt;&gt;&gt;就是不考虑符号位。 jpane的默认布局是流式布局 （我居然写BorderLayout） 其次是swing包里面的 按钮监听器不太熟 警示： 千万不要在程序设计或填空 题目里面用Shift + F 格式化 切记切记！！ 其他知识点： 按钮监听器重写方法：public void actionPerformed(ActionEvent event) 对于子类可以从父类继承的成员变量，只要子类中声明的成员变量和父类中的成员变量同名时，子类就隐藏了继承的成员变量，子类自己声明定义的方法操作与父类同名的成员变量是指子类重新声明定义的这个成员变量。 –（本文完）]]></content>
      <categories>
        <category>个人随感</category>
      </categories>
      <tags>
        <tag>心得体会</tag>
        <tag>考试</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据结构学习总结-（1.1）数据结构的基本概念]]></title>
    <url>%2F2019%2F06%2F11%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%881.1%EF%BC%89%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5%2F</url>
    <content type="text"><![CDATA[数据结构的基本概念五个基本概念：数据 定义：描述客观事物的符号，是计算机中可以操作的对象。 个人理解：类似于整型，或者一个文件都是可以看出数据。实际情况：例如我输入的账号密码就算是为数据 数据元素 定义：组成数据的、有一定意义的基本单位，在计算机中通常作为整体处理，也被称为记录。 数据元素是数据结构的聚焦点 个人理解：把数据比喻成一个文件夹，那么数据元素就应该是里面的一个不可分的文件（高达模型上面的一个零件？）。 数据项 定义： 一个数据元素可以由若干个数据项组成。 个人理解 ： 数据元素比作对象，那么数据项就类似于对象的属性（成员变量）。例如：上面输入信息时，用户名和密码分别就算是数据项 数据对象 定义： 性质相同的数据元素的集合，是数据的子集。 个人理解：这个应该是介于数据和数据项中间的东西 数据结构（data structure） 定义：数据结构是相互之间存在一种或多种特定关系的数据元素的集合。 数据元素 + 特定关系 = 数据结构 总结：用实际情形来描述，你在一个网站上进行注册，要求填写个人形象，其中里面的姓名、密码就是 数据项 ，每一个数据项组成的就是一个 数据元素 ，数据元素一多起来就统称为：数据 逻辑结构 集合结构 图形结构（图） 树形结构（皇帝与丞民） 线性结构 物理结构 定义：又叫存储结构，是指数据的逻辑结构在计算机中的存储形式。 顺序存储结构 ：类似于数组 ，把数据元素存储在地址连续的储存单元里。 链式存储结构 ：把数据元素存放在任意的存储单元里 类似于数组，但可以不连续，每一个数值直接有一个类似于绳子或链条的东西相互绑定。 类似指针 –（本文完）]]></content>
      <categories>
        <category>代码学习</category>
        <category>数据结构学习</category>
      </categories>
      <tags>
        <tag>学习总结</tag>
        <tag>数据结构</tag>
        <tag>数据结构-学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[石膏立方体（练习）]]></title>
    <url>%2F2019%2F06%2F11%2F%E7%9F%B3%E8%86%8F%E7%AB%8B%E6%96%B9%E4%BD%93%EF%BC%88%E7%BB%83%E4%B9%A0%EF%BC%89%2F</url>
    <content type="text"><![CDATA[]]></content>
      <categories>
        <category>绘画</category>
        <category>练习</category>
      </categories>
      <tags>
        <tag>绘画练习</tag>
        <tag>素描</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[[置顶]欢迎来到ShuHaoHwang的博客！！]]></title>
    <url>%2F2019%2F06%2F11%2F%5B%E7%BD%AE%E9%A1%B6%5D%E6%AC%A2%E8%BF%8E%E6%9D%A5%E5%88%B0%E6%9C%AC%E5%8D%9A%E4%B8%BB%E7%9A%84%E5%8D%9A%E5%AE%A2%EF%BC%81%EF%BC%81%2F</url>
    <content type="text"><![CDATA[本博客将先会以个人的学习总结为主，之后将更新一些技术性的文章，欢迎与博主进行探讨、一起思维碰撞。在吉珠的小伙伴还可以直接找博主哦！ 欢迎留言，博主在有空之余将一一进行查看并回复。]]></content>
  </entry>
</search>
