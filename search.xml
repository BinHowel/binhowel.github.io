<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[C++进阶学习总结-（2.3）拷贝构造函数、继承与访问等级、函数遮蔽]]></title>
    <url>%2F2019%2F07%2F18%2FC-%E8%BF%9B%E9%98%B6%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%882-3%EF%BC%89%E6%8B%B7%E8%B4%9D%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E3%80%81%E7%BB%A7%E6%89%BF%E4%B8%8E%E8%AE%BF%E9%97%AE%E7%AD%89%E7%BA%A7%E3%80%81%E5%87%BD%E6%95%B0%E9%81%AE%E8%94%BD%2F</url>
    <content type="text"><![CDATA[此文章是加密文章，请输入密码后查看. Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>代码学习</category>
        <category>C++学习</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>学习总结</tag>
        <tag>C++学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据结构学习总结-（5.3）二叉树的性质及推导]]></title>
    <url>%2F2019%2F07%2F17%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%885-3%EF%BC%89%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%80%A7%E8%B4%A8%E5%8F%8A%E6%8E%A8%E5%AF%BC%2F</url>
    <content type="text"><![CDATA[¶二叉树的性质 ¶性质1：(层级)📝 在二叉树的第i层上至多有2i-1个结点。 即：下层的结点最多是上层结点的2倍 ¶性质2：(深度)📝 深度为k的二叉树至多有2k-1个结点。 ¶性质3📝： 对于任何一颗二叉树，若2度的结点数有n2个，则叶子结点n0的个数比为n2+1 符号 解释 n0 度数为0的结点数(叶结点数) n 总结点数 n1 度数为1的结点数 n2 度数为2的结点数 B 分枝数 n0 = n2+1 其他公式🔎： 分枝数(B)： B = n1+2n2 B = n - 1(n为总结点数)B 推导过程（n0 = n2+1）📜： 因为 B = n -1① 且 n = n0 + n1 + n2② 所以B = n0 + n1 + n2 - 1 ③所以 n0 = B - n1 - n2 + 1④ 又因为B = n1+2n2 代入④ n0 = n1 + 2n2 - n1 - n2 + 1 得n0 = n2+1 –（本文完）]]></content>
      <categories>
        <category>代码学习</category>
      </categories>
      <tags>
        <tag>学习总结</tag>
        <tag>数据结构</tag>
        <tag>数据结构-学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据结构学习总结-（5.2）二叉树]]></title>
    <url>%2F2019%2F07%2F17%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%885-2%EF%BC%89%E4%BA%8C%E5%8F%89%E6%A0%91%2F</url>
    <content type="text"><![CDATA[¶二叉树(Binary Tree) 二叉树是一个连通的无环图，并且每一个顶点的度不大于3。有根二叉树还要满足根结点的度不大于2。 只有一个称为根的结点 除根外，其余结点分为不相交的子集T1和T2，分别称为T的左子树和右子树，且T1和T2本身又都是二叉树 二叉树与树： 二叉树 树 至多只有两个子树 没有限制子树的个数上限 子树有左右之分，其次序不能颠倒(有序树) 子树可有序也可以无序 具有递归性质 具有递归性质 ¶二叉树的五中基本形态 空树 只有一个根结点的二叉树 只有左子树 只有右子树 完全二叉树 ¶二叉树的优点 普通树相比二叉树代码很难实现 二叉树结构简单，规律性强 所有树都可以转为唯一对应的二叉树 –（本文完）]]></content>
      <categories>
        <category>代码学习</category>
      </categories>
      <tags>
        <tag>学习总结</tag>
        <tag>数据结构</tag>
        <tag>数据结构-学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据结构学习总结-（5.1）树的定义及概念]]></title>
    <url>%2F2019%2F07%2F16%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%885-1%EF%BC%89%E6%A0%91%E7%9A%84%E5%AE%9A%E4%B9%89%E5%8F%8A%E6%A6%82%E5%BF%B5%2F</url>
    <content type="text"><![CDATA[¶树 ¶概念及定义 树是一个有层级结构的数据结构 定义：树是有n（n&gt;=0）个结点组成的有限集合 如果n = 0 ，称为空树 如果n &gt; 0, 则： 有一个特点的称之为为根(root)的结点，它只有直接后继，没有直接前驱。 除根以外的其他结点划分为m(m &gt;= 0)个互不相交的有限集合，T0、T1、…、Tm-1，每个集合又是一颗树，称为根的子树。和根有直接关系的结点分别是这些子树的根。 特点：每个结点有零个或多个子结点；没有父结点的结点称为根结点；每一个非根结点有且只有一个父结点；除了根结点外，每个子结点可以分为多个不相交的子树。 ¶树结构与线性结构 线性结构：一对一 树结构：一对多 线性结构 树结构 第一个元素(无前驱) 根结点(无前驱) 最后一个元素(无后继) 多个叶子结点(无后继) 其他数据元素(一个前驱、一个后继) 树中的其他结点(一个前驱、多个后继) ¶树结构的一些术语 根：唯一没有双亲的结点，其他结点都有唯一的双亲 结点的度：一个结点含有的子树的个数称为该结点的度 树的度：树结构中，最大的结点的度称为树的度 分支结点：度数不为0的结点 叶结点：度数为0的结点 孩子结点/子结点：某个结点的子树的根 双亲结点/父节点：若一个结点含有子结点，则这个结点称为其子结点的父结点 兄弟结点：同一个双亲结点的孩子结点之间互为兄弟结点 结点的祖先：从根到该节点所经分支上的所有节点 子孙：以某节点为根的子树中任一节点都称为该节点的子孙 森林：多个数的集合 子树森林：一个结点的所有子树构成的森林 结点的深度：结点的祖先个数+1 结点的高度：从结点到其子树叶结点经过的最大边数+1，叶结点的高度为1 结点的层次：从根开始定义起，根为第1层，根的子节点为第2层，以此类推 树的高度：高度最大的结点的高度 树的深度：树中结点的最大层次或结点的最大深度 堂兄弟结点：双亲在同一层的节点互为堂兄弟 有序树：每个结点的子树有次序之分 无序树：每个结点的子树没有次序之分 ¶树的类型 ¶树的抽象数据类型 ADT Tree DATA 父子关系 Operator Tree() //初始化 Tree(definition) //从输入definition中创建树 Tree(const Tree &amp; T) //复制树 Node root() // 返回根结点 int depth() //获得树的高度 int size() //获得树的结点个数 Node parent(Node p) //获得结点p的双亲 Node[] children§ //返回结点P的所有孩子 Node[] silbings(parent , p) //返回结点p的所有兄弟 Node find() //查找结点 … endADT –（本文完）]]></content>
      <categories>
        <category>代码学习</category>
        <category>数据结构学习</category>
      </categories>
      <tags>
        <tag>学习总结</tag>
        <tag>数据结构</tag>
        <tag>数据结构-学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据结构学习总结-（4.4.2）查询子串位置二-KMP算法[难点]]]></title>
    <url>%2F2019%2F07%2F14%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%884-4-2%EF%BC%89%E6%9F%A5%E8%AF%A2%E5%AD%90%E4%B8%B2%E4%BD%8D%E7%BD%AE%E4%BA%8C-KMP%E7%AE%97%E6%B3%95-%E9%9A%BE%E7%82%B9%2F</url>
    <content type="text"><![CDATA[¶简单(BF)算法的缺陷 简单算法的实现📝：就让子串与主串进行一个个判断。 例如 “acdcda”中找“cda”那么有：①c先与主串中的‘a’比较不匹配 主串后移、②c与主串中的‘c‘匹配，子串后移让d与主串中的‘b’比较。不匹配主串后移、③c与主串中的‘d’比较，匹配子串后移、④a与主串中的‘c’比较，不匹配,主串后移、⑤c与主串中的‘d’不匹配，主串后移、⑥c与子串中的‘c’匹配,子串后移，d与主串的下一个‘d’匹配，子串再后移，a与主串中的下一个‘a’匹配。找到，返回主串中第二个‘c’的位置。 发现问题​❗️：从上面可以看出，在③开始子串与已经比较过的主串字符又重新比较一次，从而大大的浪费了效率。 ¶KMP算法 正如上面所说的，简单算法，因为在最差的情况下，会进行大量的无意义的比较匹配。而KMP算法的发明者们便想：能否更加比较不匹配所给出的信息，跳过无意义的比较呢？这就是KMP算法的核心。 –（本文未完）&lt;原创&gt;]]></content>
      <categories>
        <category>代码学习</category>
        <category>数据结构学习</category>
      </categories>
      <tags>
        <tag>学习总结</tag>
        <tag>数据结构</tag>
        <tag>数据结构-学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据结构学习总结-（4.4.1）查询子串位置算法一—简单算法]]></title>
    <url>%2F2019%2F07%2F14%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%884-4-1%EF%BC%89%E6%9F%A5%E8%AF%A2%E5%AD%90%E4%B8%B2%E4%BD%8D%E7%BD%AE%E7%AE%97%E6%B3%95%E4%B8%80%E2%80%94%E7%AE%80%E5%8D%95%E7%AE%97%E6%B3%95%2F</url>
    <content type="text"><![CDATA[¶简单(BF)算法的代码实现及思路 算法作用🔍：查找在给定的子串在主串中的位置。例如：子串“llo”在主串“hello”的位置为3。 实现思路💡：BF的算法的核心就是子串对主串逐一比较。所以只需用第一个循环来匹配子串的首字符与主串中的字符是否相等，如果相等那么在对子串后面的字符与此时主串的后面的字符进行比较。 例如：要在“AB CADB CADA BCA”中查找子串“ CADA”则从主串A中第一个开始查找，因为“A”与“ ”不匹配所以子串与主串的下一个字符比较，但也不同所以后移，当到了第三个的时候开始匹配，所以主串的第四个字符与子串第二个比较…主串第五个与子串第三个比较…。但到了主串的第七个字符与子串第4个字符不一样，所以匹配失败，主串后移一位又与子串的第一位开始比较。 具体实现💻: 123456789101112131415161718192021int find(String str) &#123; int j = 0; int k = 0; int n = 0; for (int i = 0; i &lt; size &amp;&amp; j &lt; str.size; i++) &#123; if (this-&gt;str[k] == str.str[j]) &#123; j++; k++; &#125; else &#123; j = 0; n++; k = n; &#125; &#125; if (j &lt;= str.size)return n; return -1; &#125; 实验结果🔑: ¶算法优化🔧： 12345678910111213141516int find(String ch)&#123; int i = 0; int j = 0; while(i &lt; size &amp;&amp; j &lt; ch.size)&#123; if(str[i] == ch.str[j])&#123; i++; j++; &#125;else&#123; i = i + 1 - j; j = 0; &#125; &#125; if(j &lt;= ch.size) return i - j; return -1; &#125; –（本文完）&lt;原创&gt;]]></content>
      <categories>
        <category>代码学习</category>
        <category>数据结构学习</category>
      </categories>
      <tags>
        <tag>学习总结</tag>
        <tag>数据结构</tag>
        <tag>数据结构-学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据结构学习总结-（4.3）实现字符串结构、相关操作代码和实现思路]]></title>
    <url>%2F2019%2F07%2F12%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%884-3%EF%BC%89%E5%AE%9E%E7%8E%B0%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%BB%93%E6%9E%84%E3%80%81%E7%9B%B8%E5%85%B3%E6%93%8D%E4%BD%9C%E4%BB%A3%E7%A0%81%E5%92%8C%E5%AE%9E%E7%8E%B0%E6%80%9D%E8%B7%AF%2F</url>
    <content type="text"><![CDATA[¶字符串结构的实现 具体代码💻： 12345678910111213141516class String&#123; char* str;//字符串 int size;//字符串长度 public: String(const char* ch)&#123; /*计算ch长度*/ char* temp = ch; while(*temp++ != '\0'); str = new char[temp - ch];//创建字符串 size = temp - ch - 1; for(int i = 0; i &lt;= size; i++)str[i] = ch[i]; &#125; .......&#125; 字符串是由字符数组来实现的,所以字符串的构造函数首先要根据const char* ch（传入的字符数组）求得其长度，然后创建足够大的空间，并对其逐一赋值即可完成String类型的创建。 ¶相关简单操作的代码实现和实现思路 返回指定位置指定长度的子串 subString() 实现思路❗️：根据用户输入指定的长度来创建足够大的空间的char* temp用来储存子串，然后用循环从指定位置开始对temp进行赋值，直到长度达到用户给定的长度即可。并在后面补上一个结束符(’\0’),因为这是一个主串中的子串，后尾赋值的时候没有结束符。最后丢入String类型的构造函数中，释放temp的空间，返回新的字符串。 具体代码💻： 1234567891011121314String subString(int pos,int len)&#123; char* temp = new char[len+1]; for(int i = 0,k = pos; i &lt; len;i++,k++)&#123;//对子串进行逐一赋值 temp[i] = this-&gt;str[k]; &#125; temp[len] = '\0';//末尾补上结束符 String str(temp); delete[] temp;//释放堆空间 return str;//返回新的String&#125; 实验结果: 重载运算符+=使其实现字符串的拼接 实现思路❗️:拼接顾名思义，是把两个字符串连起来，所以定义一个new_size用来拼接后的字符串长度，只需分别求左右运算数的size相加即可。然后更加这个new_size长度定义一个新的字符串。之后先对左运算数，进行逐一赋值，然后在对右运算数进行赋值。即可完成拼接。 具体实现💻: 1234567891011121314String&amp; operator+= (const String&amp; str)&#123; int new_size = this-&gt;size + str.size; char* temp = new char[new_size+1];//最后需要一个结束符所以+1 if(!temp)return *this; int i = 0; while(i &lt; this-&gt;size)&#123;temp[i] = this-&gt;str[i]&#125;; for(int k = 0; k &lt;= str.size; k++,i++)&#123; temp[i] = str[k]; &#125; delete[]this-&gt;str; str = temp; size = new_size;&#125; 实验结果: ¶具体完成代码📜： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768#include&lt;iostream&gt;using namespace std;class String &#123;public: char* str; int size;public: /*构造函数*/ String(const char* str) &#123; const char* temp = str; while (*temp++ != '\0'); this-&gt;str = new char[temp - str]; if (!this-&gt;str)throw "内存分配失败"; size = temp - str - 1; for (int i = 0; i &lt;= size; i++)this-&gt;str[i] = str[i]; &#125; /*返回指定位置指定长度的子串*/ String subString(int pos, int len) &#123; if (pos &lt; 0 || pos &gt;= size)throw "指定位置超界"; if (pos + len &gt;= size)throw"待获取子串超界"; char* temp = new char[len + 1]; for (int i = 0, k = pos; i &lt;= len ; i++, k++) &#123; temp[i] = this-&gt;str[k]; &#125; temp[len] = '\0'; String str(temp); delete[]temp; return str; &#125; /*重载运算符+=*/ String&amp; operator+=(const String&amp; str) &#123; int new_size = this-&gt;size + str.size; char* temp = new char[new_size + 1]; if (!temp)return *this; int i = 0; while (i &lt; this-&gt;size) &#123; temp[i] = this-&gt;str[i]; i++; &#125; for (int k = 0; k &lt;= str.size; k++, i++) &#123; temp[i] = str.str[k]; &#125; delete[] this-&gt;str; this-&gt;str = temp; size = new_size; &#125; &#125;;int main() &#123; String str("hello world "); cout &lt;&lt; "原字符串为:" &lt;&lt; str.str &lt;&lt; endl; String str2 = str.subString(2, 3); cout &lt;&lt; "其位置2开始长度为3的字串为 : " &lt;&lt;str2.str &lt;&lt; endl; String str3("ShuHao"); str += str3; cout &lt;&lt; str.str &lt;&lt; endl;&#125; –（本文完）&lt;原创&gt;]]></content>
      <categories>
        <category>代码学习</category>
        <category>数据结构学习</category>
      </categories>
      <tags>
        <tag>学习总结</tag>
        <tag>数据结构</tag>
        <tag>数据结构-学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[C++进阶学习总结-（2.2）类中的static函数/成员变量、类函数const后缀、mutable]]></title>
    <url>%2F2019%2F07%2F12%2FC-%E8%BF%9B%E9%98%B6%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%882-2%EF%BC%89%E7%B1%BB%E4%B8%AD%E7%9A%84static%E5%87%BD%E6%95%B0-%E6%88%90%E5%91%98%E5%8F%98%E9%87%8F%E3%80%81%E7%B1%BB%E5%87%BD%E6%95%B0const%E5%90%8E%E7%BC%80%E3%80%81mutable%2F</url>
    <content type="text"><![CDATA[此文章是加密文章，请输入密码后查看. Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>代码学习</category>
        <category>C++学习</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>学习总结</tag>
        <tag>C++学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据结构学习总结-（4.2）实现字符串strlen和strcpy]]></title>
    <url>%2F2019%2F07%2F10%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%884-2%EF%BC%89%E5%AE%9E%E7%8E%B0%E5%AD%97%E7%AC%A6%E4%B8%B2strlen%E5%92%8Cstrcpy%2F</url>
    <content type="text"><![CDATA[¶实现字符串中的简单操作一 ¶strlen() 作用：返回字符串的长度 实现思路：因为在c/c中字符串是以char*指针来实现的，并且这些字符串中的末尾都有一个‘\0’结束符，所以在c/c中可以利用指针和地址来求得字符串的长度，首先定义一个临时指针然后用待求字符串长度的字符串对其进行赋值，再用循环对这个临时指针进行自加移动，当判断在某个地址中的数据为‘\0’结束符的时候，再让其与原来的字符串相减，即可得到字符串的长度。 具体实现: 123456int strlen(const char* str)&#123; const char* temp = str; while(*temp != '\0')&#123;temp++;&#125; return temp - str;&#125; 实验结果: ¶strcpy() 作用：进行字符串复制操作 实现思路：因为这个函数本身是实现复制操作，所以可以用原字符串对目标字符串进行逐一赋值即可实现。用一个临时指针存储目标字符串，然后用原字符串对这个临时指针进行逐一修改赋值，然后返回目标字符串即可。 具体实现: 123456char* strcpy(char* p,const char* s)&#123; char* temp = p; while((*temp++ = *s++) != 0); return p&#125; 实验结果: ¶错误记录： 在编写strcpy()时，忘记了char*p是一个指针，结果直接运用循环对其进行自加移动赋值修改，然后再返回该指针。 错误代码: 12345char* strcpy(char* p , const char* s)&#123; while((*p++ = *s++) != 0); return p;&#125; 实验结果: 错误总结:上述错误代码中，因为p是一个指针，在循环的时候虽然是进行了逐一修改赋值，但指针也随之移动了，所以结果s不再是指向该字符串的首字符地址，而是指向了未知的末尾地址，从而造成指针p变成野指针。返回的结果也就想当然的是乱码了。 –（本文完）&lt;原创&gt;]]></content>
      <categories>
        <category>代码学习</category>
        <category>数据结构学习</category>
      </categories>
      <tags>
        <tag>学习总结</tag>
        <tag>数据结构</tag>
        <tag>数据结构-学习总结</tag>
        <tag>错误记录</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据结构学习总结-(4.1)字符串]]></title>
    <url>%2F2019%2F07%2F10%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-4-1-%E5%AD%97%E7%AC%A6%E4%B8%B2%2F</url>
    <content type="text"><![CDATA[¶(字符)串类型定义及概念 ¶串的一些概念 以(&quot;Hello world&quot;)为例 主串：即整个字符串被称为主串。 str = “Hello World”；str就是主串 子串：在主串中的一小段。(顺序相同) &quot;llo&quot;是主串“Hello World”的字串、“eH”不是该主串的字串(顺序错了) 位置：某个字符、或字符段的第一个字符位于主串的位置下标。 例如字串“llo”在主串&quot;Hello World&quot;的位置为3 串相等：当两个字符串之间，完全相同(长度相同，每个字符相同且位置相同)称为两个串相等 ”hello world“与“Hello World”不相等(字符不相等) 空串：串长度为为0的字符串被称为空串。 **注意：**空串与空格串不一样，空格串中的空格也算一个字符长度 ¶串的抽象数据类型 ADT String Data：字符序列，以c/c++为例，char*类型数据，字符序列 Operation： bool init(T,char*) //初始化一个字符串 int find(S ,T) //查找字符串中是否存在字串 String strcat(T , S) //拼接字符串 String subStr(S,pos,size) //将s中的pos位置开始size长度的字串获取 bool inserStr(s,pos,T) //将T插入到s的pos位置 bool deleteStr(S,pos,size) //将S的pos位置开始的size长度的字串删除 bool copy(T,S) //将S拷贝给T int size() //获得字符串长度 void clear() //清空字符串 … endADT –（本文完）&lt;原创&gt;]]></content>
      <categories>
        <category>代码学习</category>
        <category>数据结构学习</category>
      </categories>
      <tags>
        <tag>学习总结</tag>
        <tag>数据结构</tag>
        <tag>数据结构-学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[C++进阶学习总结-（2.1）类与构造函数]]></title>
    <url>%2F2019%2F07%2F08%2FC-%E8%BF%9B%E9%98%B6%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%882-1%EF%BC%89%E7%B1%BB%E4%B8%8E%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%2F</url>
    <content type="text"><![CDATA[此文章是加密文章，请输入密码后查看. Incorrect Password! No content to display! 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]]></content>
      <categories>
        <category>代码学习</category>
        <category>C++学习</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>学习总结</tag>
        <tag>C++学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据结构学习总结-（3.5）顺序存储结构队列]]></title>
    <url>%2F2019%2F07%2F06%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%883-5%EF%BC%89%E9%A1%BA%E5%BA%8F%E9%98%9F%E5%88%97%2F</url>
    <content type="text"><![CDATA[¶顺序队列算法即实现思路 ¶顺序储存结构的队列定义(以char类型为例) 实现思路：因为顺序队列是要基于数组来实现队列的操作，所以可以定义两个数值头数值(front)和尾数值(rear)，在创建队列的时候根据capacity(队列容量)的大小创建线性表，然后让头数值和尾数值都为0代表数组下标为0的第一个数据的位置，入队时对rear进行操作移动即可实现，出队只需移动front即可完成出队。 12345678910111213class SqQueue&#123; char* datas;//线性表 int capacity;//队列容量 int front;//队首 int rear;//队尾 public: SqQueue(int c)&#123; capacity = c; datas = new char[capacity]; front = rear = 0; &#125; &#125; ¶顺序队列 入队操作 思路：因为顺序队列是要通过数组来实现队列的数据结构。所以可以先定义两个值分别代表尾数值和头数值，创建队列时，这头尾两个数值均为0，代表为数组第一个元素。入队时只需让下标为尾数值的数组元素进行添值即可。 具体实现： 1234567bool push(T e)&#123; if(rear == capacity) return false; datas[rear] = e; rear++; return true;&#125; 出队操作 思路：直接让头数值进行自加即可实现出队操作 具体实现： 123bool pop()&#123; front++;&#125; 出现一个问题:前面只是实现了基本的队列应该有的操作，如果对其进行出队操作，一定量的数据出队后会照成队列无法使用的情况。为此可以对顺序队列进行改造优化使它成为环状的顺序队列从而可以循环使用。 ¶循环队列 入队操作： 思路：相比顺序队列，循环队列在入队操作时只是对尾数值进行改进使其只能在队列容量之内循环变化。即：rear = (rear+1)%capacity 算法解释：(以容量为5的队列为例) 第一步：push入队一个元素rear让其从初值0加1再取模5【(0+1)%5 = 1%5 = 1】以此类推，第二个数据入队，rear为2…第四个为4。 第二步：当到达尾数值即下标为4的时候再进行上方的运算。即【(4+1)%5 = 5%5=0】重置尾数值为0。 具体实现： 1234567bool push(T e)&#123; if((rear+1)%capacity == front)//满队判断 return false; datas[rear] = e; rear = (rear+1)%capacity; return true;&#125; 满队的处理：这里是用(rear+1)%capacity == front来作为满队判断的，即队首和队尾都只隔了1。例如：当队首为3，队尾为2为满队。因为(2+1)%5 = 3%5 = 3 出队操作 思路：与顺序队列相同，只是队头也要控制在capacity队列容量之内，即front = (front + 1)% capacity。 具体实现： 123456bool pop()&#123; if(front == rear)//空队判断 return false front = (front + 1)% capacity; return true;&#125; ¶具体代码实现： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374#include&lt;iostream&gt;using namespace std;template&lt;typename T&gt; class SqQueue &#123; T* datas; int capacity; int rear; int front;public: /*构造函数*/ SqQueue(int c = 10) &#123; capacity = c; datas = new T[capacity]; rear = front = 0; &#125; /*入队操作*/ bool push(T e) &#123; if ((rear + 1) % capacity == front) return false; datas[rear] = e; rear = (rear+1)%capacity; return true; &#125; /*出队操作*/ bool pop() &#123; if (rear == front) return false; front = (front + 1) % capacity; &#125; void tr(void(*fb)(T&amp; e)) &#123; for (int i = front; i &lt; rear; i++) &#123; fb(datas[i]); &#125; &#125;&#125;;void Print(char&amp; a) &#123; cout &lt;&lt; a &lt;&lt; " ";&#125;int main() &#123; SqQueue&lt;char&gt; s; cout &lt;&lt; "数据a入队了" &lt;&lt; endl; s.push('a'); s.tr(Print); cout &lt;&lt; endl; cout &lt;&lt; "数据b入队了" &lt;&lt; endl; s.push('b'); s.tr(Print); cout &lt;&lt; endl; cout &lt;&lt; "数据c入队了" &lt;&lt; endl; s.push('c'); s.tr(Print); cout &lt;&lt; endl; cout &lt;&lt; "数据d入队了" &lt;&lt; endl; s.push('d'); s.tr(Print); cout &lt;&lt; endl; cout &lt;&lt; "数据e入队了" &lt;&lt; endl; s.push('e'); s.tr(Print); cout &lt;&lt; endl; cout &lt;&lt; "头数据出队了 " &lt;&lt; endl; s.pop(); s.tr(Print); cout &lt;&lt; endl; cout &lt;&lt; "头数据出队了 " &lt;&lt; endl; s.pop(); s.tr(Print); cout &lt;&lt; endl; cout &lt;&lt; "头数据出队了 " &lt;&lt; endl; s.pop(); s.tr(Print); cout &lt;&lt; endl; cout &lt;&lt; "头数据出队了 " &lt;&lt; endl; s.pop(); s.tr(Print); cout &lt;&lt; endl; cout &lt;&lt; "头数据出队了 " &lt;&lt; endl; s.pop(); s.tr(Print); cout &lt;&lt; endl;&#125; 实验结果: –（本文完）&lt;原创&gt;]]></content>
      <categories>
        <category>代码学习</category>
        <category>数据结构学习</category>
      </categories>
      <tags>
        <tag>学习总结</tag>
        <tag>数据结构</tag>
        <tag>数据结构-学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[C++进阶学习总结-(1.7)数据类型转换]]></title>
    <url>%2F2019%2F07%2F04%2FC%2B%2B%E8%BF%9B%E9%98%B6%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-(1.7)%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2%2F</url>
    <content type="text"><![CDATA[此文章是加密文章，请输入密码后查看. Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>代码学习</category>
        <category>C++学习</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>学习总结</tag>
        <tag>C++学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据结构学习总结-（3.4）队列及链式队列的实现]]></title>
    <url>%2F2019%2F07%2F03%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%883-4%EF%BC%89%E9%98%9F%E5%88%97%2F</url>
    <content type="text"><![CDATA[¶队列的基本概念及定义 定义： 队列与栈相似，相比栈的先进后出，队列是先进先出为特征的，队列的增添必须是在队列后边进行添加，删除则在前面，正与它的名字一样，队列这种数据结构跟平常时人们买票排队一样，先去排的会先买到票，后面来的只能先排着队。 特征：先进先出(FIFO,First In First Out) ¶队列的抽象数据类型 ADT Queue Data 线性关系(a1,a2,…,an) Operation bool push(e) 入队操作 bool pop() 出队 T&amp;front() 获得队首数据 bool empty() 判断队列是否为空 void clear() 清空队列 … ¶链式队列实现算法及思路 入队操作 * 思路：因为队列是先进先出的，所以要使一个指针能始终能指向新进来的元素，方便后续出队操作。所以可以先让尾指针的next指针指向这个新入队的元素，然后再让尾指针指向这个元素。 具体代码实现: 123456789101112bool push(T e)&#123; Node* p = new Node; if(!p)return false; p-&gt;data = e; p-&gt;next = nullptr; rear-&gt;next = p; rear = p; return true&#125; 出队操作 思路：先进先出，此时可以直接删除第一个数据，即头结点next指向的数据。但要记住这操作不能在队列为空的情况下使用。 具体代码实现： 1234567891011bool pop()&#123; if(rear == head) return false; Node* p = head-&gt;next; head-&gt;next = p-&gt;next; delete p; return true; &#125; ¶具体代码实现情况： 入队(完成) push(T e) 出队(完成) pop() 是否为空(完成) IsEmpty(); 获得队首元素(完成) getFirst() 清空队列(完成) clear() ¶具体代码： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131#include&lt;iostream&gt;using namespace std;template&lt;typename T&gt;class Queue &#123; struct Node &#123; T data; Node* next; &#125;; Node* head; Node* rear;public: Queue() &#123; head = new Node; head-&gt;next = nullptr; rear = head; &#125; /*入队操作*/ bool push(T e) &#123; Node* p = new Node; p-&gt;data = e; p-&gt;next = nullptr; rear-&gt;next = p; rear = p; return true; &#125; /*出队操作*/ bool pop() &#123; if (head == rear) return false; Node* p = head-&gt;next; head-&gt;next = p-&gt;next; delete p; return true; &#125; /*是否为空*/ bool IsEmpty() &#123; return head == rear; &#125; /*获得首元素*/ T getFirst() &#123; return head-&gt;next; &#125; /*清空队列*/ bool clear() &#123; Node* p = head-&gt;next; Node* q = nullptr; while (p != rear) &#123; q = p; p = p-&gt;next; delete q; &#125; delete rear; rear = head; return true; &#125; void Ta(void(*fb)(T&amp; e)) &#123; Node* p = head; while (p != rear) &#123; p = p-&gt;next; fb(p-&gt;data); &#125; &#125;&#125;;template &lt;typename T&gt; void print(T&amp; e) &#123; cout &lt;&lt; e &lt;&lt; " ";&#125;int main() &#123; Queue&lt;char&gt; q; cout &lt;&lt; "a数据进队了" &lt;&lt; endl; q.push('a'); q.Ta(print); cout &lt;&lt; endl; cout &lt;&lt; "b数据进队了" &lt;&lt; endl; q.push('b'); q.Ta(print); cout &lt;&lt; endl; cout &lt;&lt; "c数据进队了" &lt;&lt; endl; q.push('c'); q.Ta(print); cout &lt;&lt; endl; cout &lt;&lt; "d数据进队了" &lt;&lt; endl; q.push('d'); q.Ta(print); cout &lt;&lt; endl; cout &lt;&lt; "清空队列" &lt;&lt; endl; q.clear(); cout &lt;&lt; "e数据进队了" &lt;&lt; endl; q.push('e'); q.Ta(print); cout &lt;&lt; endl; cout &lt;&lt; "f数据进队了" &lt;&lt; endl; q.push('f'); q.Ta(print); cout &lt;&lt; endl; cout &lt;&lt; "g数据进队了" &lt;&lt; endl; q.push('g'); q.Ta(print); cout &lt;&lt; endl; cout &lt;&lt; "h数据进队了" &lt;&lt; endl; q.push('h'); q.Ta(print); cout &lt;&lt; endl; cout &lt;&lt; "首数据出队了" &lt;&lt; endl; q.pop(); q.Ta(print); cout &lt;&lt; endl; cout &lt;&lt; "首数据出队了" &lt;&lt; endl; q.pop(); q.Ta(print); cout &lt;&lt; endl; cout &lt;&lt; "首数据出队了" &lt;&lt; endl; q.pop(); q.Ta(print); cout &lt;&lt; endl;&#125; 实验结果: –（本文完）&lt;原创&gt;]]></content>
      <categories>
        <category>代码学习</category>
        <category>数据结构学习</category>
      </categories>
      <tags>
        <tag>学习总结</tag>
        <tag>数据结构</tag>
        <tag>数据结构-学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[栈的应用-括号匹配]]></title>
    <url>%2F2019%2F07%2F02%2F%E6%A0%88%E7%9A%84%E5%BA%94%E7%94%A8-%E6%8B%AC%E5%8F%B7%E5%8C%B9%E9%85%8D%2F</url>
    <content type="text"><![CDATA[¶括号匹配 对一段字符串进行检查和判断括号是否匹配。例如：{（）[]{}} 匹配。即出现一个左括号就一定要一个相对应的右括号与其匹配。 实现思路：可以对一个字符串进行扫描和检查，如果是左括号那么就入栈，如果遇到一个与之匹配的右括号，那么就使其出栈。最后判断栈是否为空从而判断括号是否匹配即可。 以（{heheda}[123]())为例。 第一步扫描上方字符串。发现第一个左括号‘(’使其入栈，第二个'{'入栈，发现'}'为右括号，与栈顶数据进行匹配发现，此时栈顶就是'{'与之匹配那么就出栈。（类似消消乐） ¶具体代码实现： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556#include"LKStack.h"#include&lt;iostream&gt;bool CheckStr(string str) &#123; LkStack&lt;char&gt; stack; cout &lt;&lt; "字符串：" &lt;&lt; str &lt;&lt; " "; for (int i = 0; i &lt; str.length(); i++) &#123; /*如果是左括号那么就入栈，等待匹配*/ if (str[i] == '[' || str[i] == '&#123;' || str[i] == '(') &#123; stack.push_back(str[i]); &#125; /*如果是右括号那么就对栈顶数据进行判断，如果匹配那么就使此时的栈顶数据出栈*/ if (str[i] == ']' || str[i] == '&#125;' || str[i] == ')') &#123; /*排除只出现右括号没出现左括号的情况，和多出有右括号的情况*/ if (stack.isEmpty()) &#123; cout &lt;&lt; "括号不匹配！" &lt;&lt; endl; return false; &#125; if (!stack.isEmpty() &amp;&amp; str[i] == ']' &amp;&amp; stack.GetTop() == '[') stack.pop(); if (!stack.isEmpty() &amp;&amp; str[i] == '&#125;' &amp;&amp; stack.GetTop() == '&#123;') stack.pop(); if (!stack.isEmpty()&amp;&amp; str[i] == ')' &amp;&amp; stack.GetTop() == '(') stack.pop(); &#125;&#125; /*如果空栈那么就说明左括号全部匹配完毕，括号匹配成功，反之括号不匹配*/ if (stack.isEmpty()) &#123; cout &lt;&lt; "括号匹配成功！" &lt;&lt; endl; return true; &#125; else &#123; cout &lt;&lt; "括号不匹配！" &lt;&lt; endl; return false; &#125; &#125;int main() &#123; CheckStr("12312()()[]&#123;&#123;&#125;&#125; "); CheckStr("&#125;"); CheckStr("[()(),hello&#123;&#125;]"); CheckStr("test"); CheckStr("()(&#125;[]");&#125; 实验结果： –（本文完）&lt;原创&gt;]]></content>
      <categories>
        <category>数据结构</category>
      </categories>
      <tags>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[算法性能分析]]></title>
    <url>%2F2019%2F07%2F02%2F%E7%AE%97%E6%B3%95%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90%2F</url>
    <content type="text"><![CDATA[¶算法性能分析 ¶好的算法应当满足 正确性：算法应能满足具体问题的需求 可读性：算法应应易于阅读和理解 健壮性：输入数据非法时，算法也能适当作出反应或进行处理 高效性：算法执行时间短，占用存储空间少 ¶时间复杂度 程序：算法在计算机上的实现 程序的执行时间取决于如下因素： 算法本身 问题规模 编程语言 硬件性能 选择一个“基本操作”，分析基本操作执行的次数 用该基本操作的重复次数表示算法的执行时间，一般为问题规模n的函数f(n)，简称“频度”。 算法的时间复杂度为：和f(n)同阶的简化无穷大量T(n) = O(f(n))]]></content>
      <categories>
        <category>代码学习</category>
        <category>数据结构学习</category>
      </categories>
      <tags>
        <tag>数据结构</tag>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[链表应用- 两数相加]]></title>
    <url>%2F2019%2F06%2F29%2F%E9%93%BE%E8%A1%A8%E5%BA%94%E7%94%A8-%E4%B8%A4%E6%95%B0%E7%9B%B8%E5%8A%A0%2F</url>
    <content type="text"><![CDATA[¶两数相加 问题： 给定两个非空链表来表示两个非负整数。位数按照逆序方式储存，它们的每个节点只存储单个数字。将两数相加返回一个新的链表。你可以假设除了数字0之外，这两个数字都不会以零开头。 示例： 输入：(2 -&gt; 4 -&gt; 3) + (5 -&gt; 6 -&gt; 4) 输出: 7 -&gt; 0 -&gt; 8 原因: 342 + 465 = 807 ¶一些算法的思路： 先把一个数字转换为一个链表 243 转换为 2 -&gt; 4 -&gt; 3 所以先用一个 将数字转换为链表的函数 12345678Lklist ToLKlist(int r) &#123; Lklist stack; while (r) &#123; stack.push(r % 10); r /= 10; &#125; return stack;&#125; **实现思路：**对进来的数字，直接模10取个位，然后后插入一个链表中，然后取十位…以此类推直到把所以值都后插入链表中。 转换数字后就会得到两个链表。然后进行相加。相加时得实现把链表转换成数字，例如 2 -&gt; 4 -&gt; 3转换成数字342。 123456789101112int number(Lklist num) &#123; int result = 0; int len = num.Getlength(); int i = 1; while (!num.IsEmpty()) &#123; result += num.getfirst() * i; num.deletefirst(); i *= 10; &#125; return result;&#125; **实现思路：**因为获得的数字链表是2 -&gt; 4 -&gt; 3，而实际对应的数字是342，所以可以先把第一个个位数字获得，加上十位，百位。 最后一步把相加的结果再ToLKlist()用变为链表。 ¶具体实现: 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133#include&lt;iostream&gt;using namespace std;class Lklist &#123; struct LNode &#123; int data; LNode* next; &#125;; LNode* head; int length;public: Lklist() &#123; head = new LNode; head-&gt;next = nullptr; length = 0; &#125; /*前插操作*/ bool push(int e) &#123; LNode* p = new LNode; if (!p)return false; p-&gt;data = e; p-&gt;next = head-&gt;next; head-&gt;next = p; length++; return true; &#125; /*后插操作*/ bool push_back(int e) &#123; LNode* p = head; LNode* q = new LNode(); int j = 0; while (p-&gt;next) &#123; p = p-&gt;next; &#125; if (!p)return false; q-&gt;data = e; q-&gt;next = 0; p-&gt;next = q; length++; return true; &#125; /*删除第一个数据操作*/ bool deletefirst() &#123; if (!head-&gt;next) return false; LNode* p = head-&gt;next-&gt;next; delete head-&gt;next; head-&gt;next = p; length--; return true; &#125; /*获得第一个元素*/ int getfirst() &#123; return head-&gt;next-&gt;data; &#125; /*判断是否为空链表*/ bool IsEmpty() &#123; return head-&gt;next == nullptr; &#125; /*获得链表长度*/ int Getlength() &#123; return length; &#125;&#125;;/*转换为数字*/int number(Lklist num) &#123; int result = 0; int len = num.Getlength(); int i = 1; while (!num.IsEmpty()) &#123; result += num.getfirst() * i; num.deletefirst(); i *= 10; &#125; return result;&#125;/*数字转换为链表*/Lklist ToLKlist(int r) &#123; Lklist stack; while (r) &#123; stack.push(r % 10); r /= 10; &#125; return stack;&#125;/*两数相加核心代码*/Lklist TwoNumberAdd(Lklist num1, Lklist num2) &#123; int a = number(num1); int b = number(num2); return ToLKlist(a + b);&#125;int main() &#123; int a; int b; Lklist s; cout &lt;&lt; "请输入第一个数： "; cin &gt;&gt; a; cout &lt;&lt; endl &lt;&lt; "请输入第二个数： "; cin &gt;&gt; b; s = TwoNumberAdd(ToLKlist(a), ToLKlist(b)); int i = 0; int len = s.Getlength(); while (!s.IsEmpty()) &#123; cout &lt;&lt; s.getfirst(); if (i &lt; len - 1) &#123; cout &lt;&lt; "-&gt;"; i++; &#125; s.deletefirst(); &#125;&#125; 实验结果: ¶标准参考答案： 1234567891011121314151617181920212223242526272829303132333435363738394041424344class Solution &#123;public : ListNode* addTwoNumber(ListNode* l1, ListNode* l2) &#123; int x = 0; int y = 0; int carry = 0; int sum = 0; ListNode* h = nullptr; ListNode** t = &amp;h; while (l1!=nullptr||l2!=nullptr) &#123; x = getValueAndMoveNext(l1); y = getValueAndMoveNext(l2); sum = carry + x + y; ListNode* node = new ListNode(sum % 10); *t = node; t = (&amp;node-&gt;next); carry = sum / 10; &#125; if (carry &gt; 0) &#123; ListNode* node = new ListNode(carry % 10); *t = node; &#125; return h;&#125;private: int getValueAndMoveNext(ListNode*&amp; l) &#123; int x = 0; if (l != nullptr) &#123; x = l-&gt;val; l = l-&gt;next; &#125; return x; &#125;&#125;; ¶参考答案的核心算法思路： ListNode* addTwoNumber(ListNode* l1, ListNode* l2) 这步先把两个链表的第一个元素取出存入X和Y中，然后让其想加并加上一个进位carry数。以(2 -&gt; 4 -&gt; 3) + (5 -&gt; 6 -&gt; 4)为例。 第一步： 取出两个链表中的第一个元素2和5。 第二步： 让其相加并加上一个进位数即sum = carry(此时为0) + 2 + 5 = 7 第三步： 把结果7模上10并push_back进结果链表。此时结果为7并且是结果链表的第一个数据 然后重置进位carry即：carry = sum / 10,因为2 + 5 = 7小于10所以不用进位。 第四步： 循环上面的步骤 第二次循环中4和6的和是10，模上10取余后的结果为0，push_back进结果链表作为第二个数据 因为10是大于等于10的，所以要进位，故进行carry = sum / 10时，carry结果会为1作为下一次循环，sum = carry + x + y中的进位 总体来看，首先因为题目描述为 位数按照逆序方式储存，所以这里运用了普通加法运算。即：从个位开始相加，满10进1至下位的思路。 ¶个人实现代码优化后： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596#include&lt;iostream&gt;using namespace std;class LKlist &#123;public: struct LNode &#123; int data; LNode* next; &#125;; LNode* head; int length;public: LKlist() &#123; head = new LNode(); head-&gt;next = nullptr; length = 0; &#125; bool push_back(int e) &#123; LNode* p = new LNode; LNode* t = head; p-&gt;data = e; while (t-&gt;next) &#123; t = t-&gt;next; &#125; t-&gt;next = p; p-&gt;next = nullptr; length++; return true; &#125; bool IsEmpty() &#123; return head-&gt;next == nullptr; &#125; bool deletefirst() &#123; if (!head-&gt;next) return false; LNode* p = head-&gt;next-&gt;next; delete head-&gt;next; head-&gt;next = p; length--; return true; &#125; int getfirst() &#123; return head-&gt;next-&gt;data; &#125; int Getlength()&#123; return length; &#125;&#125;;int getValueAndMoveNext(LKlist&amp; l) &#123; int x = 0; LKlist::LNode* T; if (l.head-&gt;next) &#123; x = l.head-&gt;next-&gt;data; T = l.head-&gt;next-&gt;next; delete l.head-&gt;next; l.head-&gt;next = T; &#125; return x;&#125;LKlist addTwoNumber(LKlist&amp; l1, LKlist&amp; l2) &#123; int x = 0; int y = 0; int sum = 0; int carry = 0; LKlist h; while (!l1.IsEmpty() || !l2.IsEmpty()) &#123; x = getValueAndMoveNext(l1); y = getValueAndMoveNext(l2); sum = carry + x + y; h.push_back(sum % 10); carry = sum / 10; &#125; if (carry &gt; 0) &#123; h.push_back(carry % 10); &#125; return h;&#125; 实验结果: –（本文完）&lt;原创&gt;]]></content>
      <categories>
        <category>数据结构</category>
      </categories>
      <tags>
        <tag>数据结构</tag>
        <tag>链表</tag>
        <tag>算法题</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[栈的应用-进制的转换]]></title>
    <url>%2F2019%2F06%2F29%2F%E6%A0%88%E7%9A%84%E5%BA%94%E7%94%A8-%E8%BF%9B%E5%88%B6%E7%9A%84%E8%BD%AC%E6%8D%A2%2F</url>
    <content type="text"><![CDATA[¶数制转换 以十进制转八进制为例，十进制转八进制的时候是把十进制模8取其余数直至除尽，最终结果为余数从下到上的数。 例如： 结合数据结构栈，可以发现转换最终结果跟栈的出栈一样，所以用栈来实现十进制的转换就较为方便 123456789101112void changeNumber(int n,int b)&#123;//n为十进制数，b为将要转的进制数 Stack&lt;int&gt; stack；//定义一个栈 while(n)&#123; stack.push(n%b);//获取余数并入栈 n = n/b;//更新n &#125; while(!stack.isEmpty())&#123;//出栈并输出。直至为空栈 cout &lt;&lt; stack.getTop();//获得栈顶元素 stack.pop();//每输出一个就出栈一个数据 &#125; &#125; ¶代码实现: 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081#include&lt;iostream&gt;using namespace std;/***********链栈实现************/template&lt;typename T&gt;class Stack &#123; struct LNode &#123; T data; LNode* next; &#125;; LNode* head;public: Stack() &#123; head = new LNode; head-&gt;next = nullptr; &#125; /*入栈操作*/ bool push(T e) &#123; LNode* p = new LNode; if (!p)return false; p-&gt;data = e; p-&gt;next = head-&gt;next; head-&gt;next = p; return true; &#125; /*出栈操作*/ bool pop() &#123; if (!head-&gt;next) return false; LNode* p = head-&gt;next-&gt;next; delete head-&gt;next; head-&gt;next = p; return true; &#125; /*获得栈顶元素*/ T getTop() &#123; return head-&gt;next-&gt;data; &#125; /*判断是否为空栈*/ bool IsEmpty() &#123; return head-&gt;next == nullptr; &#125;&#125;;/*********************************//*数据转换*/void ChangeNumber(int n,int b) &#123; Stack&lt;int&gt; stack; int result = 0; while (n) &#123; stack.push(n % b); n = n / b; &#125; while (!stack.IsEmpty()) &#123; cout &lt;&lt; stack.getTop(); stack.pop(); &#125; &#125;int main() &#123; ChangeNumber(75, 8);&#125; 实验结果: –（本文完）&lt;原创&gt;]]></content>
      <categories>
        <category>数据结构</category>
      </categories>
      <tags>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[C++ vector容器常用操作和内存释放]]></title>
    <url>%2F2019%2F06%2F29%2FC-vector%E5%AE%B9%E5%99%A8%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E5%92%8C%E5%86%85%E5%AD%98%E9%87%8A%E6%94%BE%2F</url>
    <content type="text"><![CDATA[¶一、对字符串的处理 对字符串每一个字符进行遍历修改操作 12345678910111213141516#include&lt;iostream&gt;#include&lt;vector&gt;#include&lt;string&gt;using namespace std;int main() &#123; string ifo = "ShuHaoHwang"; for (auto iter = ifo.begin(); iter != ifo.end(); iter++) &#123; *iter = toupper(*iter); &#125; cout &lt;&lt; ifo &lt;&lt; endl;&#125; ¶二、查找配置项信息及内存释放 用迭代器及vector容器实现通过一个配置项名就能查询获得相应配置项的信息，最后利用vector进行内存释放。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869#include&lt;iostream&gt;#include&lt;vector&gt;#include&lt;string&gt;using namespace std;struct conf&#123; char confname[40];//配置项名 char confid[100];//配置项信息&#125;;char* getifo(vector&lt;conf*&gt;&amp; a, const char* s) &#123; vector&lt;conf*&gt;::iterator iter; for (iter = a.begin(); iter != a.end(); iter++) &#123; if (strcmp((*iter)-&gt;confname, s) == 0) &#123;//如果找到对应配置项名，就返回其配置项的信息 return (*iter)-&gt;confid; &#125; &#125; return nullptr;&#125;int main() &#123; conf* server = new conf; conf* server2 = new conf; /*配置项名1*/ strcpy_s(server-&gt;confname,sizeof(server-&gt;confname),"ServerName"); /*配置信息1*/ strcpy_s(server-&gt;confid, sizeof(server-&gt;confid), "1区"); /*配置项名2*/ strcpy_s(server2-&gt;confname, sizeof(server2-&gt;confname), "ServerID"); /*配置信息2*/ strcpy_s(server2-&gt;confid, sizeof(server2-&gt;confid), "10000"); vector&lt;conf*&gt; cinfo; cinfo.push_back(server);//把结构指针放入容器 cinfo.push_back(server2); vector&lt;conf*&gt;::iterator iter; /*查找信息*/ char* temp; temp = getifo(cinfo, "ServerName"); if (temp != nullptr) &#123; cout &lt;&lt; "ServerName: " &lt;&lt; temp &lt;&lt; endl; &#125; /*释放内存*/ for (iter = cinfo.begin(); iter != cinfo.end(); iter++) &#123; delete (*iter);//因为*iter是一个指针 &#125; cinfo.clear();//最后清空容器 &#125;]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>技术类</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[C++迭代器的失控范例和解决方案]]></title>
    <url>%2F2019%2F06%2F28%2FC-%E8%BF%AD%E4%BB%A3%E5%99%A8%E7%9A%84%E5%A4%B1%E6%8E%A7%E8%8C%83%E4%BE%8B%E5%92%8C%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%2F</url>
    <content type="text"><![CDATA[¶迭代器失控范例 ¶情形一： 很多在使用迭代器类型进行遍历容器的操作进行对容器容量的变化都会导致迭代器的失控，即输出错误的值。例如：要对vector容器进行push_back()操作、对vector容器进行插入操作、删除操作。都会使end()函数返回的迭代器类型位置错乱，导致出现可能会修改未被使用内存的风险，从而使程序崩溃。 例如： 1234567891011vector&lt;int&gt; arrays&#123;12,35,56,78&#125;;vector&lt;int&gt;::iterator iter = arrays.begin();for(iter;iter!=arrays.end();iter++)&#123; cout &lt;&lt; *iter &lt;&lt;endl; arrays.push_back(2);&#125;//或者下面这种情况for(iter;iter!=arrays.end();iter++)&#123; cout &lt;&lt; *iter &lt;&lt;endl; arrays.insert(1,100);&#125; 实验结果： 在一般情况下，如果只是要对容器进行添加一个元素，可以使用下面的方法。 123456789101112vector&lt;int&gt; arrays&#123;12,35,56,78&#125;;vector&lt;int&gt;::iterator iter = arrays.begin();for(iter;iter!=arrays.end();iter++)&#123; cout &lt;&lt; *iter &lt;&lt;endl; arrays.push_back(2); break;//添加元素后直接跳出&#125;//再进行一次迭代器遍历for(iter;iter!=arrays.end();iter++)&#123; cout &lt;&lt; *iter &lt;&lt;endl; arrays.push_back(2);&#125; 实验结果： 如果真的在实际项目中要进行在迭代器遍历容器的时候对容器多次进行增添内容，可以使用下面的方法。 123456789101112131415vector&lt;int&gt; arrays&#123;12,35,56,78&#125;;vector&lt;int&gt;::iterator iter = arrays.begin();int i = 0//用来控制插入次数（循环次数） while(iter != arrays.end())&#123; iter = arrays.insert(iter,100); if(i &gt; 5) break; iter++; i++; &#125;for(iter = arrays.begin(); iter != arrays.end(); iter++)&#123; cout &lt;&lt; *iter &lt;&lt; endl;&#125; 实验结果： **实现思路:**因为arrays.insert()的返回值是一个迭代器类型，所以在循环中不断刷新循环的起始位置(因为是前插，所以end()的值没有发生变化)。多次更新迭代器的起始begin()的值，从而使迭代器类型的指向不会失控。 同样的如果使用push_back(): 123456789101112131415161718vector&lt;int&gt; arrays&#123;12,35,56,78&#125;;vector&lt;int&gt;::iterator iter = arrays.begin();int i = 0//用来控制插入次数（循环次数） while(iter != arrays.end())&#123; arrays.push_back(100);//不断更新iter的值起始 iter = arrays.begin() if(i &gt; 5) break; iter++; i++; &#125;for(iter = arrays.begin(); iter != arrays.end(); iter++)&#123; cout &lt;&lt; *iter &lt;&lt; endl;&#125; 实验结果： **总体：**即每对容器的容量进行变化一次便刷新迭代器的值。使其成为新的迭代器进行操作，就可以避免容器的失控。弊端：麻烦，代码较繁杂。 ¶情形二： 如果在某个时候要对容器进行清空操作，多数下使用容器自带的clear()函数即可。但在某些特殊情况下，要对vector容器的某些元素进行删除，就得使用容器自带的` `函数。但是这样做就是对容器容量进行修改操作，会使迭代器指向失控。 例如： 12345vector&lt;int&gt; arrays&#123;12,35,56,78&#125;vector&lt;int&gt;::iterator iter;for(iter = arrays.begin(); iter != arrays.end(); iter++)&#123; arrays.erase(iter);&#125; 使用结果 如果真的要进行这样的操作可以这样做： 12345678910vector&lt;int&gt; arrays&#123;12,35,56,78&#125;vector&lt;int&gt;::iterator iter = arrays.begin();while(iter != arrays.end())&#123; iter = arrays.erase(iter);//直接让erase函数来更新迭代器指向的位置&#125;//for版for(iter; iter != arrays.end(); )&#123; iter = arrays.erase(iter);&#125; 实验结果： **实现思路：**因为erase()函数是清除该位置的数据，并返回下一个元素的位置，所以可以通过它来对迭代器进行更新，从而不会时迭代器指向失控。 此情形更好的实现版本 1234567vector&lt;int&gt; arrays&#123;12,35,56,78&#125;vector&lt;int&gt;::iterator iter = arrays.begin();while(!arrays.empty())&#123;//如果不为空就继续 auto iter = arrays.begin();//每开始一轮循环就更新迭代器的指向。 arrays.erase(iter);&#125; –（本文完）&lt;原创&gt;]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>技术类</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[C++进阶学习总结-（1.6）迭代器]]></title>
    <url>%2F2019%2F06%2F26%2FC-%E8%BF%9B%E9%98%B6%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%881-6%EF%BC%89%E8%BF%AD%E4%BB%A3%E5%99%A8%2F</url>
    <content type="text"><![CDATA[此文章是加密文章，请输入密码后查看. Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>代码学习</category>
        <category>C++学习</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>学习总结</tag>
        <tag>C++学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据结构学习总结-（3.3）链栈]]></title>
    <url>%2F2019%2F06%2F26%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%883-3%EF%BC%89%E9%93%BE%E6%A0%88%2F</url>
    <content type="text"><![CDATA[¶栈的链式实现算法及思路 栈的链式实现是以前插法为基础的。即以头结点next指向的是栈顶，进行入栈出栈等操作。 入栈 思路：创建好空链栈后，每插入一个数据，便创建一个新的结点p，让p结点的next指针等于head的next指针，让head的next指针再指向新结点p，从而完成push_back操作。 具体实现： 12345678bool push_back(T e)&#123; LNode*p = new LNode(); p-&gt;data = e; p-&gt;next = head-&gt;next; head-&gt;next = p; return true;&#125; 出栈 思路：直接让head的next指针指向head-&gt;next-&gt;next即跳过原栈的数据，所以可以先让一个临时的p指向head-&gt;next,然后让head的next指针直接指向p的next指针。之后释放p的空间。(注意：进行出栈操作要首先判断是否空栈) 具体实现： 123456789bool pop()&#123; LNode* p = head-&gt;next; if(!head-&gt;next)&#123; head-&gt;next = p-&gt;next; delete p; return true; &#125; return false;&#125; 析构函数 思路：析构函数就是链栈的销毁操作。总体上先把所有的数据进行出栈并释放空间，最后再把头结点释放了。所以要先用循环，分别释放每一个数据的空间。循环结束的判断条件是head-&gt;next 为空。 具体实现： 12345678~LkStack()&#123; LNode*p = head-&gt;next; while(p)&#123; head-&gt;next = p-&gt;next; delete p; p = head-&gt;next; &#125;&#125; ¶具体代码实现： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495969798#include&lt;iostream&gt;using namespace std;template&lt;typename T&gt;class LkStack&#123; struct LNode &#123; T data; LNode* next; &#125;; LNode* head;public: LkStack() &#123; head = new LNode(); head-&gt;next = nullptr; &#125; ~LkStack() &#123; LNode* p = head-&gt;next; while (p) &#123; head-&gt;next = p-&gt;next; delete p; p = head-&gt;next; &#125; delete head; &#125; /*入栈操作*/ bool push_back(T e) &#123; LNode* p = new LNode(); p-&gt;data = e; p-&gt;next = head-&gt;next; head-&gt;next = p; return true; &#125; /*出栈操作*/ bool pop() &#123; if (!isEmpty()) &#123; LNode* p = head-&gt;next; head-&gt;next = p-&gt;next; delete p; return true; &#125; return false; &#125; /*是否为空*/ bool isEmpty() &#123; if (!head-&gt;next) return true; return false; &#125; /*获得栈顶数据*/ T&amp; GetTop() &#123; return head-&gt;next-&gt;data; &#125;&#125;;int main() &#123; LkStack&lt;int&gt; stack; cout &lt;&lt; "入栈了数据1" &lt;&lt;endl; stack.push_back(1); cout &lt;&lt; "入栈了数据2" &lt;&lt;endl; stack.push_back(2); cout &lt;&lt; "入栈了数据3" &lt;&lt;endl; stack.push_back(3); cout &lt;&lt; "入栈了数据4" &lt;&lt;endl; stack.push_back(4); cout &lt;&lt; "入栈了数据5" &lt;&lt;endl; stack.push_back(5); while (!stack.isEmpty()) &#123; cout &lt;&lt; stack.GetTop() &lt;&lt; endl; stack.pop(); &#125;&#125; –（本文完）&lt;原创&gt;]]></content>
      <categories>
        <category>代码学习</category>
        <category>数据结构学习</category>
      </categories>
      <tags>
        <tag>学习总结</tag>
        <tag>数据结构</tag>
        <tag>数据结构-学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[C++个人学习路线]]></title>
    <url>%2F2019%2F06%2F25%2FC-%E4%B8%AA%E4%BA%BA%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF%2F</url>
    <content type="text"><![CDATA[此文章是加密文章，请输入密码后查看. Incorrect Password! No content to display! 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]]></content>
      <categories>
        <category>个人随感</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>学习计划</tag>
        <tag>目标</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[C++进阶学习总结-（1.5）vector容器详解]]></title>
    <url>%2F2019%2F06%2F25%2FC-%E8%BF%9B%E9%98%B6%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%881-5%EF%BC%89vector%E5%AE%B9%E5%99%A8%E8%AF%A6%E8%A7%A3%2F</url>
    <content type="text"><![CDATA[此文章是加密文章，请输入密码后查看. Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>代码学习</category>
        <category>C++学习</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>学习总结</tag>
        <tag>C++学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据结构学习总结-（3.2）顺序栈的实现]]></title>
    <url>%2F2019%2F06%2F24%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%883-2%EF%BC%89%E9%A1%BA%E5%BA%8F%E6%A0%88%E7%9A%84%E5%AE%9E%E7%8E%B0%2F</url>
    <content type="text"><![CDATA[¶顺序栈的实现与算法思路（以char数据类型为例） 入栈push(char e)； 思路：在栈未满的情况下，直接对top(栈顶)指针指向的地址内容进行赋值，修改完毕后，直接top++移动栈顶至下一个位置。如果栈满则调用扩容操作。 具体实现： 1234567bool SqStack::push(char e) &#123; if ((top - data) == capacity)//容量满了就进行扩容 realloc(); *top = e; top++;//直接修改并移动top指针 return true;&#125; 出栈pop(); 思路：在没有空栈的情况下，直接让top自减一。 具体实现： 1234567bool SqStack::pop() &#123; if (top == data)//判断是否空栈。 return false; top--; return true; &#125; ¶顺序栈的实现情况 出栈(完成) push(char e) 入栈(完成) pop() 扩容(完成) realloc() 遍历(完成) Traverse(void(*fb)(char&amp; e)) 获得栈顶数据(完成) GetTop() 是否为空栈(完成) IsStackEmpty() 获得栈总容量(完成) GetCapacity() 具体代码： 123456789101112131415161718192021222324252627282930313233343536//Sqstack.h#ifndef _SQSTACK_H_#define _SQSTACK_H_ class SqStack &#123; char* top = nullptr; char* data = nullptr; int capacity;public: /*构造函数*/ SqStack(int c = 5); /*入栈操作*/ bool push(char e); /*出栈操作*/ bool pop(); /*遍历*/ void Traverse(void(*fb)(char&amp;e)); char GetTop(); bool IsStackEmpty(); int GetCapacity();private: /*扩容*/ bool realloc();&#125;; /*打印*/ void Print(char&amp; e);#endif // !_SQSTACK_H_ 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182//Sqstack.cpp#include&lt;iostream&gt;#include"Sqstack.h"using namespace std;/*构造函数*/SqStack::SqStack(int c) &#123; capacity = c;//默认给一个初值 data = new char[capacity]; top = data;&#125;/*扩容*/bool SqStack::realloc() &#123; char* n_data = new char[2 * capacity]; for (int i = 0; i &lt; capacity; i++) &#123; n_data[i] = data[i]; &#125; delete[]data; data = n_data; top = data + capacity;//这里要注意top也有重新赋值新的地址 capacity *= 2; cout &lt;&lt; "扩容成功！！" &lt;&lt; endl; return true;&#125;/*入栈操作*/bool SqStack::push(char e) &#123; if ((top - data) == capacity) realloc(); *top = e; top++; return true;&#125;/*出栈操作*/bool SqStack::pop() &#123; if (top == data) return false; top--; return true; &#125;/*遍历*/void SqStack::Traverse(void(*fb)(char&amp; e)) &#123; for (int i = 0; i &lt; top - data; i++) &#123; fb(data[i]); &#125; &#125;/*获得栈顶元素*/char SqStack::GetTop() &#123; return*(top - 1);&#125;/*判断是否空栈*/bool SqStack::IsStackEmpty() &#123; if (top == data) return true; return false;&#125;/*获得容量*/int SqStack::GetCapacity() &#123; return capacity;&#125;/*打印*/ void Print(char&amp; e) &#123; cout &lt;&lt; e &lt;&lt; " "; &#125; 123456789101112131415161718192021222324252627//main.cpp#include&lt;iostream&gt;#include"Sqstack.h"using namespace std;int main() &#123; SqStack stack; cout &lt;&lt; "入栈一个数据a" &lt;&lt; endl; stack.push('a'); stack.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "入栈一个数据b" &lt;&lt; endl; stack.push('b'); stack.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "入栈一个数据c" &lt;&lt; endl; stack.push('c'); stack.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "入栈一个数据d" &lt;&lt; endl; stack.push('d'); stack.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "入栈一个数据e" &lt;&lt; endl; stack.push('e'); stack.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "入栈一个数据f" &lt;&lt; endl; stack.push('f'); stack.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "出栈一个数据" &lt;&lt; endl; stack.pop(); stack.Traverse(Print); cout &lt;&lt; endl; &#125; –（本文完）&lt;原创&gt;]]></content>
      <categories>
        <category>代码学习</category>
        <category>数据结构学习</category>
      </categories>
      <tags>
        <tag>学习总结</tag>
        <tag>数据结构</tag>
        <tag>数据结构-学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据结构学习总结-（3.1）栈]]></title>
    <url>%2F2019%2F06%2F24%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%883-1%EF%BC%89%E6%A0%88%2F</url>
    <content type="text"><![CDATA[¶初识栈 定义：栈(stack)是限定仅在表尾插入和删除操作的线性表。 允许插入和删除的一段称为栈顶(top),另一段称为栈底(bottom)。 不含任何数据元素的栈称为空栈。 特点： 先进后出 后进先出 注意： 栈又被称为后进先出(Last in First out)的线性表 栈的插入操作，被称为进栈，也称压栈、入栈(push) 栈的删除操作也称出栈，也称为弹栈(pop) 示意图： ¶栈的抽象数据类型 ADT 栈(Stack) Data 栈的数据对象集合为{a1,a2,a3,…,an},每一个元素的类型均为同一个数据类型。其中除了第一个数据为，每个元素有且只有一个直接前驱元素，除了最后一个数据外，每个元素有且只有一个直接的后继元素。数据元素之间的关系是一对一的关系， Operation InitStack；初始化，创建一个空栈 destoryStack; 销毁栈 StackEmpty；判断是否为空 clearStack； 清空栈 getTop；获得栈顶元素 push 压栈 pop 出栈 stacklength；获得栈的长度 endADT 注意：栈本身就是一个线性表结构、线性表的顺序储存和链式存储，对于栈来说也同样适用 –（本文未完）]]></content>
      <categories>
        <category>代码学习</category>
        <category>数据结构学习</category>
      </categories>
      <tags>
        <tag>学习总结</tag>
        <tag>数据结构</tag>
        <tag>数据结构-学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[C++进阶学习总结-（1.4）函数新特性、const关键字精解]]></title>
    <url>%2F2019%2F06%2F23%2FC-%E8%BF%9B%E9%98%B6%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%881-4%EF%BC%89%E5%87%BD%E6%95%B0%E6%96%B0%E7%89%B9%E6%80%A7%E3%80%81const%E5%85%B3%E9%94%AE%E5%AD%97%E7%B2%BE%E8%A7%A3%2F</url>
    <content type="text"><![CDATA[此文章是加密文章，请输入密码后查看. Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>代码学习</category>
        <category>C++学习</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>学习总结</tag>
        <tag>C++学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据结构学习总结-（2.9）顺序存储结构与链式存储结构的逆置]]></title>
    <url>%2F2019%2F06%2F22%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%882-9%EF%BC%89%E9%A1%BA%E5%BA%8F%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84%E4%B8%8E%E9%93%BE%E5%BC%8F%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84%E7%9A%84%E9%80%86%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[¶顺序结构的逆置算法与思路： 夹逼法： 思路：通过对数组头部和尾部相互对调并向中间靠近。 实现：(假设以整型为数据类型实现) 12345678910//length为顺序表总长度。bool Convert()&#123; int temp;//用来对换位置时使用的临时变量 for(int i = 0; i &lt; length/2; i++)&#123;//注意：length要除于2！！！！length要除于2！！！！ temp = datas[i]; datas[i] = datas[length - 1 - i];//前后换位置并向中间靠近 datas[length - 1 - i] = temp; &#125; return true;&#125; 注意：这里的length是要除于2的，因为只需向中间靠近即可而不是再往中间远离。即：移动的范围只是数组长度的一半。 算法优化： 12345678910//length为顺序表总长度。bool Convert()&#123; int temp;//用来对换位置时使用的临时变量 for(int i = 0 ，j = length - 1; i &lt; j; i++,j--)&#123; temp = datas[i]; datas[i] = datas[j];//前后换位置并向中间靠近 datas[j] = temp; &#125; return true;&#125; 此方法更能体现夹逼法。 ¶链式存储结构的逆置算法与思路： 思路：把头结点和数据结点断开，然后把数据结点一个个前插进链表。（循环链表和单向链表均适用）,具体做法先让一个结点指针p保存第一个数据的地址，然后让头结点的next指针归零（即：使其与数据结点断开），开始循环：让一个临时指针指向p的下一个数据的地址，然后把这个第一个数据插入头结点后面（此时p指向为第一个数据的地址），即：p-&gt;next = head-&gt;next;head -&gt;next = p;其次移动指针p到下一个数据，这里就要运用到一开始的临时指针了。循环上面的操作，直到把所有数据都前插完毕。 实现1(单向链表)： 12345678910111213141516bool Convert()&#123; LNode* p = head-&gt;next; LNode* temp = nullptr;//临时指针 head-&gt;next = nullptr; while(p)&#123; temp = p-&gt;next;//获取下一个数据的值 p-&gt;next = head-&gt;next;//前插 head-&gt;next = p; p = temp;//移动指针到下一个数据 &#125; return true;&#125; 实现2(循环链表) 12345678910111213141516bool Convert()&#123; LNode* p = head-&gt;next; LNode* temp = nullptr;//临时指针 head-&gt;next = nullptr; while(p!=head)&#123; temp = p-&gt;next;//获取下一个数据的值 p-&gt;next = head-&gt;next;//前插 head-&gt;next = p; p = temp;//移动指针到下一个数据 &#125; return true;&#125; 前后只是循环条件发生变化。 –（本文完）&lt;原创&gt;&lt;待增添修改&gt;]]></content>
      <categories>
        <category>代码学习</category>
        <category>数据结构学习</category>
      </categories>
      <tags>
        <tag>学习总结</tag>
        <tag>数据结构</tag>
        <tag>数据结构-学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据结构学习总结-（2.8）线性表的顺序存储结构和链式存储结构之间的比较]]></title>
    <url>%2F2019%2F06%2F21%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%882-8%EF%BC%89%E7%BA%BF%E6%80%A7%E8%A1%A8%E7%9A%84%E9%A1%BA%E5%BA%8F%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84%E5%92%8C%E9%93%BE%E5%BC%8F%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84%E4%B9%8B%E9%97%B4%E7%9A%84%E6%AF%94%E8%BE%83%2F</url>
    <content type="text"><![CDATA[¶顺序结构与链式结构的比较： 顺序结构 链式结构 按序号下标读取 直接读取通过A[index]即可获的数据+++ 要从头开始找，找的下标才能获取数据— 内存实验 要先规定好顺序结构的长度，可能没有利用好空间或空间不够用，不够用时还要扩容可能没有足够的空间或多出空间— 按需要分配，想要一个就一个可利用很小的碎片空间+++ 插入元素 插入一个元素需要不断移动后面的元素，速度慢，消耗相比大— 直接插入，速度快，消耗相比小+++ 删除 需要移动元素— 直接删除+++ –（本文完）&lt;原创&gt;]]></content>
      <categories>
        <category>代码学习</category>
        <category>数据结构学习</category>
      </categories>
      <tags>
        <tag>学习总结</tag>
        <tag>数据结构</tag>
        <tag>数据结构-学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[C++进阶学习总结-（1.3）范围for语句、动态分配、nullptr]]></title>
    <url>%2F2019%2F06%2F21%2FC%2B%2B%E8%BF%9B%E9%98%B6%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%881-3%EF%BC%89%E8%8C%83%E5%9B%B4for%E8%AF%AD%E5%8F%A5%EF%BC%8C%E5%8A%A8%E6%80%81%E5%88%86%E9%85%8D%2F</url>
    <content type="text"><![CDATA[此文章是加密文章，请输入密码后查看. Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>代码学习</category>
        <category>C++学习</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>学习总结</tag>
        <tag>C++学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据结构学习总结-（2.7）双向链表]]></title>
    <url>%2F2019%2F06%2F20%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%882-7%EF%BC%89%E5%8F%8C%E5%90%91%E9%93%BE%E8%A1%A8%2F</url>
    <content type="text"><![CDATA[¶双向链表 与单向链表的不同之处： 单向链表 双向链表 只知道后继节点，不知道前驱节点。每次查找只能从头开始查找。 相比单向链表增加了一个前驱指针，使前驱节点很快就能被找到 双向链表由于有了前后指针。可以使其从前往后走，也可以从后往前走。 ¶根据双向链表具有前后两个指针的这个特性 在插入算法和删除算法中都有很好的优势 插入算法： 12345678910111213141516171819202122bool InsertElement(int index, T e) &#123; LNode* node = new LNode(); LNode* p = head; node-&gt;data = e; int j = 0; while (j &lt; index)//直接定位到要插入的位置即可 &#123; p = p-&gt;next; j++; &#125; p-&gt;prior-&gt;next = node;//指定位置的前一个数据的next指针指向新插入的数据地址 node-&gt;prior = p-&gt;prior;//新插入数据的prior指针指向原来位置数据的前一个数据地址 p-&gt;prior = node;//插入位置的前一个数据更变为新插入的数据地址 node-&gt;next = p;//新插入数据的next指针指向插入位置的地址 length++;//链表总长度加1 return true; &#125; 删除算法 12345678910111213141516bool DeleteElement(int index) &#123; LNode* p = head; int j = 0; while (j &lt; index)//直接定位到要删除的数据结点 &#123; p = p-&gt;next; j++; &#125; p-&gt;prior-&gt;next = p-&gt;next;//待删除的数据的前一个数据的next指针指向待删除数据的下一个数据的地址 p-&gt;next-&gt;prior = p-&gt;prior;//待删除数据的下一个数据的prior指针指向待删除数据的前一个数据 delete p;//释放待删除数据的空间 return true; &#125; 删除算法即可以直接跳过待删除数据结点。 ¶其他测试代码详情： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170#include&lt;iostream&gt;using namespace std;template&lt;typename T&gt;class BSLkList &#123; struct LNode &#123; T data; LNode* next; LNode* prior; &#125;; LNode* head; LNode* rear; int length;public: BSLkList() &#123; head = new LNode(); head-&gt;next = head; head-&gt;prior = head; rear = head; length = 0; &#125; /*后插操作*/ bool Push_back(T e) &#123; length++; LNode* node = new LNode(); LNode* p = head; if (!node) return false; while (p-&gt;next != head) &#123; p = p-&gt;next; &#125; node-&gt;data = e; p-&gt;next = node; node-&gt;next = head; node-&gt;prior = p; rear = node; return true; &#125; /*插入操作*/ bool InsertElement(int index, T e) &#123; LNode* node = new LNode(); LNode* p = head; node-&gt;data = e; int j = 0; while (j &lt; index) &#123; p = p-&gt;next; j++; &#125; p-&gt;prior-&gt;next = node; node-&gt;prior = p-&gt;prior; p-&gt;prior = node; node-&gt;next = p; length++; return true; &#125; /*删除操作*/ bool DeleteElement(int index) &#123; LNode* p = head; int j = 0; while (j &lt; index) &#123; p = p-&gt;next; j++; &#125; p-&gt;prior-&gt;next = p-&gt;next; p-&gt;next-&gt;prior = p-&gt;prior; delete p; return true; &#125; /*遍历操作*/ void Traverse(void(*fb)(T&amp; e)) &#123; LNode* p = head-&gt;next; while (p != head) &#123; fb(p-&gt;data); p = p-&gt;next; &#125; &#125; /*指定位置遍历操作*/ void Traverse(T e, void(*fb)(T&amp; e)) &#123; LNode* s = GetDataAddress(e); LNode* p = s; do &#123; if(s!=head) fb(s-&gt;data); s = s-&gt;next; &#125; while (s != p); &#125; private: /*获得指定结点地址操作*/ LNode* GetDataAddress(T e) &#123; LNode* p = head; while (p-&gt;next != head) &#123; if (p-&gt;data == e) return p; p = p-&gt;next; &#125; return NULL; &#125;&#125;;template&lt;typename T&gt;void Print(T&amp;e) &#123; cout &lt;&lt; e &lt;&lt; " ";&#125;int main() &#123; BSLkList&lt;char&gt; list; cout &lt;&lt; "后插入了一个A数据" &lt;&lt; endl; list.Push_back('A'); list.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "后插入了一个B数据" &lt;&lt; endl; list.Push_back('B'); list.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "后插入了一个C数据" &lt;&lt; endl; list.Push_back('C'); list.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; endl; cout &lt;&lt; "在2号位置插入了一个p数据" &lt;&lt; endl; list.InsertElement(2, 'p'); list.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "在2号位置插入了一个p数据" &lt;&lt; endl; list.InsertElement(2, 'p'); list.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; endl; cout &lt;&lt; "删除了3号位置的数据" &lt;&lt; endl; list.DeleteElement(3); list.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "删除了1号位置的数据" &lt;&lt; endl; list.DeleteElement(1); list.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; endl; cout &lt;&lt; "从B数据开始遍历" &lt;&lt; endl; list.Traverse('B', Print); cout &lt;&lt; endl;;&#125; 测试效果图： –(本文完)&lt;原创&gt;]]></content>
      <categories>
        <category>代码学习</category>
        <category>数据结构学习</category>
      </categories>
      <tags>
        <tag>学习总结</tag>
        <tag>数据结构</tag>
        <tag>数据结构-学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据结构学习总结-（2.6.1）附加：循环链表的优点之从指定结点开始遍历]]></title>
    <url>%2F2019%2F06%2F19%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%882-6-1%EF%BC%89%E9%99%84%E5%8A%A0%EF%BC%9A%E5%BE%AA%E7%8E%AF%E9%93%BE%E8%A1%A8%E7%9A%84%E4%BC%98%E7%82%B9%E4%B9%8B%E4%BB%8E%E6%8C%87%E5%AE%9A%E7%BB%93%E7%82%B9%E5%BC%80%E5%A7%8B%E9%81%8D%E5%8E%86%2F</url>
    <content type="text"><![CDATA[¶体现循环链表的优点之从指定结点开始遍历 ​ 上一篇总结文章介绍了循环链表的基本概念和个人理解，但我觉得能很好区分非循环链表和循环链表初了链表的合并，还有一个就是循环链表可以从指定的结点开始遍历整个链表，这是非循环链表所做不到的。非循环链表每次遍历只能从头一个个开始遍历每一个元素，而循环链表就不同了，因为它的尾部是与头部相连的，这样就可以实现从某一个结点开始就可以遍历到链表每一个结点上，大大提高了效率。 这里通过遍历函数来体现这一特性。 123456789101112131415161718192021222324252627282930313233//查找链表中的某一个元素并获得它的地址LNode* GetDataAddress(T e) &#123; LNode* p = head-&gt;next; while (p != head) &#123; if (p-&gt;data == e) return p; p = p-&gt;next; &#125; return NULL; &#125;/*从某一个结点进行遍历*/ void Traverse(T e,void(*fb)(T&amp; t)) &#123; LNode* p = GetDataAddress(e);//获得指定结点的地址 LNode* q = p; if (!p) &#123; cout &lt;&lt; "链表为空" &lt;&lt; endl; return; &#125; do &#123; if(p!=head)//越过头结点 fb(p-&gt;data); p = p-&gt;next; &#125; while (p != q); &#125; 思路：先获得指定结点的地址先记录下来，并再用一个指针记下这个位置（便于判断）。其次这里使用的是do-while循环结构（使用do-while循环可以避免while循环漏遍历一个指定结点的数据），先调用函数指针的内容，然后移动指针p。直到指针p再次等于原来的指定结点的地址就停止。 具体实验代码： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126#include&lt;iostream&gt;using namespace std;template&lt;typename T&gt;class CLkList&#123; struct LNode &#123; T data;//数据 LNode* next;//指向下一个数据的指针 &#125;; LNode* head;//头指针 LNode* rear;//尾指针 int length;public: /*构造函数*/ CLkList() &#123; head = new LNode(); length = 0; if (!head)throw"No Memory";//若没有new出来就抛出异常 head-&gt;next = head; rear = head-&gt;next; &#125; /*后插入操作*/ bool push_back(T e) &#123; length++; LNode* p = head-&gt;next; LNode* q = new LNode(); while (p-&gt;next != head) &#123; p = p-&gt;next; &#125; if (!p)return false; q-&gt;data = e;//进行data赋值 rear = q; q-&gt;next = head; p-&gt;next = q;//原最后一个元素数据的next指向这个新插入的空间地址 //length++; return true; &#125; /*获得指定结点地址操作*/ LNode* GetDataAddress(T e) &#123; LNode* p = head-&gt;next; while (p != head) &#123; if (p-&gt;data == e) return p; p = p-&gt;next; &#125; return NULL; &#125; /*遍历操作*/ void Traverse(void(*fb)(T &amp; t)) &#123; LNode* p = head-&gt;next;//从头结点开始遍历每一个元素的data while (p != head) &#123; fb(p-&gt;data); p = p-&gt;next; &#125; &#125; /*从某一个结点进行遍历*/ void Traverse(T e,void(*fb)(T&amp; t)) &#123; LNode* p = GetDataAddress(e);//从头结点开始遍历每一个元素的data LNode* q = p; if (!p) &#123; cout &lt;&lt; "链表为空" &lt;&lt; endl; return; &#125; do &#123; if(p!=head) fb(p-&gt;data); p = p-&gt;next; &#125; while (p != q); &#125;private:&#125;;template&lt;typename T&gt;void Print(T&amp; e) &#123; cout &lt;&lt; e &lt;&lt; " ";&#125;int main() &#123; CLkList&lt;char&gt; list; cout &lt;&lt; "后面插入了一个a数据" &lt;&lt; endl; list.push_back('a'); list.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "后面插入了一个b数据" &lt;&lt; endl; list.push_back('b'); list.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "后面插入了一个c数据" &lt;&lt; endl; list.push_back('c'); list.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "后面插入了一个d数据" &lt;&lt; endl; list.push_back('d'); list.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "从b数据开始遍历链表； " &lt;&lt; endl; list.Traverse('b', Print); cout &lt;&lt; endl; cout &lt;&lt; "从c数据开始遍历链表； " &lt;&lt; endl; list.Traverse('c', Print); cout &lt;&lt; endl; &#125; 运行结果： ¶小结： ​ 这里只是单单用遍历体现了循环链表的这个特点。 ​ 其实不单单在遍历操作上，这个更可以在查找操作上体现出这个优点，例如：在指定结点开始寻找其后的某个值、删除操作也可以运用上。 –（本文完）&lt;原创&gt;]]></content>
      <categories>
        <category>代码学习</category>
        <category>数据结构学习</category>
      </categories>
      <tags>
        <tag>学习总结</tag>
        <tag>数据结构</tag>
        <tag>数据结构-学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据结构学习总结-（2.6）循环链表（单向链表）、清空链表与销毁链表]]></title>
    <url>%2F2019%2F06%2F19%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%882-6%EF%BC%89%E5%BE%AA%E7%8E%AF%E9%93%BE%E8%A1%A8%EF%BC%88%E5%8D%95%E5%90%91%E9%93%BE%E8%A1%A8%EF%BC%89%2F</url>
    <content type="text"><![CDATA[¶循环链表 相较于非循环链表 在非循环链表中，最后一个元素的next指针是空指针，造成浪费。 每次寻找后继指针的时候都要重新从头开始找。 循环链表 尾指针直接指向表头，使最后一个元素的next指针被利用起来。 从每一个元素开始都能遍历表中每一个元素。 便于类似于链表合并这样的算法实现。 其他不同： 循环链表与非循环链表的判断条件发生了变化 ¶判断的具体解释（循环链表） 判断到前驱结点： 1234while (p-&gt;next != head) &#123; p = p-&gt;next; &#125; ​ 因为最后一个结点的next指针不再是空指针而是一个指向head的指针，所以在while循环中如果p的next指针下一个为head指针那么这时指针p就定位到head的前驱指针了。 判断到头结点： 1234while (p != head) &#123; p = p-&gt;next; &#125; ​ 这个也很好判断，不断移动指针p当等于头结点时就跳出循环，此时p定位到头结点。 ¶循环链表的尾指针 循环链表通常是有一个尾指针的它指向的是最后一个元素的地址。 尾指针的好处： 找head指针非常方便。rear-&gt;next的值便是head。 便于链表的合并。 代码实现空表时的尾指针： 1234567891011121314151617181920212223class CLkList&#123; struct LNode &#123; T data;//数据 LNode* next;//指向下一个数据的指针 &#125;; LNode* head;//头指针 LNode* rear;//尾指针 int length;public: /*构造函数*/ CLkList() &#123; head = new LNode(); length = 0; head-&gt;next = head; rear = head-&gt;next;//空表时的尾指针 &#125;&#125; 当插入一个元素后尾指针的变化 123456789101112131415161718192021//从链表最后面插入元素bool push_back(T e) &#123; length++; LNode* p = head-&gt;next; LNode* q = new LNode(); while (p-&gt;next != head) &#123; p = p-&gt;next; &#125; if (!p)return false; q-&gt;data = e;//进行data赋值 rear = q;//因为是从最后面插入那么此时这个最后一个元素的的地址是尾指针指向的 q-&gt;next = head; p-&gt;next = q;//原最后一个元素数据的next指向这个新插入的空间地址 return true; &#125; ¶链表合并的实现: 具体思路（链表2合并到链表1）：先获得链表2的头结点的地址（即：链表2的指针head）然后让链表1的head指针指向链表2的指针head-&gt;next指向的地址（即：链表2的第一个元素的地址），然后让链表2的指针rear（尾指针）指向链表1的head-&gt;指向的地址（即指向链表1的第一个元素）最后delete 链表2的head指针。完成合并操作。 合并前： 合并后： 具体实现： 1234567891011121314bool ListCombine(CLkList* s) &#123; LNode* t_head_of_s = s-&gt;head;//获得链表2的head指针 s-&gt;rear-&gt;next = head-&gt;next;//让链表2的尾指针指向链表1的第一个元素 head-&gt;next = t_head_of_s-&gt;next;//让链表1的head-&gt;next指针指向链表1第一个元素 delete t_head_of_s;//释放原链表2的head指针 return true;&#125; ¶循环链表具体代码实现include&lt;iostream&gt;using namespace std;template&lt;typename T&gt;class CLkList&#123; struct LNode &#123; T data;//数据 LNode* next;//指向下一个数据的指针 &#125;; LNode* head;//头指针 LNode* rear; int length;public: /*构造函数*/ CLkList() &#123; head = new LNode(); length = 0; if (!head)throw"No Memory";//若没有new出来就抛出异常 head-&gt;next = head; rear = head-&gt;next; &#125; /*往后插入操作*/ bool push_back(T e) &#123; length++; LNode* p = head-&gt;next; LNode* q = new LNode(); while (p-&gt;next != head) &#123; p = p-&gt;next; &#125; if (!p)return false; q-&gt;data = e;//进行data赋值 rear = q; q-&gt;next = head; p-&gt;next = q;//原最后一个元素数据的next指向这个新插入的空间地址 //length++; return true; &#125; /*获得链表长度*/ int GetLength() &#123; return length; &#125; /*插入元素操作*/ bool InsertElement(int index,T e) &#123; LNode* p = head; LNode* q = new LNode(); int j = 0; while ( j &lt; index-1) &#123; p = p-&gt;next; j++; &#125; q-&gt;data = e; q-&gt;next = p-&gt;next; p -&gt; next = q; length++; return true; &#125; /*删除操作（下标型）*/ bool DeleteElement(int index) &#123; LNode* p = head; LNode* q = head-&gt;next; int j = 0; while (j &lt; index-1) &#123; p = p -&gt; next; q = q -&gt; next; j++; &#125; p-&gt;next = q-&gt;next; delete q; length--; return true; &#125; /*删除操作（找值型）*/ bool DeleteElement(T e) &#123; LNode* p = head; LNode* q = head-&gt;next; while (q != head) &#123; if (q-&gt;data == e) &#123; p-&gt;next = q-&gt;next; delete q; length--; return true; &#125; p = p-&gt;next; q = q-&gt;next; &#125; return false; &#125; /*清空链表操作*/ bool ListClean() &#123; length = 0; LNode* p = head-&gt;next; LNode* q; while (p-&gt;next != head)//定位到头结点之前，清空初头结点的外的其他数据空间 &#123; q = p -&gt; next; delete p; p = q; &#125; head-&gt;next = head; return true; &#125; /*合并操作*/ bool ListCombine(CLkList* s) &#123; LNode* t_head_of_s = s-&gt;head; s-&gt;rear-&gt;next = head-&gt;next; head-&gt;next = t_head_of_s-&gt;next; length += s-&gt;length; delete s-&gt;head; return true; &#125; /*遍历操作*/ void Traverse(void(*fb)(T &amp; t)) &#123; LNode* p = head-&gt;next;//从头结点开始遍历每一个元素的data while (p != head) &#123; fb(p-&gt;data); p = p-&gt;next; &#125; &#125;private:&#125;;template&lt;typename T&gt;void Print(T&amp; e) &#123; cout &lt;&lt; e &lt;&lt; " ";&#125;int main() &#123; CLkList&lt;char&gt; list; cout &lt;&lt; "后面插入了一个a数据" &lt;&lt; endl; list.push_back('a'); list.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "后面插入了一个b数据" &lt;&lt; endl; list.push_back('b'); list.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "后面插入了一个c数据" &lt;&lt; endl; list.push_back('c'); list.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "后面插入了一个d数据" &lt;&lt; endl; list.push_back('d'); list.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "在2号位置插入p数据" &lt;&lt; endl; list.InsertElement(2, 'p'); list.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "删除测试 " &lt;&lt; endl; cout &lt;&lt; "2号位置的数据被删除了" &lt;&lt; endl; list.DeleteElement(2); list.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "数据a删除了" &lt;&lt; endl; list.DeleteElement('a'); list.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "数据b删除了" &lt;&lt; endl; list.DeleteElement('b'); list.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "list2: " &lt;&lt; endl; CLkList&lt;char&gt; list2; cout &lt;&lt; "后面插入了一个v数据" &lt;&lt; endl; list2.push_back('v'); list2.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "后面插入了一个n数据" &lt;&lt; endl; list2.push_back('n'); list2.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "后面插入了一个m数据" &lt;&lt; endl; list2.push_back('m'); list2.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "list2合并到list" &lt;&lt; endl; list.ListCombine(&amp;list2); cout &lt;&lt; "合并后：" &lt;&lt; endl; list.Traverse(Print); cout &lt;&lt; endl; //清空list list.ListClean(); cout &lt;&lt; "清空完成" &lt;&lt; endl; &#125; ¶销毁链表与清空链表的区别： 销毁链表 清空链表 具体解释 包括头结点全部清空全部delete 保留头结点其他数据元素全部delete清空 产生的后果 头指针丢失，链表无法使用 清空链表后，保留了头结点，只是元素被清空了（即链表回到初始空表状态）还可以使用。 –（本文完）&lt;原创&gt;]]></content>
      <categories>
        <category>代码学习</category>
        <category>数据结构学习</category>
      </categories>
      <tags>
        <tag>学习总结</tag>
        <tag>数据结构</tag>
        <tag>数据结构-学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[C++进阶学习总结-(1.2)auto、头文件防卫]]></title>
    <url>%2F2019%2F06%2F18%2FC%2B%2B%E8%BF%9B%E9%98%B6%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-(1.2)auto%E3%80%81%E5%A4%B4%E6%96%87%E4%BB%B6%E9%98%B2%E5%8D%AB%2F</url>
    <content type="text"><![CDATA[¶Auto auto：变量的自动类型推断。 可以在声明变量的时候根据变量初始值的类型自动为此变量选择匹配的类型。（声明时要初始化） 自动推断发生在编译期间，所以使用auto不会造成程序效降低。 ¶头文件防卫式声明 语法： 123456#ifndef _文件名_H#define _文件名_H内容#endif ¶为什么要用到头文件防卫式声明？ 目的：为了防止头文件中多重、重复定义内容。 情景假设： 假设一个工程里面有两个个头文件.h文件。里面都有自己的内容 123//head1.hint number1 = 8； 123//head2.hint number2 = 5; 1234567891011//main.cpp#include&lt;iostream&gt;#include"head1.h"#include"head2.h"using namespace std;int main()&#123; cout &lt;&lt; number1 &lt;&lt; endl; cout &lt;&lt; number2 &lt;&lt; endl;&#125; 编译运行情况： 假设在head2.h也include了head1.h，且在main.cpp里面也分别include了head1.h和head2.h再进行编译就会出现： 错误原因：出现了number1重复定义的错误，为啥呢？因为在执行main.cpp文件编译的时候已经对head1.h里面的内容进行了编译定义，但到了head2.h的文件的时候又include了head1.h意味着又重复定义了一次head1.h里面的内容从而造成head1.h里的number1重复定义的错误。 如何解决？----对头文件进行防卫式定义 即对head1.h文件编辑 1234567//head1.h#ifndef _HEAD1_H//如果head1.h没有被定义那么就执行下面的内容#define _HEAD1_H//定义head1.hint number1 = 8；#endif//结束如果 当main.cpp执行编译操作的时候head1.h是没有定义的。所以#ifndef下面的内容将被执行即先定义head1.h文件。但到了include&quot;head2.h&quot;的时候发现head2.h里面也有include“head1.h”但此时head1.h已经被定义了，故#ifndef不成立下面的内容就没有被执行了，从而避免了头文件重复定义的情况。 结论：所以以后定义头文件的时候都可以进行防卫式定义然后就可以~~随便include定义的头文件了~~避免这些错误了。 –(本文完)&lt;原创&gt;]]></content>
      <categories>
        <category>代码学习</category>
        <category>C++学习</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>学习总结</tag>
        <tag>C++学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[C++进阶学习总结-(1.1)命名空间]]></title>
    <url>%2F2019%2F06%2F17%2FC%2B%2B%E8%BF%9B%E9%98%B6%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-(1.1)%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4%2F</url>
    <content type="text"><![CDATA[¶命名空间的基本概念简介 ¶基本概念 命名空间就是为了防止名字冲突引入的一种机制。系统中可以定义多个命名空间，每个命名空间都有自己的名字，不可以同名。 可以把命名空间看成一个作业域，在这个命名空间定义的函数，跟你另外一个命名空间里定义的函数，即便同名，也互不影响。 命名空间定义： 1234namespace 命名空间名&#123; void fb()&#123;&#125;//函数 ....&#125; 命名空间的定义可以不连续，甚至可以写在多个文件中，如果以为没有定义这个命名空间，那么相当于定义命名空间，如果已经定义了，那么就算打开这个命名空间并可以往里面添加新成员的声明； ¶情形 假设同一个工程里面有两个project.cpp和project2.cpp文件并分别给两个程序员去编写，在编写过程中张三和李四都定义了同名、返回值相同、参数也相同的void Print()函数，在编译时将会出现： 找到一个或多个多重定义的符号 void_cdecl Print(void)已在project2.obj中定义的错误 如何去解决这种问题呢？分别去改函数名或许是个好方法，但是如果这样的情况多了起来难免就太麻烦了。这里就可以用命名空间来解决具体： 123456//project1.cppnamespace ZhangSan &#123; void Print() &#123; cout &lt;&lt; "这是张三的Print函数" &lt;&lt; endl; &#125;&#125; 这样就解决了这种重名的问题。如果要调用张三的这个同名函数就可以用 命名空间名::实体名（函数名）的方法调用张三的Print函数 （其中&quot; : : “是作用域运算符）。 12345int main() &#123; ZhangSan::Print();//张三的 Print();//李四的&#125; 运行情况： 但是每次调用的时候都要用**命名空间名::实体名（函数名）**的方法岂不是也太麻烦了。 所以这里就要用上using关键字了，只要在头文件引入语句下面加入： using namespace ZhangSan就可以了 1234567891011#include&lt;iostream&gt;#include"project2.h"//张三命名空间定义所在的头文件using namespace std;using namespace ZhangSan;//使用的张三的命名空间int main() &#123; Print();//张三的&#125; 运行情况: –(本文完)&lt;原创&gt;]]></content>
      <categories>
        <category>代码学习</category>
        <category>C++学习</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>学习总结</tag>
        <tag>C++学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据结构学习总结-(2.5)链表存储结构的算法]]></title>
    <url>%2F2019%2F06%2F17%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%882.5%EF%BC%89%E9%93%BE%E8%A1%A8%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84%E7%9A%84%E7%AE%97%E6%B3%95%2F</url>
    <content type="text"><![CDATA[¶链表储存结构 链表（LinkedList） 定义: 每个元素用一个指针（以存储下一个数据的地址）相互串联起来为存储方式的物理存储结构 对应线性表操作： 前插数据元素 Insert_Front() 后插数据元素 Push_back() 插入数据 Insert_Element() 删除数据 Delete_Element() 获得数据 Get() 设置数据 Set() 遍历链表 Traverse() … ¶对应一些算法实现思路 插入操作： 思路：先通过移动指针获得要插入位置前一个元素的地址，然后创建一个新的元素空间让要插入的数据对其进行赋值，然后将前一个数据的next指针指向这个新空间的地址，而原来next指针指向的地址赋值给新空间的next指针 具体实现： 123456789101112131415bool InsertElement(int index, T e) &#123; LNode* p = head;//这里的p是指向头结点的指针，目的是要从第一个数据开始往下算下标 int j = 0; while (p &amp;&amp; j &lt; index-1)//定位到要插入元素位置的前一个元素（即：寻找前驱结点） &#123; p = p-&gt;next; ++j; &#125; LNode* s = new LNode();//创建一个链表数据空间 s-&gt;data = e;//把要插入的数据放入这个空间 s-&gt;next = p-&gt;next;//这个新的空间的下一个指针地址是上一个元素的下一个元素地址 p-&gt;next = s;//上一个元素的下一个指针地址变为新空间的地址 return true; &#125; 删除操作： 思路：根据要删除的位置的下标先让一个指针定位到这个位置的前一个元素。这时要先创建一个临时的指针指向将删除的元素的地址（此步目的是获得下一个元素的地址，因为删除后不能获得要删除元素next指针的地址），然后将待删除的元素的前一个元素的next指针等于这个临时指针的next指针，最后delete这个临时指针。 具体实现： 1234567891011121314bool DeleteElement(int index) &#123; LNode* p = head;//定位到头结点 int j = 0;//从第0个元素开始移动指针 while (p &amp;&amp; j &lt; index - 1) &#123;//找到要删除元素数据的前一个位置 p = p-&gt;next; ++j; &#125; LNode* q = p-&gt;next;//用一个临时指针存储要删除数据元素的位置（目的为了获取待删除数据元素的下一个数据元素的位置） p-&gt;next = q-&gt;next;//把前一个数据元素的下一个指针地址存储 delete q;//释放临时指针（即：要删除数据元素）的空间 length--; return true; &#125; ¶链表存储结构代码实现情况： 前插操作（完成） bool InsertFront(T e) 后插操作（完成） bool push_back(T e) 插入操作（完成） bool InsertElement(int index, T e) 删除操作（完成） bool DeleteElement(int index) 获得操作（完成） bool Get(int index,T&amp; e) 修改操作（完成） bool Set(int index, T e) 遍历操作（完成） void Traverse(void(*fb)(T&amp; t)) ¶代码详细 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192#include&lt;iostream&gt;using namespace std;template&lt;typename T&gt;class LkList&#123; struct LNode &#123; T data;//数据 LNode* next;//指向下一个数据的指针 &#125;; LNode* head;//头指针 int length;public: /*构造函数*/ LkList() &#123; head = new LNode(); length = 0; if (!head)throw"No Memory";//若没有new出来就抛出异常 head-&gt;next = 0; &#125; /*获得数据操作*/ bool Get(int index,T&amp; e) &#123; LNode* p = head-&gt;next;//这里的p指向的下一个元素的头指针 int j = 1; while (p &amp;&amp; j &lt; index) &#123; p = p-&gt;next;//把p的指针往后一个元素头指针移动 ++j; &#125; if (!p || j &gt; index) return false; e = p-&gt;data;//获得数据 return true; &#125; /*插入元素操作*/ bool InsertElement(int index, T e) &#123; LNode* p = head;//这里的p是指向头结点的指针，目的是要从第一个数据开始往下算下标 int j = 0; while (p &amp;&amp; j &lt; index-1)//定位到要插入元素位置的前一个元素（即：寻找前驱结点） &#123; p = p-&gt;next; ++j; &#125; if (!p || j &gt; index) return false; LNode* s = new LNode();//创建一个链表数据空间 s-&gt;data = e;//把要插入的数据放入这个空间 s-&gt;next = p-&gt;next;//这个新的空间的下一个指针地址是上一个元素的下一个元素地址 p-&gt;next = s;//上一个元素的下一个指针地址变为新空间的地址 length++; return true; &#125; /*删除元素操作*/ bool DeleteElement(int index) &#123; LNode* p = head;//定位到头结点 int j = 0;//从第0个元素开始移动指针 while (p &amp;&amp; j &lt; index - 1) &#123;//找到要删除元素数据的前一个位置 p = p-&gt;next; ++j; &#125; if (!p || j &gt; index) return false; LNode* q = p-&gt;next;//用一个临时指针存储要删除数据元素的位置（目的为了获取待删除数据元素的下一个数据元素的位置） p-&gt;next = q-&gt;next;//把前一个数据元素的下一个指针地址存储 delete q;//释放临时指针（即：要删除数据元素）的空间 length--; return true; &#125; /*前插操作*/ bool InsertFront(T e) &#123; LNode* q = new LNode();//创建一个新数据空间 if (!q)return false; q-&gt;data = e;//对要插入的数据进行赋值到这个空间的data q-&gt;next = 0;//避免第一个数据next指针出现野指针的问题 q-&gt;next = head-&gt;next;//与头结点相连 head-&gt;next = q;//这个next指针指向第二个数据的位置 length++; return true; &#125; /*往后插入操作*/ bool push_back(T e) &#123; LNode* p = head;//从头结点开始让指针指向最后一个数据元素的地址 LNode* q = new LNode(); int j = 0; while (p-&gt;next)//如果p-&gt;next为空指针，意味着找到了最后一个数据元素的地址 &#123; p = p-&gt;next; &#125; if (!p)return false; q-&gt;data = e;//进行data赋值 q-&gt;next = 0;//因为是后插，说明后面没有数据元素地址，让这个空间的next指针赋值为0 避免野指针问题 p-&gt;next = q;//原最后一个元素数据的next指向这个新插入的空间地址 length++; return true; &#125; /*设置操作*/ bool Set(int index, T e) &#123; LNode* p = head;//从头结点开始寻找要修改的位置 int j = 0; while (p &amp;&amp; j &lt; index) &#123; p = p-&gt;next; ++j; &#125; if (!p || j &gt; index) return false; p-&gt;data = e;//数据进行修改 return true; &#125; /*遍历操作*/ void Traverse(void(*fb)(T&amp; t)) &#123; LNode* p = head-&gt;next;//从头结点开始遍历每一个元素的data while (p) &#123; fb(p-&gt;data); p = p-&gt;next; &#125; &#125;private:&#125;;template&lt;typename T&gt;void Print(T&amp;t) &#123; cout &lt;&lt; t &lt;&lt; " ";&#125;int main() &#123; LkList&lt;char&gt; List; cout &lt;&lt; "前插了一个A " &lt;&lt; endl; List.InsertFront('A'); List.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "前插了一个B " &lt;&lt; endl; List.InsertFront('B'); List.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "后插了一个C " &lt;&lt; endl; List.push_back('C'); List.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "在第4个位置插入了O " &lt;&lt; endl; List.InsertElement(4, 'O'); List.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "在第4个位置插入了G " &lt;&lt; endl; List.InsertElement(4, 'G'); List.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "删除了第2位的元素 " &lt;&lt; endl; List.DeleteElement(2); List.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "把第3位的数据修改成I" &lt;&lt; endl; List.Set(3,'I'); List.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "获得第4位的数据 " &lt;&lt; endl; char ch; List.Get(4, ch); cout &lt;&lt; ch &lt;&lt; endl;&#125; –（本文完)&lt;原创&gt;]]></content>
      <categories>
        <category>代码学习</category>
        <category>数据结构学习</category>
      </categories>
      <tags>
        <tag>学习总结</tag>
        <tag>数据结构</tag>
        <tag>数据结构-学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据结构学习总结-(2.4)初识链表]]></title>
    <url>%2F2019%2F06%2F16%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%882.4%EF%BC%89%E5%88%9D%E8%AF%86%E9%93%BE%E8%A1%A8%2F</url>
    <content type="text"><![CDATA[¶链表基本概念 结点包括数据域和指针域。 链表是有n个结点链结成，第一个结点的存储位置叫做头指针，最后一个结点的指针为“空”。 相较于顺序表存储结构的优点： 不用定义时规定长度。 存储的元素个数不受限制。 插入和删除元素时，不用移动其他元素。 ¶链表的头指针和头结点 基本概念 头指针：链表中第一个结点的储存位置。 头结点：在单链表的第一个结点前附设的一个结点。 头指针 头结点 若链表有头结点，则是指向头结点的指针；若没有则是链表指向第一个结点的指针 头结点是为了操作的统一和方便而设立的，放在第一个结点之前 其数据域一般无意义（可以存储链表的长度） 头指针具有表示作用，所以常常有头指针表示链表的名字 有了头结点，在第一个结点前插入和删除第一个结点时，操作与其他结点的操作就统一了 无论链表是否为空，头指针均不为空。头指针是链表的必要元素 头结点不一定是链表的必须要素 ¶链表存储结构 链表存储结构的特点是如何将数据域与“指标”（指针域）配对，以及指示下一条数据的内存位置。 链表存储结构中，数据存储在内存中分散的位置。各个数据由一个指针相互连接 一个数据中的指针域存放的是下一个数据的地址。 由于数据储存在不同的位置，每一个数据只能通过指针域中的指针来访问 删除：删除元素时只需将前一个数据的指针域指向要删除数据的下一个数据的地址即可，从而避免了顺序表存储结构多次的数据调换的麻烦。 添加：添加只需把要添加的位置的前一个数据的指针指向新数据，再让新数据的“指标”指向后一个数据的地址即可。 –（本文完）]]></content>
      <categories>
        <category>代码学习</category>
        <category>数据结构学习</category>
      </categories>
      <tags>
        <tag>学习总结</tag>
        <tag>数据结构</tag>
        <tag>数据结构-学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据结构学习总结-（2.3）顺序表存储结构代码、算法实现]]></title>
    <url>%2F2019%2F06%2F15%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%882.3%EF%BC%89%E9%A1%BA%E5%BA%8F%E8%A1%A8%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81%E3%80%81%E7%AE%97%E6%B3%95%E5%AE%9E%E7%8E%B0%2F</url>
    <content type="text"><![CDATA[¶顺序表储存结构 顺序表(SqList) 定义： 顺序表存储结构是一个以连续空间地址存储为方式的物理结构 实现线性表相应操作： SqList（） 初始化线性表：创建一个空的线性表List SqList.InsertElement（index ， e） 在线性表List的index下标处插入元素e SqList.DeleteElement（ index， *e) 删除线性表List中的第i个元素，并返回删除元素指针e SqList.GetLength（） 获得线性表的长度 SqList.DeleteAllElement（） 清空线性表 SqList.find（e） 查找线性表中的元素e … ¶一些基础算法的实现思路 插入算法： 思路：根据想要插入的下标为准，用循环各各数值往后移动（即：相互覆盖赋值）空出指定下标进行插入赋值。从最后一个元素开始往后赋值 具体实现： 12345678910void InsertElement(int index, Datas t) &#123; length++;//因为要插入一个新的元素，故实际长度要加1 for (int i = length; i &gt; index; i--) &#123;//先把后面的元素全部往后覆盖赋值 datas[i] = datas[i - 1]; &#125; datas[index] = t;//在目标index位置插入新元素 &#125; 删除算法： 思路：根据要删除元素的下标为目标往前覆盖赋值。 具体实现： 1234567void DeleteElement(int index) &#123; for (int i = index; i &lt; length-1; i++) &#123; datas[i] = datas[i + 1]; &#125; length--;//每删除一个length（实际长度）将减少 &#125; 扩容： 思路：先判断是否是否满了，（即：用最大容量与实际长度相互比较如果相等那么就算满了），确定满容后先重新获得一个跟大的空间容量，然后把原来的线性表数组对其进行赋值。Delete原线性表数组，地址等于新扩容后的地址，完成扩容操作。 具体实现： 1234567891011121314if(length == capacity)//判断使用扩容的时机void realloc() &#123; T* p = new T[2 * capacity];//最大容量扩大两倍 for (int i = 0; i &lt; length; i++) &#123;//把原顺序表赋值到新顺序表 p[i] = datas[i]; &#125; delete[]datas;//清空原线性表里的元素 datas = p;//把新扩容后线性表的地址赋给datas p = NULL;//避免临时指针p变为野指针 capacity *= 2;//总容量扩大 &#125; ¶根据线性表用顺序存储结构实现的操作完成情况： 增加元素（完成） bool Push_back(T) 查找元素（完成） bool GetElement(int index,T&amp;c) 扩容（完成） bool realloc() 删除元素（完成） bool DeleteElement(int index) 插入元素(完成) bool InsertElement(int index, T t) 清空元素（完成）&lt;待完善修改&gt; bool DeleteAllElement() ¶代码详细： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198#include&lt;iostream&gt;#define MAX_SIZE 1 //定义最大容量using namespace std;template&lt;typename T&gt;class SqList&#123;private: T* datas; //线性表 int length = 0;//实际容量 int capacity;//总容量public: /*构造函数*/ SqList() &#123; capacity = MAX_SIZE;//总容量等于最大容量（进行初始化） datas = new T[capacity]; cout &lt;&lt; "初始化成功！！！" &lt;&lt; endl; &#125; /*获得总容量*/ int GetLength() &#123; return length; &#125; /*查找并取值操作*/ bool GetElement(int index, T&amp; c) &#123; if (index &lt; 0 || index &gt; length) return false; c = datas[index]; return true; &#125; /*增加元素操作*/ bool Push_back(T NewElem) &#123; if (length == capacity)//判断顺序表是否满了 &#123;//如果满了调用扩容操作 if(!realloc())//如果扩容失败那么Push_back也失败 return false; &#125; datas[length] = NewElem; length++; return true; &#125; /*设置元素操作*/ bool SetElement(int index, T t) &#123; if (index&lt;0 || index&gt;length)//判断下标是否输入正确 return false; datas[index] = t; return true; &#125; /*插入元素操作*/ bool InsertElement(int index, T t) &#123; if (index&lt;0 || index&gt;length)//判断下标是否输入正确 return false; length++;//因为要插入一个新的元素，故实际长度要加1 if (length == capacity)//判断顺序表是否满了 &#123;//如果满了调用扩容操作 if (!realloc())//如果扩容失败那么Push_back也失败 return false; &#125; for (int i = length; i &gt; index; i--) &#123;//先把后面的元素全部后退 datas[i] = datas[i - 1]; &#125; datas[index] = t;//在目标index位置插入新元素 return true; &#125; /*删除元素操作*/ bool DeleteElement(int index) &#123; if (index&lt;0 || index&gt;length)//判断下标是否输入正确 return false; for (int i = index; i &lt; length-1; i++) &#123; datas[i] = datas[i + 1]; &#125; length--;//每删除一个length（实际长度）将减少 return true;//删除动作完成后返回true &#125; /*清空元素操作*/ bool DeleteAllElement() &#123; int len = length; for (int i = 0; i &lt; len; i++) &#123; DeleteElement(0); &#125; return true; &#125; /*查找元素操作*/ int find(T e, int pos = 0) &#123; for (int i = pos; i &lt; length; i++) &#123; if(datas[i] == e) return i; &#125; return -1; &#125;private: /*扩容操作*/ bool realloc() &#123; T* p = new T[2 * capacity];//最大容量扩大两倍 cout &lt;&lt; "扩容成功！！！" &lt;&lt; endl; if (!p)return false; for (int i = 0; i &lt; length; i++) &#123;//把原顺序表赋值到新顺序表 p[i] = datas[i]; &#125; delete[]datas;//清空原线性表里的元素 datas = p;//把新扩容后线性表的地址赋给datas p = NULL;//避免临时指针p变为野指针 capacity *= 2;//总容量扩大 return true;//更换扩容操作完成后宣布扩容操作成功 &#125;&#125;;//打印顺序表操作template&lt;typename T&gt;//模版void Print(SqList&lt;T&gt;&amp; L) &#123; T e; for (int i = 0; i &lt; L.GetLength(); i++) &#123; L.GetElement(i, e); cout &lt;&lt; e &lt;&lt; " "; &#125; cout &lt;&lt; endl;&#125; int main() &#123; SqList&lt;char&gt; List; char ch; if (!List.GetElement(1, ch)) cout &lt;&lt; "未找到" &lt;&lt; endl; cout &lt;&lt; "加入A" &lt;&lt; endl; List.Push_back('A'); Print(List); cout &lt;&lt; "加入B" &lt;&lt; endl; List.Push_back('B'); Print(List); cout &lt;&lt; "修改下标为1的B为G" &lt;&lt; endl; List.SetElement(1, 'G'); Print(List); cout &lt;&lt; "加入C" &lt;&lt; endl; List.Push_back('C'); Print(List); cout &lt;&lt; "加入D" &lt;&lt; endl; List.Push_back('D'); Print(List); cout &lt;&lt; "在下标为2的位置插入O" &lt;&lt; endl; List.InsertElement(2, 'O'); Print(List); cout &lt;&lt; "删除下标为1的G" &lt;&lt; endl; List.DeleteElement(1); Print(List); cout &lt;&lt; "寻找M的下标为： " &lt;&lt; List.find('M') &lt;&lt; endl; cout &lt;&lt; "清空了所有元素" &lt;&lt; endl; List.DeleteAllElement(); cout &lt;&lt; "加入F" &lt;&lt; endl; List.Push_back('F'); Print(List); cout &lt;&lt; "寻找A的下标为： " &lt;&lt; List.find('A') &lt;&lt; endl; cout &lt;&lt; "在下标9位置插入G" &lt;&lt; endl; List.InsertElement(9, 'G'); Print(List);&#125; –(本文完)&lt;原创&gt;]]></content>
      <categories>
        <category>代码学习</category>
        <category>数据结构学习</category>
      </categories>
      <tags>
        <tag>学习总结</tag>
        <tag>数据结构</tag>
        <tag>数据结构-学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[大学学习个人计划及路线规划]]></title>
    <url>%2F2019%2F06%2F15%2F%E5%A4%A7%E5%AD%A6%E5%AD%A6%E4%B9%A0%E4%B8%AA%E4%BA%BA%E8%AE%A1%E5%88%92%E5%8F%8A%E8%B7%AF%E7%BA%BF%E8%A7%84%E5%88%92%2F</url>
    <content type="text"><![CDATA[Welcome to my blog, enter password to read. Incorrect Password! No content to display! U2FsdGVkX1/B2/5tuH4k0rlYMaFvN/OAFii4zslb4ZiVd82zKUrKpCu7gCrMCYnxKZXvrON+4YNz1EHUWPzthbZZdvRv8fr1A9qsvvj7fgC8qob4zzGGtft42fFjgsXu3OeSvCXR4wa3EHoGF8FwGAc+egO2e1IfgShHrop2a1xHBdwjbZLo8CRBHZ503ct1J9yIbWXXnWwsIPmtJ9oyWkj6mWW1Ga9cKvoDvQcx8IC/sg0I/E/G9wjNegJNkVSUdCLjBn3CdUE4/SS7nxtKElA4NupxraTJURl30ebYxQY1Te1iU365UcPG/Qad+ia3ur3VkMHPnZp8GLxJ+h/+atK6SpAL3ZHN1+xxcO+PilDw5uiV4SKnEUvz1X/+B/syZiQUe1ydm33sTPZqNDEif9LO9QMWeFDHCYE0/mEVYmNE97eIVOvNi5cq1eGl3HmgBLal1LfA3efWIOUVPTdGojjbaqAZqZ3nCmYY5NRjbH7nUGuD0bCQWP3DRARBKNrjVbqCDpHoxZDS8kNjFugbDsQQlbBKG21pIg+HTVmrNI38gYVh+Wb6MzZgxWcZCK6YnUP402Xx2ZjFGMchONyL8NKxW14ZRE3EJS5CdsPWjijSN5oXvNLtmawhQ76LVG/5RbQgVSkmhYbhCJSjR0B/7Bsoyf/DyaqBneUN5U5x4ZCcUck66l88Jxgil0VJ78/ZW7LXyJTUcrCnHgCEZqbntcVmOGvmvqZdyDOPqvxsJ0gch8VVvHBRw4XSwWJm0/8YIL5IUwrtCKt7k0nbvYYTqT4yQeg8Scky1ePo3TGKd1wBLl/iMzE+1Mm3xJe+9k2KU6icfS3MhRBTq/83NukNcTiM0fbuCKai5uUGtNTOQJHVRX3c8CalJShrhgUD8dnTvR3QYHp/aJaFmTkx/qjePup0IsIh40hKWqyVfuOxK04yGqeRUUQGscTbup5jPOIAI1o7au9fiHqC0T1+EBpos2RtKUdURQfphEKf6U+HVdDkGvhsxt0BpL3PYSb7fyj2qfY1QbWjyF9VOPJyOvNv+3BjPO12XcMb7KT7e4SuDCN65XFtaOIMlyKVQ3O2X7RFsLgJZa2Xv3xLiBnnlQ39DhPotRtd38+Ble4/YW15FM7gXvSgz8f+OL8jjNIvGuIF6wddcte95YVVf/1EqIwqBoUVkzSU96j8SoBBEpv97bwNnltujLjaadN9uK0eu5xmvRFRgUGi5bukBzo8U76mhlPedsYAAW5QlIylL1h6gYQ=]]></content>
      <categories>
        <category>个人随感</category>
      </categories>
      <tags>
        <tag>学习计划</tag>
        <tag>目标</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据结构学习总结-（2.2）顺序表存储结构]]></title>
    <url>%2F2019%2F06%2F14%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%882.2%EF%BC%89%E9%A1%BA%E5%BA%8F%E8%A1%A8%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84%2F</url>
    <content type="text"><![CDATA[¶顺序表结构 顺序存储结构的线性表–顺序表 定义：指的是用一段地址连续的存储单元依次存储线性表的数据元素（数组） ¶顺序表的构成 需要定义线性表的最大存储空间 #define int Max_SIZE = 255; 线性表里需要有统一类型的元素集合 12345678910111213141516#define int MAX_SIZE = 255;//最大存储长度 /*定义线性表*/typedef int ElemType;//给int起一个别名 ElementTypetypedef struct&#123; int num;char* name;&#125;ElementType;/*定义顺序表结构*/typedef struct &#123; ElementType Datas[MAX_SIZE]; int length;//当前长度&#125;SeqList; –(本文完)&lt;待完善&gt;]]></content>
      <categories>
        <category>代码学习</category>
        <category>数据结构学习</category>
      </categories>
      <tags>
        <tag>学习总结</tag>
        <tag>数据结构</tag>
        <tag>数据结构-学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[石膏球（练习）]]></title>
    <url>%2F2019%2F06%2F14%2F%E7%9F%B3%E8%86%8F%E7%90%83%EF%BC%88%E7%BB%83%E4%B9%A0%EF%BC%89%2F</url>
    <content type="text"><![CDATA[]]></content>
      <categories>
        <category>绘画</category>
        <category>练习</category>
      </categories>
      <tags>
        <tag>绘画练习</tag>
        <tag>素描</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java学习心得体会]]></title>
    <url>%2F2019%2F06%2F14%2FJava%E5%AD%A6%E4%B9%A0%E5%BF%83%E5%BE%97%E4%BD%93%E4%BC%9A%2F</url>
    <content type="text"><![CDATA[​ 先简单说一下我对于编程这一门课程个人感受吧，编程说难也难，但说它简单也不过分。难，难在程序编写过程的中的思考方式。简单，就简单在一旦你掌握了基本语句和方法的基础下，有着一个活跃的思维思考能力，程序编程基本都是水到渠成的事。接下来我就简单说下我个人对于Java学习过程中一些心得和学习方法供大家参考一下吧。 ¶心得： ​ 首先我在大一是有接触过C++的，刚拿到课本也是一头雾水，看不明白。但在深入学习后，我认为掌握一门程序语言重要的不是知道它具体的语法和规则，而是运用这些语法和规则时的思维。为什么编程的思维很重要呢？这是一个很现实的问题，如今知识更新快，社会发展非常快，意味着编程语言的变化也是很无常的，或许你刚掌握了java语言，市场上就有了更好的编程语言。这就意味着你要继续学习新的语言和知识，如果此时你有一个活跃的编程思维，去接触新的语言学会它会非常容易。 说了这么多思维很重要，那编程思维到底是怎样的？举个小例子：假设你要编程一个超市商品结账的程序，先不要想怎么去编写它。先去思考一下，假如你在超市工作并给一个顾客买的两个东西结账。结账时你要做的事情：你要先识别他买的两个东西单价分别是多少钱，买了多少个，总金额多少，付钱结账最后打印一个小票给这个顾客。简化下来就是：1.识别物品，2.计算金额3.打印信息。好的！接下来用编程来搞定它，1.识别物品从你一大堆的商品信息中找到这个商品的信息。怎么编这个功能？用循环被一个个找。找到同名的商品并得到它的金额信息就可以了。2.计算金额 用循环累加，3.打印出信息 完成本次结账，程序结束。从上面可以看出编这个程序思考方向：明确你程序要干的事情是什么（目的是结账），干这个事情有什么动作（1.识别食品找到对应的价格2.计算总金额3.打印信息），完成这些动作要用什么方法（1.可以用循环来找或其他方法2.每一项金额累加3.打印上面步骤得到的数据信息）。你能在看见一个动作就能想到一个方法去解决它。这就要靠活跃的思维，怎么样用你所学到的编程规则与语句对应想出编写针对它解决它的方法，这就是一个编程的思维。 ¶学习方法： ​ 根据上文所述的思维的方式我说下我自己的学习方法供大家参考。 根据自己的想法用自己的话去总结每一章学习的知识：这里要注意！自己每次学习完一章内容尽量地去总结且一定要根据自己的话和自己的思考去总结不能网上复制粘贴一下概念知识。这样做有两个好处：①加固加深你所学的知识，毕竟是根据自己思考后总结出来的、②培养独立的学习思考能力（说白了就是把你学到的知识用自己的理解写一个类似于教材的总结）。 建立编程错误库：其实很多人在编程的时候都会遇到红标报错，这是很正常的事情我们本来就是在试错中才能积累经验。你每一次出错，如果你有时间可以编写一个文档计入每一次遇到的新的报错 并且记录下错因是什么 怎么去解决，这样遇到同样的错误就会有条件反射：“哦！我以前犯过NullPointException的错误，这个错误是空指针错误，原因是有一个对象没有给它空间，应该调用它的构造方法去解决它。”慢慢的就会有独立去解决这些错误的能力了。当然如果你没有多余的时间，也可以让自己的脑子去记下来QWQ。 找个好（ji）朋友进行讨论和思维碰撞：单干是很寂寞的。可以找一个好朋友、舍友进行思维碰撞和讨论。这也很重要！为什么，因为每一个对同一个问题的思考方式、方向都不可能完全相同的。通过思维的交汇，朋友间能相互提高且提高的跟快。再者可以有效的避免一些舍友之间的矛盾。 兴趣主导目标引领：有一个学习目标是很重要的，当然这得取决你不会去排斥它，就如编程。你主动爱它虽然它不会爱你_(:з」∠)_。但你排斥它，它也一定会排斥你这也是必然的。所以学好一门课首先是要培养出对它的兴趣，然后java语言与其他编程语言一样，学习它时候是要用大量的课余时间去练习它。练习也是要有目的的，你可以就按每次作业的要求去学习它，在完成作业后，你也可以自己想一点小玩意供自己去练习。例如：你看见你去钱用的很乱，你就会想编一个记账的小程序，然后就有一个目标出现了。你就会根据你的小目标去主动学习主动搜索你所需要的知识。学习一门课程，只要你站在主动的一方，一切问题就非常好解决了。 从初学就养成良好的编码习惯：这里有些人可能有点疑问，码是我编的，我想咋编就咋编我看得懂就ok这样的思想是很错误的。首先这样做DEbug会非常辛苦，现在是小程序可能体会不出来，当你编写几百行几万行以上的代码就会痛苦的不得了。（个人亲试过：你体验过自己编了700多行代码的程序，de一个bug蹦出一堆bug的快感吗？）。这里我非常推荐一点要写注释！特别是自己想的方法。这样做有两个好处：①这样你编写这个方法的时候思路会比较明确，知道每一步要怎么去做。 ②.对于以后工作写文档会有用处，未来的代码是要给别人看的。 然后我提一点其他的好习惯吧。㈠定义变量的时候命名让它有意义，且在定义的时候一个变量占一行，有关联的变量尽量相近定义。㈡善用回车换行，这里举一个简单的例子吧。每个方法尽量用两个回车来分开。这样做，一是方便注释，二是方便分辨每一个方法体，且美观。这里要注意回车换行适度就行，不宜太多。其他方法可以搜索网上资料。这里就不一一叙述了。养成良好的编程习惯一是方便你自己，二来也对未来工作有非常大的帮助。 尽量先靠自己去想怎么做：不要一遇到不会就百度、参考其他同学的代码。切记！有人会说，参考后我会自己去理解，之后也不是会变成我自己的知识吗？这样说吧：这样做好比你在海上航行，你知道答案了就像你知道目的地的准确位置了，接下来你只需把船开过去即可，但正常情况下，你应该要靠自己的能力去找目的地而不是知道它在哪的前提下去航海。未来工作也是这样。一个是逆向思考，另一个是正向思考。两者是不一样的。所以我们一定要先独立思考。直到真的完全不会了再去参考学习。每次都参考别人的东西去学习，会导致一个依赖感长期的逆向思考，到了真的要自己动手的时候发现一点都不会。这也解释了一些同学看得懂代码，自己动手却什么都不会的原因。 ​ 最后我先明确我的这些理解和见解只供大家去参考。我的一些理解和心得可能没有你们的好，学习方法或许你的也会更棒。所以不要太局限于我的见解QAQ。 –（本文完）&lt;原创&gt;]]></content>
      <categories>
        <category>个人随感</category>
      </categories>
      <tags>
        <tag>学习总结</tag>
        <tag>心得体会</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据结构学习总结-（2.1）线性表的抽象数据类型]]></title>
    <url>%2F2019%2F06%2F14%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%882.1%EF%BC%89%E7%BA%BF%E6%80%A7%E8%A1%A8%E7%9A%84%E6%8A%BD%E8%B1%A1%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%2F</url>
    <content type="text"><![CDATA[¶线性表 定义： 零个或多个数据元素的有限序列。 特点: 它是一个序列 数据元素之间是有有序的。 数据元素之间是一对一的关系。 有限性 两个数据元素的有限序列称为空表。 常见线性表的操作： 删除 插入 创建 初始化 清空 查找 ¶线性表的抽象数据类型 ADT 线性表(List) Data 线性表数据元素是一个集合{a_1 , a_2 , a_3 , … , a_n},数据元素的类型DataType（int , char ,…)。 除了第一个（a_1）元素外，每个元素有且只有一个直接的前驱元素。 例如 : a_2的前驱元素是a_1。 除了最后一个（a_n）元素外，每一个元素有且只有一个直接的后继元素。 例如: a_3是a_2的后继元素。 Operation InitList（*List） 初始化线性表：创建一个空的线性表List InsertElement（*List ， index ， e） 在线性表List的index下标处插入元素e DeleteElement（*List ， index， *e) 删除线性表List中的第i个元素，并返回删除元素指针e GetLength（*List） 获得线性表的长度 IsEmpty（*List） 判断线性表是否为空表 ClearList（*List） 清空线性表 ExsitElement（*List ， e） 查找线性表中的元素e endADT ¶个人理解： ​ 在实际上，线性表可以理解为一群人在排队，排队的都是人（数据元素类型相同），然后他们是排成一条线的。首先排队的人肯定是有限的（即：有限性）其次他们每一个人是相互连成一条线的，即一个人跟着一个人有顺序（即：一对一、有序的）。 ​ 再者，这队排队的人，除了第一个人前面没人，最后一个人后面没人外。其中每一个人都是前后都有人的。例如第二个人的前面是第一个人（即：第一个人为第二个人的前驱元素），而第三个人是第二个人的后面（即：第三个人为第二个人的后继元素）。 ​ 这队排队的人是在等待上车的。他们之间可能会有人在中途想上厕所从而离开了队伍（即：删除），又或者有人在后面加入进去了（即：增加），这时检票员也会一一核对信息对照人员表查找每一个人是否到齐了（即：查找），这时上厕所的人回来了因为这队人是有顺序的，所以这位回来的也可以插入原来的位置（即：插入）。 –（本文完）]]></content>
      <categories>
        <category>代码学习</category>
        <category>数据结构学习</category>
      </categories>
      <tags>
        <tag>学习总结</tag>
        <tag>数据结构</tag>
        <tag>数据结构-学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据结构学习总结-（2）第二章预习]]></title>
    <url>%2F2019%2F06%2F12%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%882%EF%BC%89%E7%AC%AC%E4%BA%8C%E7%AB%A0%E9%A2%84%E4%B9%A0%2F</url>
    <content type="text"><![CDATA[¶问题： 线性表的顺序存储的优点和缺点有哪些？ 线性表的删除和插入算法的思路？ 数组长度和线性表长度的区别？ 顺序存储结构的三大属性？ –（本文未完）]]></content>
      <categories>
        <category>代码学习</category>
        <category>数据结构学习</category>
      </categories>
      <tags>
        <tag>学习总结</tag>
        <tag>数据结构</tag>
        <tag>数据结构-学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据结构学习总结-(1.2)抽象数据类型]]></title>
    <url>%2F2019%2F06%2F12%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%881.2%EF%BC%89%E6%8A%BD%E8%B1%A1%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%2F</url>
    <content type="text"><![CDATA[¶抽象数据类型 ¶数据类型 定义： 计算机中，内存空间是最有限的，不同的类型的数据分配的内存空间大小不同。 例如：在C++ 中 整型占4个字节，双精度浮点数占8个字节等等 数据类型就是指一组性质相同的值和集合及定义在此集合上的一些操作的总称 ¶例如在C/C++语言中的数据类型中是按取值不同分类的数据类型 原子型（不可再分）：不可再分的数据类型。例如：int(整型)、double（双精度浮点型）等等 结构型（可再分）：若干个数据类型（包括原子型和结构型）组成的一个组合。例如：数组，类，结构体（C/C++）等。 ¶抽象数据类型（Abstruct Data Type[ADT]) 定义：是对已有的数据类型进行抽象 抽象数据类型是指一个数据模型及定义在该模型上的一组操作 模板： ADT 抽象数据类型名 Data 数据元素之间的逻辑关系的定义 Operation 操作1 初始条件 操作结果描述 操作2 … 操作n … endADT ¶个人理解：通过套用上面的模板 解释int（整型数据类型） int（整型） 是以线性结构存储一个int（整型）数据类型占4个字节 Operation 操作1：加法 需要两个数 结果为两个数的和 操作2：减法 需要两个数 结果为两个数的差 操作3：乘法 … 操作4：除法 … ¶个人总结： 用自己的话简述下列术语： 数据：类似一个或几个人的全部基本信息（姓名、性别、爱好等）。 数据元素：人基本类型里面的单一个姓名、性别等。 数据对象：单一个人的基本信息。 数据结构：数据通过一定的结构、关系（计算方法【算法】）存储起来就是数据结构 例如：上面所说的数据 --多个人的基本信息 一般是用列表格的形式存储的，即所用的是线性逻辑结构存储的。 存储结构（物理结构）：是对逻辑结构在计算机上的表示。即对上面的数据结构在计算机进行实习，如果是顺序存储结构，那么这些个人基本信息可能是用数组储存起来的。 数据类型：例如 整型、浮点型就是一个数据类型，数据类型是一组相同值和其每个值之间特有的关系上的操作的总称。例如整型，它每一个数据元素都是一个整数，他们可以进行加减乘除等操作。 抽象数据类型：类似于数据类型，但是把一些东西抽象化成数据类型。例如游戏角色，它的数据元素（对比就是整型里面的整数）有很多，例如武器、玩家属性等、这个数据类型可以执行的动作有移动攻击等。 数据结构和抽象数据类型的概念与程序设计语言中的数据类型概念的区别 抽象数据类型是对软件设计过程中问题模型抽象出来的逻辑结构和在逻辑结构上的运算。 数据结构是计算机处理元素的组织形式的相互关系。 程序设计语言中的数据类型是已经实现了的数据结构。 即：一个还没有被实现（抽象数据类型）一个是已经实现的了（程序设计语言中的数据类型） 而数据结构是指： 数据的相互之间存在一种或多种特点关系的数据元素的集合。 --（本文完）&lt;待完善&gt;]]></content>
      <categories>
        <category>代码学习</category>
        <category>数据结构学习</category>
      </categories>
      <tags>
        <tag>学习总结</tag>
        <tag>数据结构</tag>
        <tag>数据结构-学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java模拟考心得体会]]></title>
    <url>%2F2019%2F06%2F12%2FJava%E6%A8%A1%E6%8B%9F%E8%80%83%E5%BF%83%E5%BE%97%E4%BD%93%E4%BC%9A%2F</url>
    <content type="text"><![CDATA[¶今天进行了Java期末考试的模拟考，颇有心得与感触，以本文进行叙述： 遇到的问题比较多：例如 &gt;&gt; 与 *&gt;&gt;&gt;*运算符 这里的意思是这样的 *&gt;&gt;*有符号的右移这是对二进制的数来说的 int i=8，那么 i &gt;&gt; 2就是二进制往右移两位，即：（0）1000【8】 往右移两位就是 （0）0010【2】，而&gt;&gt;&gt;就是不考虑符号位。 jpane的默认布局是流式布局 （我居然写BorderLayout） 其次是swing包里面的 按钮监听器不太熟 ¶警示： 千万不要在程序设计或填空 题目里面用Shift + F 格式化 切记切记！！ ¶其他知识点： 按钮监听器重写方法：public void actionPerformed(ActionEvent event) 对于子类可以从父类继承的成员变量，只要子类中声明的成员变量和父类中的成员变量同名时，子类就隐藏了继承的成员变量，子类自己声明定义的方法操作与父类同名的成员变量是指子类重新声明定义的这个成员变量。 –（本文完）]]></content>
      <categories>
        <category>个人随感</category>
      </categories>
      <tags>
        <tag>心得体会</tag>
        <tag>考试</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据结构学习总结-（1.1）数据结构的基本概念]]></title>
    <url>%2F2019%2F06%2F11%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%881.1%EF%BC%89%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5%2F</url>
    <content type="text"><![CDATA[¶数据结构的基本概念 ¶五个基本概念： ¶数据 定义：描述客观事物的符号，是计算机中可以操作的对象。 个人理解：类似于整型，或者一个文件都是可以看出数据。实际情况：例如我输入的账号密码就算是为数据 ¶数据元素 定义：组成数据的、有一定意义的基本单位，在计算机中通常作为整体处理，也被称为记录。 数据元素是数据结构的聚焦点 个人理解：把数据比喻成一个文件夹，那么数据元素就应该是里面的一个不可分的文件~~（高达模型上面的一个零件？）~~。 ¶数据项 定义： 一个数据元素可以由若干个数据项组成。 个人理解 ： 数据元素比作对象，那么数据项就类似于对象的属性（成员变量）。例如：上面输入信息时，用户名和密码分别就算是数据项 ¶数据对象 定义： 性质相同的数据元素的集合，是数据的子集。 个人理解：这个应该是介于数据和数据项中间的东西 ¶数据结构（data structure） 定义：数据结构是相互之间存在一种或多种特定关系的数据元素的集合。 数据元素 + 特定关系 = 数据结构 ¶总结：用实际情形来描述，你在一个网站上进行注册，要求填写个人形象，其中里面的姓名、密码就是 数据项 ，每一个数据项组成的就是一个 数据元素 ，数据元素一多起来就统称为：数据 ¶逻辑结构 集合结构 图形结构（图） 树形结构（皇帝与丞民） 线性结构 ¶物理结构 定义：又叫存储结构，是指数据的逻辑结构在计算机中的存储形式。 顺序存储结构 ：类似于数组 ，把数据元素存储在地址连续的储存单元里。 链式存储结构 ：把数据元素存放在任意的存储单元里 类似于数组，但可以不连续，每一个数值直接有一个类似于绳子或链条的东西相互绑定。 类似指针 –（本文完）]]></content>
      <categories>
        <category>代码学习</category>
        <category>数据结构学习</category>
      </categories>
      <tags>
        <tag>学习总结</tag>
        <tag>数据结构</tag>
        <tag>数据结构-学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[石膏立方体（练习）]]></title>
    <url>%2F2019%2F06%2F11%2F%E7%9F%B3%E8%86%8F%E7%AB%8B%E6%96%B9%E4%BD%93%EF%BC%88%E7%BB%83%E4%B9%A0%EF%BC%89%2F</url>
    <content type="text"><![CDATA[]]></content>
      <categories>
        <category>绘画</category>
        <category>练习</category>
      </categories>
      <tags>
        <tag>绘画练习</tag>
        <tag>素描</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[[置顶]欢迎来到ShuHaoHwang的博客！！]]></title>
    <url>%2F2019%2F06%2F11%2F%5B%E7%BD%AE%E9%A1%B6%5D%E6%AC%A2%E8%BF%8E%E6%9D%A5%E5%88%B0%E6%9C%AC%E5%8D%9A%E4%B8%BB%E7%9A%84%E5%8D%9A%E5%AE%A2%EF%BC%81%EF%BC%81%2F</url>
    <content type="text"><![CDATA[本博客将先会以个人的学习总结为主，之后将更新一些技术性的文章，欢迎与博主进行探讨、一起思维碰撞。在吉珠的小伙伴还可以直接找博主哦！ 欢迎留言，博主在有空之余将一一进行查看并回复。]]></content>
  </entry>
</search>
