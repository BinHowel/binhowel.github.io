<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[C++进阶学习总结-（2.1）类与构造函数]]></title>
    <url>%2F2019%2F07%2F08%2FC-%E8%BF%9B%E9%98%B6%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%882-1%EF%BC%89%E7%B1%BB%E4%B8%8E%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%2F</url>
    <content type="text"><![CDATA[此文章是加密文章，请输入密码后查看. Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>代码学习</category>
        <category>C++学习</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>学习总结</tag>
        <tag>C++学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据结构学习总结-（3.5）顺序存储结构队列]]></title>
    <url>%2F2019%2F07%2F06%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%883-5%EF%BC%89%E9%A1%BA%E5%BA%8F%E9%98%9F%E5%88%97%2F</url>
    <content type="text"><![CDATA[顺序队列算法即实现思路顺序储存结构的队列定义(以char类型为例) 实现思路：因为顺序队列是要基于数组来实现队列的操作，所以可以定义两个数值头数值(front)和尾数值(rear)，在创建队列的时候根据capacity(队列容量)的大小创建线性表，然后让头数值和尾数值都为0代表数组下标为0的第一个数据的位置，入队时对rear进行操作移动即可实现，出队只需移动front即可完成出队。 12345678910111213class SqQueue&#123; char* datas;//线性表 int capacity;//队列容量 int front;//队首 int rear;//队尾 public: SqQueue(int c)&#123; capacity = c; datas = new char[capacity]; front = rear = 0; &#125; &#125; 顺序队列 入队操作 思路：因为顺序队列是要通过数组来实现队列的数据结构。所以可以先定义两个值分别代表尾数值和头数值，创建队列时，这头尾两个数值均为0，代表为数组第一个元素。入队时只需让下标为尾数值的数组元素进行添值即可。 具体实现： 1234567bool push(T e)&#123; if(rear == capacity) return false; datas[rear] = e; rear++; return true;&#125; 出队操作 思路：直接让头数值进行自加即可实现出队操作 具体实现： 123bool pop()&#123; front++;&#125; 出现一个问题:前面只是实现了基本的队列应该有的操作，如果对其进行出队操作，一定量的数据出队后会照成队列无法使用的情况。为此可以对顺序队列进行改造优化使它成为环状的顺序队列从而可以循环使用。 循环队列 入队操作： 思路：相比顺序队列，循环队列在入队操作时只是对尾数值进行改进使其只能在队列容量之内循环变化。即：rear = (rear+1)%capacity 算法解释：(以容量为5的队列为例) 第一步：push入队一个元素rear让其从初值0加1再取模5【(0+1)%5 = 1%5 = 1】以此类推，第二个数据入队，rear为2….第四个为4。 第二步：当到达尾数值即下标为4的时候再进行上方的运算。即【(4+1)%5 = 5%5=0】重置尾数值为0。 具体实现： 1234567bool push(T e)&#123; if((rear+1)%capacity == front)//满队判断 return false; datas[rear] = e; rear = (rear+1)%capacity; return true;&#125; 满队的处理：这里是用(rear+1)%capacity == front来作为满队判断的，即队首和队尾都只隔了1。例如：当队首为3，队尾为2为满队。因为(2+1)%5 = 3%5 = 3 出队操作 思路：与顺序队列相同，只是队头也要控制在capacity队列容量之内，即front = (front + 1)% capacity。 具体实现： 123456bool pop()&#123; if(front == rear)//空队判断 return false front = (front + 1)% capacity; return true;&#125; 具体代码实现：1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374#include&lt;iostream&gt;using namespace std;template&lt;typename T&gt; class SqQueue &#123; T* datas; int capacity; int rear; int front;public: /*构造函数*/ SqQueue(int c = 10) &#123; capacity = c; datas = new T[capacity]; rear = front = 0; &#125; /*入队操作*/ bool push(T e) &#123; if ((rear + 1) % capacity == front) return false; datas[rear] = e; rear = (rear+1)%capacity; return true; &#125; /*出队操作*/ bool pop() &#123; if (rear == front) return false; front = (front + 1) % capacity; &#125; void tr(void(*fb)(T&amp; e)) &#123; for (int i = front; i &lt; rear; i++) &#123; fb(datas[i]); &#125; &#125;&#125;;void Print(char&amp; a) &#123; cout &lt;&lt; a &lt;&lt; " ";&#125;int main() &#123; SqQueue&lt;char&gt; s; cout &lt;&lt; "数据a入队了" &lt;&lt; endl; s.push('a'); s.tr(Print); cout &lt;&lt; endl; cout &lt;&lt; "数据b入队了" &lt;&lt; endl; s.push('b'); s.tr(Print); cout &lt;&lt; endl; cout &lt;&lt; "数据c入队了" &lt;&lt; endl; s.push('c'); s.tr(Print); cout &lt;&lt; endl; cout &lt;&lt; "数据d入队了" &lt;&lt; endl; s.push('d'); s.tr(Print); cout &lt;&lt; endl; cout &lt;&lt; "数据e入队了" &lt;&lt; endl; s.push('e'); s.tr(Print); cout &lt;&lt; endl; cout &lt;&lt; "头数据出队了 " &lt;&lt; endl; s.pop(); s.tr(Print); cout &lt;&lt; endl; cout &lt;&lt; "头数据出队了 " &lt;&lt; endl; s.pop(); s.tr(Print); cout &lt;&lt; endl; cout &lt;&lt; "头数据出队了 " &lt;&lt; endl; s.pop(); s.tr(Print); cout &lt;&lt; endl; cout &lt;&lt; "头数据出队了 " &lt;&lt; endl; s.pop(); s.tr(Print); cout &lt;&lt; endl; cout &lt;&lt; "头数据出队了 " &lt;&lt; endl; s.pop(); s.tr(Print); cout &lt;&lt; endl;&#125; 实验结果: –（本文完）&lt;原创&gt;]]></content>
      <categories>
        <category>代码学习</category>
        <category>数据结构学习</category>
      </categories>
      <tags>
        <tag>学习总结</tag>
        <tag>数据结构</tag>
        <tag>数据结构-学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[C++进阶学习总结-(1.7)数据类型转换]]></title>
    <url>%2F2019%2F07%2F04%2FC%2B%2B%E8%BF%9B%E9%98%B6%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-(1.7)%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2%2F</url>
    <content type="text"><![CDATA[此文章是加密文章，请输入密码后查看. Incorrect Password! No content to display! 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]]></content>
      <categories>
        <category>代码学习</category>
        <category>C++学习</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>学习总结</tag>
        <tag>C++学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据结构学习总结-（3.4）队列及链式队列的实现]]></title>
    <url>%2F2019%2F07%2F03%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%883-4%EF%BC%89%E9%98%9F%E5%88%97%2F</url>
    <content type="text"><![CDATA[队列的基本概念及定义 定义： 队列与栈相似，相比栈的先进后出，队列是先进先出为特征的，队列的增添必须是在队列后边进行添加，删除则在前面，正与它的名字一样，队列这种数据结构跟平常时人们买票排队一样，先去排的会先买到票，后面来的只能先排着队。 特征：先进先出(FIFO,First In First Out) 队列的抽象数据类型 ADT Queue Data 线性关系(a1,a2,…,an) Operation bool push(e) 入队操作 bool pop() 出队 T&amp;front() 获得队首数据 bool empty() 判断队列是否为空 void clear() 清空队列 …….. 链式队列实现算法及思路 入队操作 * 思路：因为队列是先进先出的，所以要使一个指针能始终能指向新进来的元素，方便后续出队操作。所以可以先让尾指针的next指针指向这个新入队的元素，然后再让尾指针指向这个元素。 具体代码实现: 123456789101112bool push(T e)&#123; Node* p = new Node; if(!p)return false; p-&gt;data = e; p-&gt;next = nullptr; rear-&gt;next = p; rear = p; return true&#125; 出队操作 思路：先进先出，此时可以直接删除第一个数据，即头结点next指向的数据。但要记住这操作不能在队列为空的情况下使用。 具体代码实现： 1234567891011bool pop()&#123; if(rear == head) return false; Node* p = head-&gt;next; head-&gt;next = p-&gt;next; delete p; return true; &#125; 具体代码实现情况： 入队(完成) push(T e) 出队(完成) pop() 是否为空(完成) IsEmpty(); 获得队首元素(完成) getFirst() 清空队列(完成) clear() 具体代码：123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131#include&lt;iostream&gt;using namespace std;template&lt;typename T&gt;class Queue &#123; struct Node &#123; T data; Node* next; &#125;; Node* head; Node* rear;public: Queue() &#123; head = new Node; head-&gt;next = nullptr; rear = head; &#125; /*入队操作*/ bool push(T e) &#123; Node* p = new Node; p-&gt;data = e; p-&gt;next = nullptr; rear-&gt;next = p; rear = p; return true; &#125; /*出队操作*/ bool pop() &#123; if (head == rear) return false; Node* p = head-&gt;next; head-&gt;next = p-&gt;next; delete p; return true; &#125; /*是否为空*/ bool IsEmpty() &#123; return head == rear; &#125; /*获得首元素*/ T getFirst() &#123; return head-&gt;next; &#125; /*清空队列*/ bool clear() &#123; Node* p = head-&gt;next; Node* q = nullptr; while (p != rear) &#123; q = p; p = p-&gt;next; delete q; &#125; delete rear; rear = head; return true; &#125; void Ta(void(*fb)(T&amp; e)) &#123; Node* p = head; while (p != rear) &#123; p = p-&gt;next; fb(p-&gt;data); &#125; &#125;&#125;;template &lt;typename T&gt; void print(T&amp; e) &#123; cout &lt;&lt; e &lt;&lt; " ";&#125;int main() &#123; Queue&lt;char&gt; q; cout &lt;&lt; "a数据进队了" &lt;&lt; endl; q.push('a'); q.Ta(print); cout &lt;&lt; endl; cout &lt;&lt; "b数据进队了" &lt;&lt; endl; q.push('b'); q.Ta(print); cout &lt;&lt; endl; cout &lt;&lt; "c数据进队了" &lt;&lt; endl; q.push('c'); q.Ta(print); cout &lt;&lt; endl; cout &lt;&lt; "d数据进队了" &lt;&lt; endl; q.push('d'); q.Ta(print); cout &lt;&lt; endl; cout &lt;&lt; "清空队列" &lt;&lt; endl; q.clear(); cout &lt;&lt; "e数据进队了" &lt;&lt; endl; q.push('e'); q.Ta(print); cout &lt;&lt; endl; cout &lt;&lt; "f数据进队了" &lt;&lt; endl; q.push('f'); q.Ta(print); cout &lt;&lt; endl; cout &lt;&lt; "g数据进队了" &lt;&lt; endl; q.push('g'); q.Ta(print); cout &lt;&lt; endl; cout &lt;&lt; "h数据进队了" &lt;&lt; endl; q.push('h'); q.Ta(print); cout &lt;&lt; endl; cout &lt;&lt; "首数据出队了" &lt;&lt; endl; q.pop(); q.Ta(print); cout &lt;&lt; endl; cout &lt;&lt; "首数据出队了" &lt;&lt; endl; q.pop(); q.Ta(print); cout &lt;&lt; endl; cout &lt;&lt; "首数据出队了" &lt;&lt; endl; q.pop(); q.Ta(print); cout &lt;&lt; endl;&#125; 实验结果: –（本文完）&lt;原创&gt;]]></content>
      <categories>
        <category>代码学习</category>
        <category>数据结构学习</category>
      </categories>
      <tags>
        <tag>学习总结</tag>
        <tag>数据结构</tag>
        <tag>数据结构-学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[栈的应用-括号匹配]]></title>
    <url>%2F2019%2F07%2F02%2F%E6%A0%88%E7%9A%84%E5%BA%94%E7%94%A8-%E6%8B%AC%E5%8F%B7%E5%8C%B9%E9%85%8D%2F</url>
    <content type="text"><![CDATA[括号匹配 对一段字符串进行检查和判断括号是否匹配。例如：{（）[]{}} 匹配。即出现一个左括号就一定要一个相对应的右括号与其匹配。 实现思路：可以对一个字符串进行扫描和检查，如果是左括号那么就入栈，如果遇到一个与之匹配的右括号，那么就使其出栈。最后判断栈是否为空从而判断括号是否匹配即可。 以（{heheda}[123]())为例。 第一步扫描上方字符串。发现第一个左括号‘(’使其入栈，第二个&#39;{&#39;入栈，发现&#39;}&#39;为右括号，与栈顶数据进行匹配发现，此时栈顶就是&#39;{&#39;与之匹配那么就出栈。（类似消消乐） 具体代码实现：1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556#include"LKStack.h"#include&lt;iostream&gt;bool CheckStr(string str) &#123; LkStack&lt;char&gt; stack; cout &lt;&lt; "字符串：" &lt;&lt; str &lt;&lt; " "; for (int i = 0; i &lt; str.length(); i++) &#123; /*如果是左括号那么就入栈，等待匹配*/ if (str[i] == '[' || str[i] == '&#123;' || str[i] == '(') &#123; stack.push_back(str[i]); &#125; /*如果是右括号那么就对栈顶数据进行判断，如果匹配那么就使此时的栈顶数据出栈*/ if (str[i] == ']' || str[i] == '&#125;' || str[i] == ')') &#123; /*排除只出现右括号没出现左括号的情况，和多出有右括号的情况*/ if (stack.isEmpty()) &#123; cout &lt;&lt; "括号不匹配！" &lt;&lt; endl; return false; &#125; if (!stack.isEmpty() &amp;&amp; str[i] == ']' &amp;&amp; stack.GetTop() == '[') stack.pop(); if (!stack.isEmpty() &amp;&amp; str[i] == '&#125;' &amp;&amp; stack.GetTop() == '&#123;') stack.pop(); if (!stack.isEmpty()&amp;&amp; str[i] == ')' &amp;&amp; stack.GetTop() == '(') stack.pop(); &#125;&#125; /*如果空栈那么就说明左括号全部匹配完毕，括号匹配成功，反之括号不匹配*/ if (stack.isEmpty()) &#123; cout &lt;&lt; "括号匹配成功！" &lt;&lt; endl; return true; &#125; else &#123; cout &lt;&lt; "括号不匹配！" &lt;&lt; endl; return false; &#125; &#125;int main() &#123; CheckStr("12312()()[]&#123;&#123;&#125;&#125; "); CheckStr("&#125;"); CheckStr("[()(),hello&#123;&#125;]"); CheckStr("test"); CheckStr("()(&#125;[]");&#125; 实验结果： –（本文完）&lt;原创&gt;]]></content>
      <categories>
        <category>数据结构</category>
      </categories>
      <tags>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[算法性能分析]]></title>
    <url>%2F2019%2F07%2F02%2F%E7%AE%97%E6%B3%95%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90%2F</url>
    <content type="text"><![CDATA[算法性能分析好的算法应当满足 正确性：算法应能满足具体问题的需求 可读性：算法应应易于阅读和理解 健壮性：输入数据非法时，算法也能适当作出反应或进行处理 高效性：算法执行时间短，占用存储空间少 时间复杂度 程序：算法在计算机上的实现 程序的执行时间取决于如下因素： 算法本身 问题规模 编程语言 硬件性能 选择一个“基本操作”，分析基本操作执行的次数 用该基本操作的重复次数表示算法的执行时间，一般为问题规模n的函数f(n)，简称“频度”。 算法的时间复杂度为：和f(n)同阶的简化无穷大量T(n) = O(f(n))]]></content>
      <categories>
        <category>代码学习</category>
        <category>数据结构学习</category>
      </categories>
      <tags>
        <tag>数据结构</tag>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[链表应用- 两数相加]]></title>
    <url>%2F2019%2F06%2F29%2F%E9%93%BE%E8%A1%A8%E5%BA%94%E7%94%A8-%E4%B8%A4%E6%95%B0%E7%9B%B8%E5%8A%A0%2F</url>
    <content type="text"><![CDATA[两数相加 问题： 给定两个非空链表来表示两个非负整数。位数按照逆序方式储存，它们的每个节点只存储单个数字。将两数相加返回一个新的链表。你可以假设除了数字0之外，这两个数字都不会以零开头。 示例： 输入：(2 -&gt; 4 -&gt; 3) + (5 -&gt; 6 -&gt; 4) 输出: 7 -&gt; 0 -&gt; 8 原因: 342 + 465 = 807 一些算法的思路： 先把一个数字转换为一个链表 243 转换为 2 -&gt; 4 -&gt; 3 所以先用一个 将数字转换为链表的函数 12345678Lklist ToLKlist(int r) &#123; Lklist stack; while (r) &#123; stack.push(r % 10); r /= 10; &#125; return stack;&#125; 实现思路：对进来的数字，直接模10取个位，然后后插入一个链表中，然后取十位……以此类推直到把所以值都后插入链表中。 转换数字后就会得到两个链表。然后进行相加。相加时得实现把链表转换成数字，例如 2 -&gt; 4 -&gt; 3转换成数字342。 123456789101112int number(Lklist num) &#123; int result = 0; int len = num.Getlength(); int i = 1; while (!num.IsEmpty()) &#123; result += num.getfirst() * i; num.deletefirst(); i *= 10; &#125; return result;&#125; 实现思路：因为获得的数字链表是2 -&gt; 4 -&gt; 3，而实际对应的数字是342，所以可以先把第一个个位数字获得，加上十位，百位。 最后一步把相加的结果再ToLKlist()用变为链表。 具体实现:123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133#include&lt;iostream&gt;using namespace std;class Lklist &#123; struct LNode &#123; int data; LNode* next; &#125;; LNode* head; int length;public: Lklist() &#123; head = new LNode; head-&gt;next = nullptr; length = 0; &#125; /*前插操作*/ bool push(int e) &#123; LNode* p = new LNode; if (!p)return false; p-&gt;data = e; p-&gt;next = head-&gt;next; head-&gt;next = p; length++; return true; &#125; /*后插操作*/ bool push_back(int e) &#123; LNode* p = head; LNode* q = new LNode(); int j = 0; while (p-&gt;next) &#123; p = p-&gt;next; &#125; if (!p)return false; q-&gt;data = e; q-&gt;next = 0; p-&gt;next = q; length++; return true; &#125; /*删除第一个数据操作*/ bool deletefirst() &#123; if (!head-&gt;next) return false; LNode* p = head-&gt;next-&gt;next; delete head-&gt;next; head-&gt;next = p; length--; return true; &#125; /*获得第一个元素*/ int getfirst() &#123; return head-&gt;next-&gt;data; &#125; /*判断是否为空链表*/ bool IsEmpty() &#123; return head-&gt;next == nullptr; &#125; /*获得链表长度*/ int Getlength() &#123; return length; &#125;&#125;;/*转换为数字*/int number(Lklist num) &#123; int result = 0; int len = num.Getlength(); int i = 1; while (!num.IsEmpty()) &#123; result += num.getfirst() * i; num.deletefirst(); i *= 10; &#125; return result;&#125;/*数字转换为链表*/Lklist ToLKlist(int r) &#123; Lklist stack; while (r) &#123; stack.push(r % 10); r /= 10; &#125; return stack;&#125;/*两数相加核心代码*/Lklist TwoNumberAdd(Lklist num1, Lklist num2) &#123; int a = number(num1); int b = number(num2); return ToLKlist(a + b);&#125;int main() &#123; int a; int b; Lklist s; cout &lt;&lt; "请输入第一个数： "; cin &gt;&gt; a; cout &lt;&lt; endl &lt;&lt; "请输入第二个数： "; cin &gt;&gt; b; s = TwoNumberAdd(ToLKlist(a), ToLKlist(b)); int i = 0; int len = s.Getlength(); while (!s.IsEmpty()) &#123; cout &lt;&lt; s.getfirst(); if (i &lt; len - 1) &#123; cout &lt;&lt; "-&gt;"; i++; &#125; s.deletefirst(); &#125;&#125; 实验结果: 标准参考答案：1234567891011121314151617181920212223242526272829303132333435363738394041424344class Solution &#123;public : ListNode* addTwoNumber(ListNode* l1, ListNode* l2) &#123; int x = 0; int y = 0; int carry = 0; int sum = 0; ListNode* h = nullptr; ListNode** t = &amp;h; while (l1!=nullptr||l2!=nullptr) &#123; x = getValueAndMoveNext(l1); y = getValueAndMoveNext(l2); sum = carry + x + y; ListNode* node = new ListNode(sum % 10); *t = node; t = (&amp;node-&gt;next); carry = sum / 10; &#125; if (carry &gt; 0) &#123; ListNode* node = new ListNode(carry % 10); *t = node; &#125; return h;&#125;private: int getValueAndMoveNext(ListNode*&amp; l) &#123; int x = 0; if (l != nullptr) &#123; x = l-&gt;val; l = l-&gt;next; &#125; return x; &#125;&#125;; 参考答案的核心算法思路： ListNode* addTwoNumber(ListNode* l1, ListNode* l2) 这步先把两个链表的第一个元素取出存入X和Y中，然后让其想加并加上一个进位carry数。以(2 -&gt; 4 -&gt; 3) + (5 -&gt; 6 -&gt; 4)为例。 第一步： 取出两个链表中的第一个元素2和5。 第二步： 让其相加并加上一个进位数即sum = carry(此时为0) + 2 + 5 = 7 第三步： 把结果7模上10并push_back进结果链表。此时结果为7并且是结果链表的第一个数据 然后重置进位carry即：carry = sum / 10,因为2 + 5 = 7小于10所以不用进位。 第四步： 循环上面的步骤 第二次循环中4和6的和是10，模上10取余后的结果为0，push_back进结果链表作为第二个数据 因为10是大于等于10的，所以要进位，故进行carry = sum / 10时，carry结果会为1作为下一次循环，sum = carry + x + y中的进位 总体来看，首先因为题目描述为 位数按照逆序方式储存，所以这里运用了普通加法运算。即：从个位开始相加，满10进1至下位的思路。 个人实现代码优化后：123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596#include&lt;iostream&gt;using namespace std;class LKlist &#123;public: struct LNode &#123; int data; LNode* next; &#125;; LNode* head; int length;public: LKlist() &#123; head = new LNode(); head-&gt;next = nullptr; length = 0; &#125; bool push_back(int e) &#123; LNode* p = new LNode; LNode* t = head; p-&gt;data = e; while (t-&gt;next) &#123; t = t-&gt;next; &#125; t-&gt;next = p; p-&gt;next = nullptr; length++; return true; &#125; bool IsEmpty() &#123; return head-&gt;next == nullptr; &#125; bool deletefirst() &#123; if (!head-&gt;next) return false; LNode* p = head-&gt;next-&gt;next; delete head-&gt;next; head-&gt;next = p; length--; return true; &#125; int getfirst() &#123; return head-&gt;next-&gt;data; &#125; int Getlength()&#123; return length; &#125;&#125;;int getValueAndMoveNext(LKlist&amp; l) &#123; int x = 0; LKlist::LNode* T; if (l.head-&gt;next) &#123; x = l.head-&gt;next-&gt;data; T = l.head-&gt;next-&gt;next; delete l.head-&gt;next; l.head-&gt;next = T; &#125; return x;&#125;LKlist addTwoNumber(LKlist&amp; l1, LKlist&amp; l2) &#123; int x = 0; int y = 0; int sum = 0; int carry = 0; LKlist h; while (!l1.IsEmpty() || !l2.IsEmpty()) &#123; x = getValueAndMoveNext(l1); y = getValueAndMoveNext(l2); sum = carry + x + y; h.push_back(sum % 10); carry = sum / 10; &#125; if (carry &gt; 0) &#123; h.push_back(carry % 10); &#125; return h;&#125; 实验结果: –（本文完）&lt;原创&gt;]]></content>
      <categories>
        <category>数据结构</category>
      </categories>
      <tags>
        <tag>数据结构</tag>
        <tag>链表</tag>
        <tag>算法题</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[栈的应用-进制的转换]]></title>
    <url>%2F2019%2F06%2F29%2F%E6%A0%88%E7%9A%84%E5%BA%94%E7%94%A8-%E8%BF%9B%E5%88%B6%E7%9A%84%E8%BD%AC%E6%8D%A2%2F</url>
    <content type="text"><![CDATA[数制转换 以十进制转八进制为例，十进制转八进制的时候是把十进制模8取其余数直至除尽，最终结果为余数从下到上的数。 例如： 结合数据结构栈，可以发现转换最终结果跟栈的出栈一样，所以用栈来实现十进制的转换就较为方便 123456789101112void changeNumber(int n,int b)&#123;//n为十进制数，b为将要转的进制数 Stack&lt;int&gt; stack；//定义一个栈 while(n)&#123; stack.push(n%b);//获取余数并入栈 n = n/b;//更新n &#125; while(!stack.isEmpty())&#123;//出栈并输出。直至为空栈 cout &lt;&lt; stack.getTop();//获得栈顶元素 stack.pop();//每输出一个就出栈一个数据 &#125; &#125; 代码实现:123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081#include&lt;iostream&gt;using namespace std;/***********链栈实现************/template&lt;typename T&gt;class Stack &#123; struct LNode &#123; T data; LNode* next; &#125;; LNode* head;public: Stack() &#123; head = new LNode; head-&gt;next = nullptr; &#125; /*入栈操作*/ bool push(T e) &#123; LNode* p = new LNode; if (!p)return false; p-&gt;data = e; p-&gt;next = head-&gt;next; head-&gt;next = p; return true; &#125; /*出栈操作*/ bool pop() &#123; if (!head-&gt;next) return false; LNode* p = head-&gt;next-&gt;next; delete head-&gt;next; head-&gt;next = p; return true; &#125; /*获得栈顶元素*/ T getTop() &#123; return head-&gt;next-&gt;data; &#125; /*判断是否为空栈*/ bool IsEmpty() &#123; return head-&gt;next == nullptr; &#125;&#125;;/*********************************//*数据转换*/void ChangeNumber(int n,int b) &#123; Stack&lt;int&gt; stack; int result = 0; while (n) &#123; stack.push(n % b); n = n / b; &#125; while (!stack.IsEmpty()) &#123; cout &lt;&lt; stack.getTop(); stack.pop(); &#125; &#125;int main() &#123; ChangeNumber(75, 8);&#125; 实验结果: –（本文完）&lt;原创&gt;]]></content>
      <categories>
        <category>数据结构</category>
      </categories>
      <tags>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[C++ vector容器常用操作和内存释放]]></title>
    <url>%2F2019%2F06%2F29%2FC-vector%E5%AE%B9%E5%99%A8%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E5%92%8C%E5%86%85%E5%AD%98%E9%87%8A%E6%94%BE%2F</url>
    <content type="text"><![CDATA[一、对字符串的处理 对字符串每一个字符进行遍历修改操作 12345678910111213141516#include&lt;iostream&gt;#include&lt;vector&gt;#include&lt;string&gt;using namespace std;int main() &#123; string ifo = "ShuHaoHwang"; for (auto iter = ifo.begin(); iter != ifo.end(); iter++) &#123; *iter = toupper(*iter); &#125; cout &lt;&lt; ifo &lt;&lt; endl;&#125; 二、查找配置项信息及内存释放 用迭代器及vector容器实现通过一个配置项名就能查询获得相应配置项的信息，最后利用vector进行内存释放。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869#include&lt;iostream&gt;#include&lt;vector&gt;#include&lt;string&gt;using namespace std;struct conf&#123; char confname[40];//配置项名 char confid[100];//配置项信息&#125;;char* getifo(vector&lt;conf*&gt;&amp; a, const char* s) &#123; vector&lt;conf*&gt;::iterator iter; for (iter = a.begin(); iter != a.end(); iter++) &#123; if (strcmp((*iter)-&gt;confname, s) == 0) &#123;//如果找到对应配置项名，就返回其配置项的信息 return (*iter)-&gt;confid; &#125; &#125; return nullptr;&#125;int main() &#123; conf* server = new conf; conf* server2 = new conf; /*配置项名1*/ strcpy_s(server-&gt;confname,sizeof(server-&gt;confname),"ServerName"); /*配置信息1*/ strcpy_s(server-&gt;confid, sizeof(server-&gt;confid), "1区"); /*配置项名2*/ strcpy_s(server2-&gt;confname, sizeof(server2-&gt;confname), "ServerID"); /*配置信息2*/ strcpy_s(server2-&gt;confid, sizeof(server2-&gt;confid), "10000"); vector&lt;conf*&gt; cinfo; cinfo.push_back(server);//把结构指针放入容器 cinfo.push_back(server2); vector&lt;conf*&gt;::iterator iter; /*查找信息*/ char* temp; temp = getifo(cinfo, "ServerName"); if (temp != nullptr) &#123; cout &lt;&lt; "ServerName: " &lt;&lt; temp &lt;&lt; endl; &#125; /*释放内存*/ for (iter = cinfo.begin(); iter != cinfo.end(); iter++) &#123; delete (*iter);//因为*iter是一个指针 &#125; cinfo.clear();//最后清空容器 &#125;]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>技术类</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[C++迭代器的失控范例和解决方案]]></title>
    <url>%2F2019%2F06%2F28%2FC-%E8%BF%AD%E4%BB%A3%E5%99%A8%E7%9A%84%E5%A4%B1%E6%8E%A7%E8%8C%83%E4%BE%8B%E5%92%8C%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%2F</url>
    <content type="text"><![CDATA[迭代器失控范例情形一： 很多在使用迭代器类型进行遍历容器的操作进行对容器容量的变化都会导致迭代器的失控，即输出错误的值。例如：要对vector容器进行push_back()操作、对vector容器进行插入操作、删除操作。都会使end()函数返回的迭代器类型位置错乱，导致出现可能会修改未被使用内存的风险，从而使程序崩溃。 例如： 1234567891011vector&lt;int&gt; arrays&#123;12,35,56,78&#125;;vector&lt;int&gt;::iterator iter = arrays.begin();for(iter;iter!=arrays.end();iter++)&#123; cout &lt;&lt; *iter &lt;&lt;endl; arrays.push_back(2);&#125;//或者下面这种情况for(iter;iter!=arrays.end();iter++)&#123; cout &lt;&lt; *iter &lt;&lt;endl; arrays.insert(1,100);&#125; 实验结果： 在一般情况下，如果只是要对容器进行添加一个元素，可以使用下面的方法。 123456789101112vector&lt;int&gt; arrays&#123;12,35,56,78&#125;;vector&lt;int&gt;::iterator iter = arrays.begin();for(iter;iter!=arrays.end();iter++)&#123; cout &lt;&lt; *iter &lt;&lt;endl; arrays.push_back(2); break;//添加元素后直接跳出&#125;//再进行一次迭代器遍历for(iter;iter!=arrays.end();iter++)&#123; cout &lt;&lt; *iter &lt;&lt;endl; arrays.push_back(2);&#125; 实验结果： 如果真的在实际项目中要进行在迭代器遍历容器的时候对容器多次进行增添内容，可以使用下面的方法。 123456789101112131415vector&lt;int&gt; arrays&#123;12,35,56,78&#125;;vector&lt;int&gt;::iterator iter = arrays.begin();int i = 0//用来控制插入次数（循环次数） while(iter != arrays.end())&#123; iter = arrays.insert(iter,100); if(i &gt; 5) break; iter++; i++; &#125;for(iter = arrays.begin(); iter != arrays.end(); iter++)&#123; cout &lt;&lt; *iter &lt;&lt; endl;&#125; 实验结果： 实现思路:因为arrays.insert()的返回值是一个迭代器类型，所以在循环中不断刷新循环的起始位置(因为是前插，所以end()的值没有发生变化)。多次更新迭代器的起始begin()的值，从而使迭代器类型的指向不会失控。 同样的如果使用push_back(): 123456789101112131415161718vector&lt;int&gt; arrays&#123;12,35,56,78&#125;;vector&lt;int&gt;::iterator iter = arrays.begin();int i = 0//用来控制插入次数（循环次数） while(iter != arrays.end())&#123; arrays.push_back(100);//不断更新iter的值起始 iter = arrays.begin() if(i &gt; 5) break; iter++; i++; &#125;for(iter = arrays.begin(); iter != arrays.end(); iter++)&#123; cout &lt;&lt; *iter &lt;&lt; endl;&#125; 实验结果： 总体：即每对容器的容量进行变化一次便刷新迭代器的值。使其成为新的迭代器进行操作，就可以避免容器的失控。弊端：麻烦，代码较繁杂。 情形二： 如果在某个时候要对容器进行清空操作，多数下使用容器自带的clear()函数即可。但在某些特殊情况下，要对vector容器的某些元素进行删除，就得使用容器自带的` `函数。但是这样做就是对容器容量进行修改操作，会使迭代器指向失控。 例如： 12345vector&lt;int&gt; arrays&#123;12,35,56,78&#125;vector&lt;int&gt;::iterator iter;for(iter = arrays.begin(); iter != arrays.end(); iter++)&#123; arrays.erase(iter);&#125; 使用结果 如果真的要进行这样的操作可以这样做： 12345678910vector&lt;int&gt; arrays&#123;12,35,56,78&#125;vector&lt;int&gt;::iterator iter = arrays.begin();while(iter != arrays.end())&#123; iter = arrays.erase(iter);//直接让erase函数来更新迭代器指向的位置&#125;//for版for(iter; iter != arrays.end(); )&#123; iter = arrays.erase(iter);&#125; 实验结果： 实现思路：因为erase()函数是清除该位置的数据，并返回下一个元素的位置，所以可以通过它来对迭代器进行更新，从而不会时迭代器指向失控。 此情形更好的实现版本 1234567vector&lt;int&gt; arrays&#123;12,35,56,78&#125;vector&lt;int&gt;::iterator iter = arrays.begin();while(!arrays.empty())&#123;//如果不为空就继续 auto iter = arrays.begin();//每开始一轮循环就更新迭代器的指向。 arrays.erase(iter);&#125; –（本文完）&lt;原创&gt;]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>技术类</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[C++进阶学习总结-（1.6）迭代器]]></title>
    <url>%2F2019%2F06%2F26%2FC-%E8%BF%9B%E9%98%B6%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%881-6%EF%BC%89%E8%BF%AD%E4%BB%A3%E5%99%A8%2F</url>
    <content type="text"><![CDATA[此文章是加密文章，请输入密码后查看. Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>代码学习</category>
        <category>C++学习</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>学习总结</tag>
        <tag>C++学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据结构学习总结-（3.3）链栈]]></title>
    <url>%2F2019%2F06%2F26%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%883-3%EF%BC%89%E9%93%BE%E6%A0%88%2F</url>
    <content type="text"><![CDATA[栈的链式实现算法及思路 栈的链式实现是以前插法为基础的。即以头结点next指向的是栈顶，进行入栈出栈等操作。 入栈 思路：创建好空链栈后，每插入一个数据，便创建一个新的结点p，让p结点的next指针等于head的next指针，让head的next指针再指向新结点p，从而完成push_back操作。 具体实现： 12345678bool push_back(T e)&#123; LNode*p = new LNode(); p-&gt;data = e; p-&gt;next = head-&gt;next; head-&gt;next = p; return true;&#125; 出栈 思路：直接让head的next指针指向head-&gt;next-&gt;next即跳过原栈的数据，所以可以先让一个临时的p指向head-&gt;next,然后让head的next指针直接指向p的next指针。之后释放p的空间。(注意：进行出栈操作要首先判断是否空栈) 具体实现： 123456789bool pop()&#123; LNode* p = head-&gt;next; if(!head-&gt;next)&#123; head-&gt;next = p-&gt;next; delete p; return true; &#125; return false;&#125; 析构函数 思路：析构函数就是链栈的销毁操作。总体上先把所有的数据进行出栈并释放空间，最后再把头结点释放了。所以要先用循环，分别释放每一个数据的空间。循环结束的判断条件是head-&gt;next 为空。 具体实现： 12345678~LkStack()&#123; LNode*p = head-&gt;next; while(p)&#123; head-&gt;next = p-&gt;next; delete p; p = head-&gt;next; &#125;&#125; 具体代码实现：1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495969798#include&lt;iostream&gt;using namespace std;template&lt;typename T&gt;class LkStack&#123; struct LNode &#123; T data; LNode* next; &#125;; LNode* head;public: LkStack() &#123; head = new LNode(); head-&gt;next = nullptr; &#125; ~LkStack() &#123; LNode* p = head-&gt;next; while (p) &#123; head-&gt;next = p-&gt;next; delete p; p = head-&gt;next; &#125; delete head; &#125; /*入栈操作*/ bool push_back(T e) &#123; LNode* p = new LNode(); p-&gt;data = e; p-&gt;next = head-&gt;next; head-&gt;next = p; return true; &#125; /*出栈操作*/ bool pop() &#123; if (!isEmpty()) &#123; LNode* p = head-&gt;next; head-&gt;next = p-&gt;next; delete p; return true; &#125; return false; &#125; /*是否为空*/ bool isEmpty() &#123; if (!head-&gt;next) return true; return false; &#125; /*获得栈顶数据*/ T&amp; GetTop() &#123; return head-&gt;next-&gt;data; &#125;&#125;;int main() &#123; LkStack&lt;int&gt; stack; cout &lt;&lt; "入栈了数据1" &lt;&lt;endl; stack.push_back(1); cout &lt;&lt; "入栈了数据2" &lt;&lt;endl; stack.push_back(2); cout &lt;&lt; "入栈了数据3" &lt;&lt;endl; stack.push_back(3); cout &lt;&lt; "入栈了数据4" &lt;&lt;endl; stack.push_back(4); cout &lt;&lt; "入栈了数据5" &lt;&lt;endl; stack.push_back(5); while (!stack.isEmpty()) &#123; cout &lt;&lt; stack.GetTop() &lt;&lt; endl; stack.pop(); &#125;&#125; –（本文完）&lt;原创&gt;]]></content>
      <categories>
        <category>代码学习</category>
        <category>数据结构学习</category>
      </categories>
      <tags>
        <tag>学习总结</tag>
        <tag>数据结构</tag>
        <tag>数据结构-学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[C++个人学习路线]]></title>
    <url>%2F2019%2F06%2F25%2FC-%E4%B8%AA%E4%BA%BA%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF%2F</url>
    <content type="text"><![CDATA[此文章是加密文章，请输入密码后查看. Incorrect Password! No content to display! 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]]></content>
      <categories>
        <category>个人随感</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>学习计划</tag>
        <tag>目标</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[C++进阶学习总结-（1.5）vector容器详解]]></title>
    <url>%2F2019%2F06%2F25%2FC-%E8%BF%9B%E9%98%B6%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%881-5%EF%BC%89vector%E5%AE%B9%E5%99%A8%E8%AF%A6%E8%A7%A3%2F</url>
    <content type="text"><![CDATA[此文章是加密文章，请输入密码后查看. Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>代码学习</category>
        <category>C++学习</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>学习总结</tag>
        <tag>C++学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据结构学习总结-（3.2）顺序栈的实现]]></title>
    <url>%2F2019%2F06%2F24%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%883-2%EF%BC%89%E9%A1%BA%E5%BA%8F%E6%A0%88%E7%9A%84%E5%AE%9E%E7%8E%B0%2F</url>
    <content type="text"><![CDATA[顺序栈的实现与算法思路（以char数据类型为例） 入栈push(char e)； 思路：在栈未满的情况下，直接对top(栈顶)指针指向的地址内容进行赋值，修改完毕后，直接top++移动栈顶至下一个位置。如果栈满则调用扩容操作。 具体实现： 1234567bool SqStack::push(char e) &#123; if ((top - data) == capacity)//容量满了就进行扩容 realloc(); *top = e; top++;//直接修改并移动top指针 return true;&#125; 出栈pop(); 思路：在没有空栈的情况下，直接让top自减一。 具体实现： 1234567bool SqStack::pop() &#123; if (top == data)//判断是否空栈。 return false; top--; return true; &#125; 顺序栈的实现情况 出栈(完成) push(char e) 入栈(完成) pop() 扩容(完成) realloc() 遍历(完成) Traverse(void(*fb)(char&amp; e)) 获得栈顶数据(完成) GetTop() 是否为空栈(完成) IsStackEmpty() 获得栈总容量(完成) GetCapacity() 具体代码： 123456789101112131415161718192021222324252627282930313233343536//Sqstack.h#ifndef _SQSTACK_H_#define _SQSTACK_H_ class SqStack &#123; char* top = nullptr; char* data = nullptr; int capacity;public: /*构造函数*/ SqStack(int c = 5); /*入栈操作*/ bool push(char e); /*出栈操作*/ bool pop(); /*遍历*/ void Traverse(void(*fb)(char&amp;e)); char GetTop(); bool IsStackEmpty(); int GetCapacity();private: /*扩容*/ bool realloc();&#125;; /*打印*/ void Print(char&amp; e);#endif // !_SQSTACK_H_ 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182//Sqstack.cpp#include&lt;iostream&gt;#include"Sqstack.h"using namespace std;/*构造函数*/SqStack::SqStack(int c) &#123; capacity = c;//默认给一个初值 data = new char[capacity]; top = data;&#125;/*扩容*/bool SqStack::realloc() &#123; char* n_data = new char[2 * capacity]; for (int i = 0; i &lt; capacity; i++) &#123; n_data[i] = data[i]; &#125; delete[]data; data = n_data; top = data + capacity;//这里要注意top也有重新赋值新的地址 capacity *= 2; cout &lt;&lt; "扩容成功！！" &lt;&lt; endl; return true;&#125;/*入栈操作*/bool SqStack::push(char e) &#123; if ((top - data) == capacity) realloc(); *top = e; top++; return true;&#125;/*出栈操作*/bool SqStack::pop() &#123; if (top == data) return false; top--; return true; &#125;/*遍历*/void SqStack::Traverse(void(*fb)(char&amp; e)) &#123; for (int i = 0; i &lt; top - data; i++) &#123; fb(data[i]); &#125; &#125;/*获得栈顶元素*/char SqStack::GetTop() &#123; return*(top - 1);&#125;/*判断是否空栈*/bool SqStack::IsStackEmpty() &#123; if (top == data) return true; return false;&#125;/*获得容量*/int SqStack::GetCapacity() &#123; return capacity;&#125;/*打印*/ void Print(char&amp; e) &#123; cout &lt;&lt; e &lt;&lt; " "; &#125; 123456789101112131415161718192021222324252627//main.cpp#include&lt;iostream&gt;#include"Sqstack.h"using namespace std;int main() &#123; SqStack stack; cout &lt;&lt; "入栈一个数据a" &lt;&lt; endl; stack.push('a'); stack.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "入栈一个数据b" &lt;&lt; endl; stack.push('b'); stack.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "入栈一个数据c" &lt;&lt; endl; stack.push('c'); stack.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "入栈一个数据d" &lt;&lt; endl; stack.push('d'); stack.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "入栈一个数据e" &lt;&lt; endl; stack.push('e'); stack.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "入栈一个数据f" &lt;&lt; endl; stack.push('f'); stack.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "出栈一个数据" &lt;&lt; endl; stack.pop(); stack.Traverse(Print); cout &lt;&lt; endl; &#125; –（本文完）&lt;原创&gt;]]></content>
      <categories>
        <category>代码学习</category>
        <category>数据结构学习</category>
      </categories>
      <tags>
        <tag>学习总结</tag>
        <tag>数据结构</tag>
        <tag>数据结构-学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据结构学习总结-（3.1）栈]]></title>
    <url>%2F2019%2F06%2F24%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%883-1%EF%BC%89%E6%A0%88%2F</url>
    <content type="text"><![CDATA[初识栈 定义：栈(stack)是限定仅在表尾插入和删除操作的线性表。 允许插入和删除的一段称为栈顶(top),另一段称为栈底(bottom)。 不含任何数据元素的栈称为空栈。 特点： 先进后出 后进先出 注意： 栈又被称为后进先出(Last in First out)的线性表 栈的插入操作，被称为进栈，也称压栈、入栈(push) 栈的删除操作也称出栈，也称为弹栈(pop) 示意图： 栈的抽象数据类型 ADT 栈(Stack) Data 栈的数据对象集合为{a1,a2,a3,…,an},每一个元素的类型均为同一个数据类型。其中除了第一个数据为，每个元素有且只有一个直接前驱元素，除了最后一个数据外，每个元素有且只有一个直接的后继元素。数据元素之间的关系是一对一的关系， Operation InitStack；初始化，创建一个空栈 destoryStack; 销毁栈 StackEmpty；判断是否为空 clearStack； 清空栈 getTop；获得栈顶元素 push 压栈 pop 出栈 stacklength；获得栈的长度 endADT 注意：栈本身就是一个线性表结构、线性表的顺序储存和链式存储，对于栈来说也同样适用 –（本文未完）]]></content>
      <categories>
        <category>代码学习</category>
        <category>数据结构学习</category>
      </categories>
      <tags>
        <tag>学习总结</tag>
        <tag>数据结构</tag>
        <tag>数据结构-学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[C++进阶学习总结-（1.4）函数新特性、const关键字精解]]></title>
    <url>%2F2019%2F06%2F23%2FC-%E8%BF%9B%E9%98%B6%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%881-4%EF%BC%89%E5%87%BD%E6%95%B0%E6%96%B0%E7%89%B9%E6%80%A7%E3%80%81const%E5%85%B3%E9%94%AE%E5%AD%97%E7%B2%BE%E8%A7%A3%2F</url>
    <content type="text"><![CDATA[此文章是加密文章，请输入密码后查看. Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>代码学习</category>
        <category>C++学习</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>学习总结</tag>
        <tag>C++学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据结构学习总结-（2.9）顺序存储结构与链式存储结构的逆置]]></title>
    <url>%2F2019%2F06%2F22%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%882-9%EF%BC%89%E9%A1%BA%E5%BA%8F%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84%E4%B8%8E%E9%93%BE%E5%BC%8F%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84%E7%9A%84%E9%80%86%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[顺序结构的逆置算法与思路： 夹逼法： 思路：通过对数组头部和尾部相互对调并向中间靠近。 实现：(假设以整型为数据类型实现) 12345678910//length为顺序表总长度。bool Convert()&#123; int temp;//用来对换位置时使用的临时变量 for(int i = 0; i &lt; length/2; i++)&#123;//注意：length要除于2！！！！length要除于2！！！！ temp = datas[i]; datas[i] = datas[length - 1 - i];//前后换位置并向中间靠近 datas[length - 1 - i] = temp; &#125; return true;&#125; 注意：这里的length是要除于2的，因为只需向中间靠近即可而不是再往中间远离。即：移动的范围只是数组长度的一半。 算法优化： 12345678910//length为顺序表总长度。bool Convert()&#123; int temp;//用来对换位置时使用的临时变量 for(int i = 0 ，j = length - 1; i &lt; j; i++,j--)&#123; temp = datas[i]; datas[i] = datas[j];//前后换位置并向中间靠近 datas[j] = temp; &#125; return true;&#125; 此方法更能体现夹逼法。 链式存储结构的逆置算法与思路： 思路：把头结点和数据结点断开，然后把数据结点一个个前插进链表。（循环链表和单向链表均适用）,具体做法先让一个结点指针p保存第一个数据的地址，然后让头结点的next指针归零（即：使其与数据结点断开），开始循环：让一个临时指针指向p的下一个数据的地址，然后把这个第一个数据插入头结点后面（此时p指向为第一个数据的地址），即：p-&gt;next = head-&gt;next;head -&gt;next = p;其次移动指针p到下一个数据，这里就要运用到一开始的临时指针了。循环上面的操作，直到把所有数据都前插完毕。 实现1(单向链表)： 12345678910111213141516bool Convert()&#123; LNode* p = head-&gt;next; LNode* temp = nullptr;//临时指针 head-&gt;next = nullptr; while(p)&#123; temp = p-&gt;next;//获取下一个数据的值 p-&gt;next = head-&gt;next;//前插 head-&gt;next = p; p = temp;//移动指针到下一个数据 &#125; return true;&#125; 实现2(循环链表) 12345678910111213141516bool Convert()&#123; LNode* p = head-&gt;next; LNode* temp = nullptr;//临时指针 head-&gt;next = nullptr; while(p!=head)&#123; temp = p-&gt;next;//获取下一个数据的值 p-&gt;next = head-&gt;next;//前插 head-&gt;next = p; p = temp;//移动指针到下一个数据 &#125; return true;&#125; 前后只是循环条件发生变化。 –（本文完）&lt;原创&gt;&lt;待增添修改&gt;]]></content>
      <categories>
        <category>代码学习</category>
        <category>数据结构学习</category>
      </categories>
      <tags>
        <tag>学习总结</tag>
        <tag>数据结构</tag>
        <tag>数据结构-学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据结构学习总结-（2.8）线性表的顺序存储结构和链式存储结构之间的比较]]></title>
    <url>%2F2019%2F06%2F21%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%882-8%EF%BC%89%E7%BA%BF%E6%80%A7%E8%A1%A8%E7%9A%84%E9%A1%BA%E5%BA%8F%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84%E5%92%8C%E9%93%BE%E5%BC%8F%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84%E4%B9%8B%E9%97%B4%E7%9A%84%E6%AF%94%E8%BE%83%2F</url>
    <content type="text"><![CDATA[顺序结构与链式结构的比较： 顺序结构 链式结构 按序号下标读取 直接读取通过A[index]即可获的数据+++ 要从头开始找，找的下标才能获取数据— 内存实验 要先规定好顺序结构的长度，可能没有利用好空间或空间不够用，不够用时还要扩容可能没有足够的空间或多出空间— 按需要分配，想要一个就一个可利用很小的碎片空间+++ 插入元素 插入一个元素需要不断移动后面的元素，速度慢，消耗相比大— 直接插入，速度快，消耗相比小+++ 删除 需要移动元素— 直接删除+++ –（本文完）&lt;原创&gt;]]></content>
      <categories>
        <category>代码学习</category>
        <category>数据结构学习</category>
      </categories>
      <tags>
        <tag>学习总结</tag>
        <tag>数据结构</tag>
        <tag>数据结构-学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[C++进阶学习总结-（1.3）范围for语句、动态分配、nullptr]]></title>
    <url>%2F2019%2F06%2F21%2FC%2B%2B%E8%BF%9B%E9%98%B6%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%881-3%EF%BC%89%E8%8C%83%E5%9B%B4for%E8%AF%AD%E5%8F%A5%EF%BC%8C%E5%8A%A8%E6%80%81%E5%88%86%E9%85%8D%2F</url>
    <content type="text"><![CDATA[此文章是加密文章，请输入密码后查看. Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>代码学习</category>
        <category>C++学习</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>学习总结</tag>
        <tag>C++学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据结构学习总结-（2.7）双向链表]]></title>
    <url>%2F2019%2F06%2F20%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%882-7%EF%BC%89%E5%8F%8C%E5%90%91%E9%93%BE%E8%A1%A8%2F</url>
    <content type="text"><![CDATA[双向链表 与单向链表的不同之处： 单向链表 双向链表 只知道后继节点，不知道前驱节点。每次查找只能从头开始查找。 相比单向链表增加了一个前驱指针，使前驱节点很快就能被找到 双向链表由于有了前后指针。可以使其从前往后走，也可以从后往前走。 根据双向链表具有前后两个指针的这个特性 在插入算法和删除算法中都有很好的优势 插入算法： 12345678910111213141516171819202122bool InsertElement(int index, T e) &#123; LNode* node = new LNode(); LNode* p = head; node-&gt;data = e; int j = 0; while (j &lt; index)//直接定位到要插入的位置即可 &#123; p = p-&gt;next; j++; &#125; p-&gt;prior-&gt;next = node;//指定位置的前一个数据的next指针指向新插入的数据地址 node-&gt;prior = p-&gt;prior;//新插入数据的prior指针指向原来位置数据的前一个数据地址 p-&gt;prior = node;//插入位置的前一个数据更变为新插入的数据地址 node-&gt;next = p;//新插入数据的next指针指向插入位置的地址 length++;//链表总长度加1 return true; &#125; 删除算法 12345678910111213141516bool DeleteElement(int index) &#123; LNode* p = head; int j = 0; while (j &lt; index)//直接定位到要删除的数据结点 &#123; p = p-&gt;next; j++; &#125; p-&gt;prior-&gt;next = p-&gt;next;//待删除的数据的前一个数据的next指针指向待删除数据的下一个数据的地址 p-&gt;next-&gt;prior = p-&gt;prior;//待删除数据的下一个数据的prior指针指向待删除数据的前一个数据 delete p;//释放待删除数据的空间 return true; &#125; 删除算法即可以直接跳过待删除数据结点。 其他测试代码详情：123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170#include&lt;iostream&gt;using namespace std;template&lt;typename T&gt;class BSLkList &#123; struct LNode &#123; T data; LNode* next; LNode* prior; &#125;; LNode* head; LNode* rear; int length;public: BSLkList() &#123; head = new LNode(); head-&gt;next = head; head-&gt;prior = head; rear = head; length = 0; &#125; /*后插操作*/ bool Push_back(T e) &#123; length++; LNode* node = new LNode(); LNode* p = head; if (!node) return false; while (p-&gt;next != head) &#123; p = p-&gt;next; &#125; node-&gt;data = e; p-&gt;next = node; node-&gt;next = head; node-&gt;prior = p; rear = node; return true; &#125; /*插入操作*/ bool InsertElement(int index, T e) &#123; LNode* node = new LNode(); LNode* p = head; node-&gt;data = e; int j = 0; while (j &lt; index) &#123; p = p-&gt;next; j++; &#125; p-&gt;prior-&gt;next = node; node-&gt;prior = p-&gt;prior; p-&gt;prior = node; node-&gt;next = p; length++; return true; &#125; /*删除操作*/ bool DeleteElement(int index) &#123; LNode* p = head; int j = 0; while (j &lt; index) &#123; p = p-&gt;next; j++; &#125; p-&gt;prior-&gt;next = p-&gt;next; p-&gt;next-&gt;prior = p-&gt;prior; delete p; return true; &#125; /*遍历操作*/ void Traverse(void(*fb)(T&amp; e)) &#123; LNode* p = head-&gt;next; while (p != head) &#123; fb(p-&gt;data); p = p-&gt;next; &#125; &#125; /*指定位置遍历操作*/ void Traverse(T e, void(*fb)(T&amp; e)) &#123; LNode* s = GetDataAddress(e); LNode* p = s; do &#123; if(s!=head) fb(s-&gt;data); s = s-&gt;next; &#125; while (s != p); &#125; private: /*获得指定结点地址操作*/ LNode* GetDataAddress(T e) &#123; LNode* p = head; while (p-&gt;next != head) &#123; if (p-&gt;data == e) return p; p = p-&gt;next; &#125; return NULL; &#125;&#125;;template&lt;typename T&gt;void Print(T&amp;e) &#123; cout &lt;&lt; e &lt;&lt; " ";&#125;int main() &#123; BSLkList&lt;char&gt; list; cout &lt;&lt; "后插入了一个A数据" &lt;&lt; endl; list.Push_back('A'); list.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "后插入了一个B数据" &lt;&lt; endl; list.Push_back('B'); list.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "后插入了一个C数据" &lt;&lt; endl; list.Push_back('C'); list.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; endl; cout &lt;&lt; "在2号位置插入了一个p数据" &lt;&lt; endl; list.InsertElement(2, 'p'); list.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "在2号位置插入了一个p数据" &lt;&lt; endl; list.InsertElement(2, 'p'); list.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; endl; cout &lt;&lt; "删除了3号位置的数据" &lt;&lt; endl; list.DeleteElement(3); list.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "删除了1号位置的数据" &lt;&lt; endl; list.DeleteElement(1); list.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; endl; cout &lt;&lt; "从B数据开始遍历" &lt;&lt; endl; list.Traverse('B', Print); cout &lt;&lt; endl;;&#125; 测试效果图： –(本文完)&lt;原创&gt;]]></content>
      <categories>
        <category>代码学习</category>
        <category>数据结构学习</category>
      </categories>
      <tags>
        <tag>学习总结</tag>
        <tag>数据结构</tag>
        <tag>数据结构-学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据结构学习总结-（2.6.1）附加：循环链表的优点之从指定结点开始遍历]]></title>
    <url>%2F2019%2F06%2F19%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%882-6-1%EF%BC%89%E9%99%84%E5%8A%A0%EF%BC%9A%E5%BE%AA%E7%8E%AF%E9%93%BE%E8%A1%A8%E7%9A%84%E4%BC%98%E7%82%B9%E4%B9%8B%E4%BB%8E%E6%8C%87%E5%AE%9A%E7%BB%93%E7%82%B9%E5%BC%80%E5%A7%8B%E9%81%8D%E5%8E%86%2F</url>
    <content type="text"><![CDATA[体现循环链表的优点之从指定结点开始遍历​ 上一篇总结文章介绍了循环链表的基本概念和个人理解，但我觉得能很好区分非循环链表和循环链表初了链表的合并，还有一个就是循环链表可以从指定的结点开始遍历整个链表，这是非循环链表所做不到的。非循环链表每次遍历只能从头一个个开始遍历每一个元素，而循环链表就不同了，因为它的尾部是与头部相连的，这样就可以实现从某一个结点开始就可以遍历到链表每一个结点上，大大提高了效率。 这里通过遍历函数来体现这一特性。 123456789101112131415161718192021222324252627282930313233//查找链表中的某一个元素并获得它的地址LNode* GetDataAddress(T e) &#123; LNode* p = head-&gt;next; while (p != head) &#123; if (p-&gt;data == e) return p; p = p-&gt;next; &#125; return NULL; &#125;/*从某一个结点进行遍历*/ void Traverse(T e,void(*fb)(T&amp; t)) &#123; LNode* p = GetDataAddress(e);//获得指定结点的地址 LNode* q = p; if (!p) &#123; cout &lt;&lt; "链表为空" &lt;&lt; endl; return; &#125; do &#123; if(p!=head)//越过头结点 fb(p-&gt;data); p = p-&gt;next; &#125; while (p != q); &#125; 思路：先获得指定结点的地址先记录下来，并再用一个指针记下这个位置（便于判断）。其次这里使用的是do-while循环结构（使用do-while循环可以避免while循环漏遍历一个指定结点的数据），先调用函数指针的内容，然后移动指针p。直到指针p再次等于原来的指定结点的地址就停止。 具体实验代码： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126#include&lt;iostream&gt;using namespace std;template&lt;typename T&gt;class CLkList&#123; struct LNode &#123; T data;//数据 LNode* next;//指向下一个数据的指针 &#125;; LNode* head;//头指针 LNode* rear;//尾指针 int length;public: /*构造函数*/ CLkList() &#123; head = new LNode(); length = 0; if (!head)throw"No Memory";//若没有new出来就抛出异常 head-&gt;next = head; rear = head-&gt;next; &#125; /*后插入操作*/ bool push_back(T e) &#123; length++; LNode* p = head-&gt;next; LNode* q = new LNode(); while (p-&gt;next != head) &#123; p = p-&gt;next; &#125; if (!p)return false; q-&gt;data = e;//进行data赋值 rear = q; q-&gt;next = head; p-&gt;next = q;//原最后一个元素数据的next指向这个新插入的空间地址 //length++; return true; &#125; /*获得指定结点地址操作*/ LNode* GetDataAddress(T e) &#123; LNode* p = head-&gt;next; while (p != head) &#123; if (p-&gt;data == e) return p; p = p-&gt;next; &#125; return NULL; &#125; /*遍历操作*/ void Traverse(void(*fb)(T &amp; t)) &#123; LNode* p = head-&gt;next;//从头结点开始遍历每一个元素的data while (p != head) &#123; fb(p-&gt;data); p = p-&gt;next; &#125; &#125; /*从某一个结点进行遍历*/ void Traverse(T e,void(*fb)(T&amp; t)) &#123; LNode* p = GetDataAddress(e);//从头结点开始遍历每一个元素的data LNode* q = p; if (!p) &#123; cout &lt;&lt; "链表为空" &lt;&lt; endl; return; &#125; do &#123; if(p!=head) fb(p-&gt;data); p = p-&gt;next; &#125; while (p != q); &#125;private:&#125;;template&lt;typename T&gt;void Print(T&amp; e) &#123; cout &lt;&lt; e &lt;&lt; " ";&#125;int main() &#123; CLkList&lt;char&gt; list; cout &lt;&lt; "后面插入了一个a数据" &lt;&lt; endl; list.push_back('a'); list.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "后面插入了一个b数据" &lt;&lt; endl; list.push_back('b'); list.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "后面插入了一个c数据" &lt;&lt; endl; list.push_back('c'); list.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "后面插入了一个d数据" &lt;&lt; endl; list.push_back('d'); list.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "从b数据开始遍历链表； " &lt;&lt; endl; list.Traverse('b', Print); cout &lt;&lt; endl; cout &lt;&lt; "从c数据开始遍历链表； " &lt;&lt; endl; list.Traverse('c', Print); cout &lt;&lt; endl; &#125; 运行结果： 小结：​ 这里只是单单用遍历体现了循环链表的这个特点。 ​ 其实不单单在遍历操作上，这个更可以在查找操作上体现出这个优点，例如：在指定结点开始寻找其后的某个值、删除操作也可以运用上。 –（本文完）&lt;原创&gt;]]></content>
      <categories>
        <category>代码学习</category>
        <category>数据结构学习</category>
      </categories>
      <tags>
        <tag>学习总结</tag>
        <tag>数据结构</tag>
        <tag>数据结构-学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据结构学习总结-（2.6）循环链表（单向链表）、清空链表与销毁链表]]></title>
    <url>%2F2019%2F06%2F19%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%882-6%EF%BC%89%E5%BE%AA%E7%8E%AF%E9%93%BE%E8%A1%A8%EF%BC%88%E5%8D%95%E5%90%91%E9%93%BE%E8%A1%A8%EF%BC%89%2F</url>
    <content type="text"><![CDATA[循环链表 相较于非循环链表 在非循环链表中，最后一个元素的next指针是空指针，造成浪费。 每次寻找后继指针的时候都要重新从头开始找。 循环链表 尾指针直接指向表头，使最后一个元素的next指针被利用起来。 从每一个元素开始都能遍历表中每一个元素。 便于类似于链表合并这样的算法实现。 其他不同： 循环链表与非循环链表的判断条件发生了变化 判断的具体解释（循环链表） 判断到前驱结点： 1234while (p-&gt;next != head) &#123; p = p-&gt;next; &#125; ​ 因为最后一个结点的next指针不再是空指针而是一个指向head的指针，所以在while循环中如果p的next指针下一个为head指针那么这时指针p就定位到head的前驱指针了。 判断到头结点： 1234while (p != head) &#123; p = p-&gt;next; &#125; ​ 这个也很好判断，不断移动指针p当等于头结点时就跳出循环，此时p定位到头结点。 循环链表的尾指针 循环链表通常是有一个尾指针的它指向的是最后一个元素的地址。 尾指针的好处： 找head指针非常方便。rear-&gt;next的值便是head。 便于链表的合并。 代码实现空表时的尾指针： 1234567891011121314151617181920212223class CLkList&#123; struct LNode &#123; T data;//数据 LNode* next;//指向下一个数据的指针 &#125;; LNode* head;//头指针 LNode* rear;//尾指针 int length;public: /*构造函数*/ CLkList() &#123; head = new LNode(); length = 0; head-&gt;next = head; rear = head-&gt;next;//空表时的尾指针 &#125;&#125; 当插入一个元素后尾指针的变化 123456789101112131415161718192021//从链表最后面插入元素bool push_back(T e) &#123; length++; LNode* p = head-&gt;next; LNode* q = new LNode(); while (p-&gt;next != head) &#123; p = p-&gt;next; &#125; if (!p)return false; q-&gt;data = e;//进行data赋值 rear = q;//因为是从最后面插入那么此时这个最后一个元素的的地址是尾指针指向的 q-&gt;next = head; p-&gt;next = q;//原最后一个元素数据的next指向这个新插入的空间地址 return true; &#125; 链表合并的实现: 具体思路（链表2合并到链表1）：先获得链表2的头结点的地址（即：链表2的指针head）然后让链表1的head指针指向链表2的指针head-&gt;next指向的地址（即：链表2的第一个元素的地址），然后让链表2的指针rear（尾指针）指向链表1的head-&gt;指向的地址（即指向链表1的第一个元素）最后delete 链表2的head指针。完成合并操作。 合并前： 合并后： 具体实现： 1234567891011121314bool ListCombine(CLkList* s) &#123; LNode* t_head_of_s = s-&gt;head;//获得链表2的head指针 s-&gt;rear-&gt;next = head-&gt;next;//让链表2的尾指针指向链表1的第一个元素 head-&gt;next = t_head_of_s-&gt;next;//让链表1的head-&gt;next指针指向链表1第一个元素 delete t_head_of_s;//释放原链表2的head指针 return true;&#125; 循环链表具体代码实现123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231#include&lt;iostream&gt;using namespace std;template&lt;typename T&gt;class CLkList&#123; struct LNode &#123; T data;//数据 LNode* next;//指向下一个数据的指针 &#125;; LNode* head;//头指针 LNode* rear; int length;public: /*构造函数*/ CLkList() &#123; head = new LNode(); length = 0; if (!head)throw"No Memory";//若没有new出来就抛出异常 head-&gt;next = head; rear = head-&gt;next; &#125; /*往后插入操作*/ bool push_back(T e) &#123; length++; LNode* p = head-&gt;next; LNode* q = new LNode(); while (p-&gt;next != head) &#123; p = p-&gt;next; &#125; if (!p)return false; q-&gt;data = e;//进行data赋值 rear = q; q-&gt;next = head; p-&gt;next = q;//原最后一个元素数据的next指向这个新插入的空间地址 //length++; return true; &#125; /*获得链表长度*/ int GetLength() &#123; return length; &#125; /*插入元素操作*/ bool InsertElement(int index,T e) &#123; LNode* p = head; LNode* q = new LNode(); int j = 0; while ( j &lt; index-1) &#123; p = p-&gt;next; j++; &#125; q-&gt;data = e; q-&gt;next = p-&gt;next; p -&gt; next = q; length++; return true; &#125; /*删除操作（下标型）*/ bool DeleteElement(int index) &#123; LNode* p = head; LNode* q = head-&gt;next; int j = 0; while (j &lt; index-1) &#123; p = p -&gt; next; q = q -&gt; next; j++; &#125; p-&gt;next = q-&gt;next; delete q; length--; return true; &#125; /*删除操作（找值型）*/ bool DeleteElement(T e) &#123; LNode* p = head; LNode* q = head-&gt;next; while (q != head) &#123; if (q-&gt;data == e) &#123; p-&gt;next = q-&gt;next; delete q; length--; return true; &#125; p = p-&gt;next; q = q-&gt;next; &#125; return false; &#125; /*清空链表操作*/ bool ListClean() &#123; length = 0; LNode* p = head-&gt;next; LNode* q; while (p-&gt;next != head)//定位到头结点之前，清空初头结点的外的其他数据空间 &#123; q = p -&gt; next; delete p; p = q; &#125; head-&gt;next = head; return true; &#125; /*合并操作*/ bool ListCombine(CLkList* s) &#123; LNode* t_head_of_s = s-&gt;head; s-&gt;rear-&gt;next = head-&gt;next; head-&gt;next = t_head_of_s-&gt;next; length += s-&gt;length; delete s-&gt;head; return true; &#125; /*遍历操作*/ void Traverse(void(*fb)(T &amp; t)) &#123; LNode* p = head-&gt;next;//从头结点开始遍历每一个元素的data while (p != head) &#123; fb(p-&gt;data); p = p-&gt;next; &#125; &#125;private:&#125;;template&lt;typename T&gt;void Print(T&amp; e) &#123; cout &lt;&lt; e &lt;&lt; " ";&#125;int main() &#123; CLkList&lt;char&gt; list; cout &lt;&lt; "后面插入了一个a数据" &lt;&lt; endl; list.push_back('a'); list.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "后面插入了一个b数据" &lt;&lt; endl; list.push_back('b'); list.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "后面插入了一个c数据" &lt;&lt; endl; list.push_back('c'); list.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "后面插入了一个d数据" &lt;&lt; endl; list.push_back('d'); list.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "在2号位置插入p数据" &lt;&lt; endl; list.InsertElement(2, 'p'); list.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "删除测试 " &lt;&lt; endl; cout &lt;&lt; "2号位置的数据被删除了" &lt;&lt; endl; list.DeleteElement(2); list.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "数据a删除了" &lt;&lt; endl; list.DeleteElement('a'); list.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "数据b删除了" &lt;&lt; endl; list.DeleteElement('b'); list.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "list2: " &lt;&lt; endl; CLkList&lt;char&gt; list2; cout &lt;&lt; "后面插入了一个v数据" &lt;&lt; endl; list2.push_back('v'); list2.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "后面插入了一个n数据" &lt;&lt; endl; list2.push_back('n'); list2.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "后面插入了一个m数据" &lt;&lt; endl; list2.push_back('m'); list2.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "list2合并到list" &lt;&lt; endl; list.ListCombine(&amp;list2); cout &lt;&lt; "合并后：" &lt;&lt; endl; list.Traverse(Print); cout &lt;&lt; endl; //清空list list.ListClean(); cout &lt;&lt; "清空完成" &lt;&lt; endl; &#125; 销毁链表与清空链表的区别： 销毁链表 清空链表 具体解释 包括头结点全部清空全部delete 保留头结点其他数据元素全部delete清空 产生的后果 头指针丢失，链表无法使用 清空链表后，保留了头结点，只是元素被清空了（即链表回到初始空表状态）还可以使用。 –（本文完）&lt;原创&gt;]]></content>
      <categories>
        <category>代码学习</category>
        <category>数据结构学习</category>
      </categories>
      <tags>
        <tag>学习总结</tag>
        <tag>数据结构</tag>
        <tag>数据结构-学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[C++进阶学习总结-(1.2)auto、头文件防卫]]></title>
    <url>%2F2019%2F06%2F18%2FC%2B%2B%E8%BF%9B%E9%98%B6%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-(1.2)auto%E3%80%81%E5%A4%B4%E6%96%87%E4%BB%B6%E9%98%B2%E5%8D%AB%2F</url>
    <content type="text"><![CDATA[Auto auto：变量的自动类型推断。 可以在声明变量的时候根据变量初始值的类型自动为此变量选择匹配的类型。（声明时要初始化） 自动推断发生在编译期间，所以使用auto不会造成程序效降低。 头文件防卫式声明 语法： 123456#ifndef _文件名_H#define _文件名_H内容#endif 为什么要用到头文件防卫式声明？ 目的：为了防止头文件中多重、重复定义内容。 情景假设： 假设一个工程里面有两个个头文件.h文件。里面都有自己的内容 123//head1.hint number1 = 8； 123//head2.hint number2 = 5; 1234567891011//main.cpp#include&lt;iostream&gt;#include"head1.h"#include"head2.h"using namespace std;int main()&#123; cout &lt;&lt; number1 &lt;&lt; endl; cout &lt;&lt; number2 &lt;&lt; endl;&#125; 编译运行情况： 假设在head2.h也include了head1.h，且在main.cpp里面也分别include了head1.h和head2.h再进行编译就会出现： 错误原因：出现了number1重复定义的错误，为啥呢？因为在执行main.cpp文件编译的时候已经对head1.h里面的内容进行了编译定义，但到了head2.h的文件的时候又include了head1.h意味着又重复定义了一次head1.h里面的内容从而造成head1.h里的number1重复定义的错误。 如何解决？—-对头文件进行防卫式定义 即对head1.h文件编辑 1234567//head1.h#ifndef _HEAD1_H//如果head1.h没有被定义那么就执行下面的内容#define _HEAD1_H//定义head1.hint number1 = 8；#endif//结束如果 当main.cpp执行编译操作的时候head1.h是没有定义的。所以#ifndef下面的内容将被执行即先定义head1.h文件。但到了include”head2.h”的时候发现head2.h里面也有include“head1.h”但此时head1.h已经被定义了，故#ifndef不成立下面的内容就没有被执行了，从而避免了头文件重复定义的情况。 结论：所以以后定义头文件的时候都可以进行防卫式定义然后就可以随便include定义的头文件了避免这些错误了。 –(本文完)&lt;原创&gt;]]></content>
      <categories>
        <category>代码学习</category>
        <category>C++学习</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>学习总结</tag>
        <tag>C++学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[C++进阶学习总结-(1.1)命名空间]]></title>
    <url>%2F2019%2F06%2F17%2FC%2B%2B%E8%BF%9B%E9%98%B6%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-(1.1)%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4%2F</url>
    <content type="text"><![CDATA[命名空间的基本概念简介基本概念 命名空间就是为了防止名字冲突引入的一种机制。系统中可以定义多个命名空间，每个命名空间都有自己的名字，不可以同名。 可以把命名空间看成一个作业域，在这个命名空间定义的函数，跟你另外一个命名空间里定义的函数，即便同名，也互不影响。 命名空间定义： 1234namespace 命名空间名&#123; void fb()&#123;&#125;//函数 ....&#125; 命名空间的定义可以不连续，甚至可以写在多个文件中，如果以为没有定义这个命名空间，那么相当于定义命名空间，如果已经定义了，那么就算打开这个命名空间并可以往里面添加新成员的声明； 情形 假设同一个工程里面有两个project.cpp和project2.cpp文件并分别给两个程序员去编写，在编写过程中张三和李四都定义了同名、返回值相同、参数也相同的void Print()函数，在编译时将会出现： 找到一个或多个多重定义的符号 void_cdecl Print(void)已在project2.obj中定义的错误 如何去解决这种问题呢？分别去改函数名或许是个好方法，但是如果这样的情况多了起来难免就太麻烦了。这里就可以用命名空间来解决具体： 123456//project1.cppnamespace ZhangSan &#123; void Print() &#123; cout &lt;&lt; "这是张三的Print函数" &lt;&lt; endl; &#125;&#125; 这样就解决了这种重名的问题。如果要调用张三的这个同名函数就可以用 命名空间名::实体名（函数名）的方法调用张三的Print函数 （其中“ : : “是作用域运算符）。 12345int main() &#123; ZhangSan::Print();//张三的 Print();//李四的&#125; 运行情况： 但是每次调用的时候都要用命名空间名::实体名（函数名）的方法岂不是也太麻烦了。 所以这里就要用上using关键字了，只要在头文件引入语句下面加入： using namespace ZhangSan就可以了 1234567891011#include&lt;iostream&gt;#include"project2.h"//张三命名空间定义所在的头文件using namespace std;using namespace ZhangSan;//使用的张三的命名空间int main() &#123; Print();//张三的&#125; 运行情况: –(本文完)&lt;原创&gt;]]></content>
      <categories>
        <category>代码学习</category>
        <category>C++学习</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>学习总结</tag>
        <tag>C++学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据结构学习总结-(2.5)链表存储结构的算法]]></title>
    <url>%2F2019%2F06%2F17%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%882.5%EF%BC%89%E9%93%BE%E8%A1%A8%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84%E7%9A%84%E7%AE%97%E6%B3%95%2F</url>
    <content type="text"><![CDATA[链表储存结构 链表（LinkedList） 定义: 每个元素用一个指针（以存储下一个数据的地址）相互串联起来为存储方式的物理存储结构 对应线性表操作： 前插数据元素 Insert_Front() 后插数据元素 Push_back() 插入数据 Insert_Element() 删除数据 Delete_Element() 获得数据 Get() 设置数据 Set() 遍历链表 Traverse() …… 对应一些算法实现思路 插入操作： 思路：先通过移动指针获得要插入位置前一个元素的地址，然后创建一个新的元素空间让要插入的数据对其进行赋值，然后将前一个数据的next指针指向这个新空间的地址，而原来next指针指向的地址赋值给新空间的next指针 具体实现： 123456789101112131415bool InsertElement(int index, T e) &#123; LNode* p = head;//这里的p是指向头结点的指针，目的是要从第一个数据开始往下算下标 int j = 0; while (p &amp;&amp; j &lt; index-1)//定位到要插入元素位置的前一个元素（即：寻找前驱结点） &#123; p = p-&gt;next; ++j; &#125; LNode* s = new LNode();//创建一个链表数据空间 s-&gt;data = e;//把要插入的数据放入这个空间 s-&gt;next = p-&gt;next;//这个新的空间的下一个指针地址是上一个元素的下一个元素地址 p-&gt;next = s;//上一个元素的下一个指针地址变为新空间的地址 return true; &#125; 删除操作： 思路：根据要删除的位置的下标先让一个指针定位到这个位置的前一个元素。这时要先创建一个临时的指针指向将删除的元素的地址（此步目的是获得下一个元素的地址，因为删除后不能获得要删除元素next指针的地址），然后将待删除的元素的前一个元素的next指针等于这个临时指针的next指针，最后delete这个临时指针。 具体实现： 1234567891011121314bool DeleteElement(int index) &#123; LNode* p = head;//定位到头结点 int j = 0;//从第0个元素开始移动指针 while (p &amp;&amp; j &lt; index - 1) &#123;//找到要删除元素数据的前一个位置 p = p-&gt;next; ++j; &#125; LNode* q = p-&gt;next;//用一个临时指针存储要删除数据元素的位置（目的为了获取待删除数据元素的下一个数据元素的位置） p-&gt;next = q-&gt;next;//把前一个数据元素的下一个指针地址存储 delete q;//释放临时指针（即：要删除数据元素）的空间 length--; return true; &#125; 链表存储结构代码实现情况： 前插操作（完成） bool InsertFront(T e) 后插操作（完成） bool push_back(T e) 插入操作（完成） bool InsertElement(int index, T e) 删除操作（完成） bool DeleteElement(int index) 获得操作（完成） bool Get(int index,T&amp; e) 修改操作（完成） bool Set(int index, T e) 遍历操作（完成） void Traverse(void(*fb)(T&amp; t)) 代码详细123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192#include&lt;iostream&gt;using namespace std;template&lt;typename T&gt;class LkList&#123; struct LNode &#123; T data;//数据 LNode* next;//指向下一个数据的指针 &#125;; LNode* head;//头指针 int length;public: /*构造函数*/ LkList() &#123; head = new LNode(); length = 0; if (!head)throw"No Memory";//若没有new出来就抛出异常 head-&gt;next = 0; &#125; /*获得数据操作*/ bool Get(int index,T&amp; e) &#123; LNode* p = head-&gt;next;//这里的p指向的下一个元素的头指针 int j = 1; while (p &amp;&amp; j &lt; index) &#123; p = p-&gt;next;//把p的指针往后一个元素头指针移动 ++j; &#125; if (!p || j &gt; index) return false; e = p-&gt;data;//获得数据 return true; &#125; /*插入元素操作*/ bool InsertElement(int index, T e) &#123; LNode* p = head;//这里的p是指向头结点的指针，目的是要从第一个数据开始往下算下标 int j = 0; while (p &amp;&amp; j &lt; index-1)//定位到要插入元素位置的前一个元素（即：寻找前驱结点） &#123; p = p-&gt;next; ++j; &#125; if (!p || j &gt; index) return false; LNode* s = new LNode();//创建一个链表数据空间 s-&gt;data = e;//把要插入的数据放入这个空间 s-&gt;next = p-&gt;next;//这个新的空间的下一个指针地址是上一个元素的下一个元素地址 p-&gt;next = s;//上一个元素的下一个指针地址变为新空间的地址 length++; return true; &#125; /*删除元素操作*/ bool DeleteElement(int index) &#123; LNode* p = head;//定位到头结点 int j = 0;//从第0个元素开始移动指针 while (p &amp;&amp; j &lt; index - 1) &#123;//找到要删除元素数据的前一个位置 p = p-&gt;next; ++j; &#125; if (!p || j &gt; index) return false; LNode* q = p-&gt;next;//用一个临时指针存储要删除数据元素的位置（目的为了获取待删除数据元素的下一个数据元素的位置） p-&gt;next = q-&gt;next;//把前一个数据元素的下一个指针地址存储 delete q;//释放临时指针（即：要删除数据元素）的空间 length--; return true; &#125; /*前插操作*/ bool InsertFront(T e) &#123; LNode* q = new LNode();//创建一个新数据空间 if (!q)return false; q-&gt;data = e;//对要插入的数据进行赋值到这个空间的data q-&gt;next = 0;//避免第一个数据next指针出现野指针的问题 q-&gt;next = head-&gt;next;//与头结点相连 head-&gt;next = q;//这个next指针指向第二个数据的位置 length++; return true; &#125; /*往后插入操作*/ bool push_back(T e) &#123; LNode* p = head;//从头结点开始让指针指向最后一个数据元素的地址 LNode* q = new LNode(); int j = 0; while (p-&gt;next)//如果p-&gt;next为空指针，意味着找到了最后一个数据元素的地址 &#123; p = p-&gt;next; &#125; if (!p)return false; q-&gt;data = e;//进行data赋值 q-&gt;next = 0;//因为是后插，说明后面没有数据元素地址，让这个空间的next指针赋值为0 避免野指针问题 p-&gt;next = q;//原最后一个元素数据的next指向这个新插入的空间地址 length++; return true; &#125; /*设置操作*/ bool Set(int index, T e) &#123; LNode* p = head;//从头结点开始寻找要修改的位置 int j = 0; while (p &amp;&amp; j &lt; index) &#123; p = p-&gt;next; ++j; &#125; if (!p || j &gt; index) return false; p-&gt;data = e;//数据进行修改 return true; &#125; /*遍历操作*/ void Traverse(void(*fb)(T&amp; t)) &#123; LNode* p = head-&gt;next;//从头结点开始遍历每一个元素的data while (p) &#123; fb(p-&gt;data); p = p-&gt;next; &#125; &#125;private:&#125;;template&lt;typename T&gt;void Print(T&amp;t) &#123; cout &lt;&lt; t &lt;&lt; " ";&#125;int main() &#123; LkList&lt;char&gt; List; cout &lt;&lt; "前插了一个A " &lt;&lt; endl; List.InsertFront('A'); List.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "前插了一个B " &lt;&lt; endl; List.InsertFront('B'); List.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "后插了一个C " &lt;&lt; endl; List.push_back('C'); List.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "在第4个位置插入了O " &lt;&lt; endl; List.InsertElement(4, 'O'); List.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "在第4个位置插入了G " &lt;&lt; endl; List.InsertElement(4, 'G'); List.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "删除了第2位的元素 " &lt;&lt; endl; List.DeleteElement(2); List.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "把第3位的数据修改成I" &lt;&lt; endl; List.Set(3,'I'); List.Traverse(Print); cout &lt;&lt; endl; cout &lt;&lt; "获得第4位的数据 " &lt;&lt; endl; char ch; List.Get(4, ch); cout &lt;&lt; ch &lt;&lt; endl;&#125; –（本文完)&lt;原创&gt;]]></content>
      <categories>
        <category>代码学习</category>
        <category>数据结构学习</category>
      </categories>
      <tags>
        <tag>学习总结</tag>
        <tag>数据结构</tag>
        <tag>数据结构-学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据结构学习总结-(2.4)初识链表]]></title>
    <url>%2F2019%2F06%2F16%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%882.4%EF%BC%89%E5%88%9D%E8%AF%86%E9%93%BE%E8%A1%A8%2F</url>
    <content type="text"><![CDATA[链表基本概念 结点包括数据域和指针域。 链表是有n个结点链结成，第一个结点的存储位置叫做头指针，最后一个结点的指针为“空”。 相较于顺序表存储结构的优点： 不用定义时规定长度。 存储的元素个数不受限制。 插入和删除元素时，不用移动其他元素。 链表的头指针和头结点 基本概念 头指针：链表中第一个结点的储存位置。 头结点：在单链表的第一个结点前附设的一个结点。 头指针 头结点 若链表有头结点，则是指向头结点的指针；若没有则是链表指向第一个结点的指针 头结点是为了操作的统一和方便而设立的，放在第一个结点之前 其数据域一般无意义（可以存储链表的长度） 头指针具有表示作用，所以常常有头指针表示链表的名字 有了头结点，在第一个结点前插入和删除第一个结点时，操作与其他结点的操作就统一了 无论链表是否为空，头指针均不为空。头指针是链表的必要元素 头结点不一定是链表的必须要素 链表存储结构 链表存储结构的特点是如何将数据域与“指标”（指针域）配对，以及指示下一条数据的内存位置。 链表存储结构中，数据存储在内存中分散的位置。各个数据由一个指针相互连接 一个数据中的指针域存放的是下一个数据的地址。 由于数据储存在不同的位置，每一个数据只能通过指针域中的指针来访问 删除：删除元素时只需将前一个数据的指针域指向要删除数据的下一个数据的地址即可，从而避免了顺序表存储结构多次的数据调换的麻烦。 添加：添加只需把要添加的位置的前一个数据的指针指向新数据，再让新数据的“指标”指向后一个数据的地址即可。 –（本文完）]]></content>
      <categories>
        <category>代码学习</category>
        <category>数据结构学习</category>
      </categories>
      <tags>
        <tag>学习总结</tag>
        <tag>数据结构</tag>
        <tag>数据结构-学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据结构学习总结-（2.3）顺序表存储结构代码、算法实现]]></title>
    <url>%2F2019%2F06%2F15%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%882.3%EF%BC%89%E9%A1%BA%E5%BA%8F%E8%A1%A8%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81%E3%80%81%E7%AE%97%E6%B3%95%E5%AE%9E%E7%8E%B0%2F</url>
    <content type="text"><![CDATA[顺序表储存结构 顺序表(SqList) 定义： 顺序表存储结构是一个以连续空间地址存储为方式的物理结构 实现线性表相应操作： SqList（） 初始化线性表：创建一个空的线性表List SqList.InsertElement（index ， e） 在线性表List的index下标处插入元素e SqList.DeleteElement（ index， *e) 删除线性表List中的第i个元素，并返回删除元素指针e SqList.GetLength（） 获得线性表的长度 SqList.DeleteAllElement（） 清空线性表 SqList.find（e） 查找线性表中的元素e ………. 一些基础算法的实现思路 插入算法： 思路：根据想要插入的下标为准，用循环各各数值往后移动（即：相互覆盖赋值）空出指定下标进行插入赋值。从最后一个元素开始往后赋值 具体实现： 12345678910void InsertElement(int index, Datas t) &#123; length++;//因为要插入一个新的元素，故实际长度要加1 for (int i = length; i &gt; index; i--) &#123;//先把后面的元素全部往后覆盖赋值 datas[i] = datas[i - 1]; &#125; datas[index] = t;//在目标index位置插入新元素 &#125; 删除算法： 思路：根据要删除元素的下标为目标往前覆盖赋值。 具体实现： 1234567void DeleteElement(int index) &#123; for (int i = index; i &lt; length-1; i++) &#123; datas[i] = datas[i + 1]; &#125; length--;//每删除一个length（实际长度）将减少 &#125; 扩容： 思路：先判断是否是否满了，（即：用最大容量与实际长度相互比较如果相等那么就算满了），确定满容后先重新获得一个跟大的空间容量，然后把原来的线性表数组对其进行赋值。Delete原线性表数组，地址等于新扩容后的地址，完成扩容操作。 具体实现： 1234567891011121314if(length == capacity)//判断使用扩容的时机void realloc() &#123; T* p = new T[2 * capacity];//最大容量扩大两倍 for (int i = 0; i &lt; length; i++) &#123;//把原顺序表赋值到新顺序表 p[i] = datas[i]; &#125; delete[]datas;//清空原线性表里的元素 datas = p;//把新扩容后线性表的地址赋给datas p = NULL;//避免临时指针p变为野指针 capacity *= 2;//总容量扩大 &#125; 根据线性表用顺序存储结构实现的操作完成情况： 增加元素（完成） bool Push_back(T) 查找元素（完成） bool GetElement(int index,T&amp;c) 扩容（完成） bool realloc() 删除元素（完成） bool DeleteElement(int index) 插入元素(完成) bool InsertElement(int index, T t) 清空元素（完成）&lt;待完善修改&gt; bool DeleteAllElement() 代码详细：123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198#include&lt;iostream&gt;#define MAX_SIZE 1 //定义最大容量using namespace std;template&lt;typename T&gt;class SqList&#123;private: T* datas; //线性表 int length = 0;//实际容量 int capacity;//总容量public: /*构造函数*/ SqList() &#123; capacity = MAX_SIZE;//总容量等于最大容量（进行初始化） datas = new T[capacity]; cout &lt;&lt; "初始化成功！！！" &lt;&lt; endl; &#125; /*获得总容量*/ int GetLength() &#123; return length; &#125; /*查找并取值操作*/ bool GetElement(int index, T&amp; c) &#123; if (index &lt; 0 || index &gt; length) return false; c = datas[index]; return true; &#125; /*增加元素操作*/ bool Push_back(T NewElem) &#123; if (length == capacity)//判断顺序表是否满了 &#123;//如果满了调用扩容操作 if(!realloc())//如果扩容失败那么Push_back也失败 return false; &#125; datas[length] = NewElem; length++; return true; &#125; /*设置元素操作*/ bool SetElement(int index, T t) &#123; if (index&lt;0 || index&gt;length)//判断下标是否输入正确 return false; datas[index] = t; return true; &#125; /*插入元素操作*/ bool InsertElement(int index, T t) &#123; if (index&lt;0 || index&gt;length)//判断下标是否输入正确 return false; length++;//因为要插入一个新的元素，故实际长度要加1 if (length == capacity)//判断顺序表是否满了 &#123;//如果满了调用扩容操作 if (!realloc())//如果扩容失败那么Push_back也失败 return false; &#125; for (int i = length; i &gt; index; i--) &#123;//先把后面的元素全部后退 datas[i] = datas[i - 1]; &#125; datas[index] = t;//在目标index位置插入新元素 return true; &#125; /*删除元素操作*/ bool DeleteElement(int index) &#123; if (index&lt;0 || index&gt;length)//判断下标是否输入正确 return false; for (int i = index; i &lt; length-1; i++) &#123; datas[i] = datas[i + 1]; &#125; length--;//每删除一个length（实际长度）将减少 return true;//删除动作完成后返回true &#125; /*清空元素操作*/ bool DeleteAllElement() &#123; int len = length; for (int i = 0; i &lt; len; i++) &#123; DeleteElement(0); &#125; return true; &#125; /*查找元素操作*/ int find(T e, int pos = 0) &#123; for (int i = pos; i &lt; length; i++) &#123; if(datas[i] == e) return i; &#125; return -1; &#125;private: /*扩容操作*/ bool realloc() &#123; T* p = new T[2 * capacity];//最大容量扩大两倍 cout &lt;&lt; "扩容成功！！！" &lt;&lt; endl; if (!p)return false; for (int i = 0; i &lt; length; i++) &#123;//把原顺序表赋值到新顺序表 p[i] = datas[i]; &#125; delete[]datas;//清空原线性表里的元素 datas = p;//把新扩容后线性表的地址赋给datas p = NULL;//避免临时指针p变为野指针 capacity *= 2;//总容量扩大 return true;//更换扩容操作完成后宣布扩容操作成功 &#125;&#125;;//打印顺序表操作template&lt;typename T&gt;//模版void Print(SqList&lt;T&gt;&amp; L) &#123; T e; for (int i = 0; i &lt; L.GetLength(); i++) &#123; L.GetElement(i, e); cout &lt;&lt; e &lt;&lt; " "; &#125; cout &lt;&lt; endl;&#125; int main() &#123; SqList&lt;char&gt; List; char ch; if (!List.GetElement(1, ch)) cout &lt;&lt; "未找到" &lt;&lt; endl; cout &lt;&lt; "加入A" &lt;&lt; endl; List.Push_back('A'); Print(List); cout &lt;&lt; "加入B" &lt;&lt; endl; List.Push_back('B'); Print(List); cout &lt;&lt; "修改下标为1的B为G" &lt;&lt; endl; List.SetElement(1, 'G'); Print(List); cout &lt;&lt; "加入C" &lt;&lt; endl; List.Push_back('C'); Print(List); cout &lt;&lt; "加入D" &lt;&lt; endl; List.Push_back('D'); Print(List); cout &lt;&lt; "在下标为2的位置插入O" &lt;&lt; endl; List.InsertElement(2, 'O'); Print(List); cout &lt;&lt; "删除下标为1的G" &lt;&lt; endl; List.DeleteElement(1); Print(List); cout &lt;&lt; "寻找M的下标为： " &lt;&lt; List.find('M') &lt;&lt; endl; cout &lt;&lt; "清空了所有元素" &lt;&lt; endl; List.DeleteAllElement(); cout &lt;&lt; "加入F" &lt;&lt; endl; List.Push_back('F'); Print(List); cout &lt;&lt; "寻找A的下标为： " &lt;&lt; List.find('A') &lt;&lt; endl; cout &lt;&lt; "在下标9位置插入G" &lt;&lt; endl; List.InsertElement(9, 'G'); Print(List);&#125; –(本文完)&lt;原创&gt;]]></content>
      <categories>
        <category>代码学习</category>
        <category>数据结构学习</category>
      </categories>
      <tags>
        <tag>学习总结</tag>
        <tag>数据结构</tag>
        <tag>数据结构-学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[大学学习个人计划及路线规划]]></title>
    <url>%2F2019%2F06%2F15%2F%E5%A4%A7%E5%AD%A6%E5%AD%A6%E4%B9%A0%E4%B8%AA%E4%BA%BA%E8%AE%A1%E5%88%92%E5%8F%8A%E8%B7%AF%E7%BA%BF%E8%A7%84%E5%88%92%2F</url>
    <content type="text"><![CDATA[Welcome to my blog, enter password to read. Incorrect Password! No content to display! U2FsdGVkX1/OJHOZWZX/iCKkvIQbGQbTUVUSVpO70BcUtMf1wK/DHXtToCtyuwhPMzjM47QJVm4fYGxBg+7IF1YT+YLRd+4xGPq16qxO+tcoonmThctOLtmNqJb+x4syH+45evviJWOSx+EX5WMiCElS3IoigmcY9cF+Pj2Vu1WVpq+HpEKAh04PJ+GxCFZBpSvsKqiSC3re/43iqNDAHOe+1K+B8BWwLOrlLz4ljMkKX166kjybkUyiinoprwxQsKQal0LZcg7iQMZUmjIMEsW6vSdlFMm2wLxEU1XKOxTxH0Pw5/FxIqrmXLvnB03lDXb25xzm+5EEl1C/3WcnbzXiAi0HzxsailRq67Eeuwpltt29OeDTzCKxAGHle8h6CvNhy6qqJHJRRPXjmzEJtsZvfmxy9i4d7T6iK31qt+xjAjvCZB/Bl4hYnpyel1+1mQUi082/PjUx6JuYyKOyuGp02qOFvNz7rGgA/BGIihdr2CJmsz5FALF0AiD6v6hwHK8tvghgeT+EvGxowjDS99dgLiE6zQMkQkl/OzXSAl3GOLwjMJN5KoiV4O307wtcEice6J3eSXkJ5jBK1o6vfmmGbPF8AR0+IEoRDlnPG+cQPm0W8ekNN7CyCRu4rqWZtmL3pfjumCQ2f1KEHXMqz6CZ8+52TZfqKE9RosGG8tretRX3LzlLwmEhDzz00tURzL0En7pOX7vglIrhZuMruA3EHBCmw4fZ+CZs2X67uBuJDBr+xP7s93yYYCxRgoM9EQkz1V5NI5t4SEXKAin/RS4lrjFhdVmpm5glrqJbHkJj8hP/V/9nFPLey8Y+zAuPRkpv0zBzyjKSA+W1k/bkkR4mfRFiLxO3htxO2JOuj4ZYiSZUVOe9ufkfqq0w0fs2xsP7vMnK92s1OofjmeVdTG/7ws4Uf80ZnqIjVAlNTEr5B9XzTLC179RpXMTXff17DFMZy5zeVCmmJ/2caGIbgWGFBBNEz9K14QNr6JN/m71srBgD8pMqt+xS5yAn2pi2a0YeGrWlmUJ+5sD9WWgIDV4aWJo1CNUAvvDPujxyRckTw1hu1q1C0vNh4HFVg9FHVWSsmILIOsaj5uji6Ah9EOImUDxr7lsavENmeUPKJiTnvHZ9uIHrjl7kJGCBdQOr6ToHNsvJo9ycFODUZxtLIokZfvX6FdDV7t2B8frVSzM6rzThHGSEjO6IHpIUj4J6EqxOptfB4cOiX6a5jv8j8BRNBNDYSxl2Uii7uZVDjzArDjxFv0XoEcT/370EgemtgCIu8PqnLYzvTTd+Btyudg==]]></content>
      <categories>
        <category>个人随感</category>
      </categories>
      <tags>
        <tag>学习计划</tag>
        <tag>目标</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据结构学习总结-（2.2）顺序表存储结构]]></title>
    <url>%2F2019%2F06%2F14%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%882.2%EF%BC%89%E9%A1%BA%E5%BA%8F%E8%A1%A8%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84%2F</url>
    <content type="text"><![CDATA[顺序表结构 顺序存储结构的线性表–顺序表 定义：指的是用一段地址连续的存储单元依次存储线性表的数据元素（数组） 顺序表的构成 需要定义线性表的最大存储空间 #define int Max_SIZE = 255; 线性表里需要有统一类型的元素集合 12345678910111213141516#define int MAX_SIZE = 255;//最大存储长度 /*定义线性表*/typedef int ElemType;//给int起一个别名 ElementTypetypedef struct&#123; int num;char* name;&#125;ElementType;/*定义顺序表结构*/typedef struct &#123; ElementType Datas[MAX_SIZE]; int length;//当前长度&#125;SeqList; –(本文完)&lt;待完善&gt;]]></content>
      <categories>
        <category>代码学习</category>
        <category>数据结构学习</category>
      </categories>
      <tags>
        <tag>学习总结</tag>
        <tag>数据结构</tag>
        <tag>数据结构-学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[石膏球（练习）]]></title>
    <url>%2F2019%2F06%2F14%2F%E7%9F%B3%E8%86%8F%E7%90%83%EF%BC%88%E7%BB%83%E4%B9%A0%EF%BC%89%2F</url>
    <content type="text"><![CDATA[]]></content>
      <categories>
        <category>绘画</category>
        <category>练习</category>
      </categories>
      <tags>
        <tag>绘画练习</tag>
        <tag>素描</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java学习心得体会]]></title>
    <url>%2F2019%2F06%2F14%2FJava%E5%AD%A6%E4%B9%A0%E5%BF%83%E5%BE%97%E4%BD%93%E4%BC%9A%2F</url>
    <content type="text"><![CDATA[​ 先简单说一下我对于编程这一门课程个人感受吧，编程说难也难，但说它简单也不过分。难，难在程序编写过程的中的思考方式。简单，就简单在一旦你掌握了基本语句和方法的基础下，有着一个活跃的思维思考能力，程序编程基本都是水到渠成的事。接下来我就简单说下我个人对于Java学习过程中一些心得和学习方法供大家参考一下吧。 心得：​ 首先我在大一是有接触过C++的，刚拿到课本也是一头雾水，看不明白。但在深入学习后，我认为掌握一门程序语言重要的不是知道它具体的语法和规则，而是运用这些语法和规则时的思维。为什么编程的思维很重要呢？这是一个很现实的问题，如今知识更新快，社会发展非常快，意味着编程语言的变化也是很无常的，或许你刚掌握了java语言，市场上就有了更好的编程语言。这就意味着你要继续学习新的语言和知识，如果此时你有一个活跃的编程思维，去接触新的语言学会它会非常容易。 说了这么多思维很重要，那编程思维到底是怎样的？举个小例子：假设你要编程一个超市商品结账的程序，先不要想怎么去编写它。先去思考一下，假如你在超市工作并给一个顾客买的两个东西结账。结账时你要做的事情：你要先识别他买的两个东西单价分别是多少钱，买了多少个，总金额多少，付钱结账最后打印一个小票给这个顾客。简化下来就是：1.识别物品，2.计算金额3.打印信息。好的！接下来用编程来搞定它，1.识别物品从你一大堆的商品信息中找到这个商品的信息。怎么编这个功能？用循环被一个个找。找到同名的商品并得到它的金额信息就可以了。2.计算金额 用循环累加，3.打印出信息 完成本次结账，程序结束。从上面可以看出编这个程序思考方向：明确你程序要干的事情是什么（目的是结账），干这个事情有什么动作（1.识别食品找到对应的价格2.计算总金额3.打印信息），完成这些动作要用什么方法（1.可以用循环来找或其他方法2.每一项金额累加3.打印上面步骤得到的数据信息）。你能在看见一个动作就能想到一个方法去解决它。这就要靠活跃的思维，怎么样用你所学到的编程规则与语句对应想出编写针对它解决它的方法，这就是一个编程的思维。 学习方法：​ 根据上文所述的思维的方式我说下我自己的学习方法供大家参考。 根据自己的想法用自己的话去总结每一章学习的知识：这里要注意！自己每次学习完一章内容尽量地去总结且一定要根据自己的话和自己的思考去总结不能网上复制粘贴一下概念知识。这样做有两个好处：①加固加深你所学的知识，毕竟是根据自己思考后总结出来的、②培养独立的学习思考能力（说白了就是把你学到的知识用自己的理解写一个类似于教材的总结）。 建立编程错误库：其实很多人在编程的时候都会遇到红标报错，这是很正常的事情我们本来就是在试错中才能积累经验。你每一次出错，如果你有时间可以编写一个文档计入每一次遇到的新的报错 并且记录下错因是什么 怎么去解决，这样遇到同样的错误就会有条件反射：“哦！我以前犯过NullPointException的错误，这个错误是空指针错误，原因是有一个对象没有给它空间，应该调用它的构造方法去解决它。”慢慢的就会有独立去解决这些错误的能力了。当然如果你没有多余的时间，也可以让自己的脑子去记下来QWQ。 找个好（ji）朋友进行讨论和思维碰撞：单干是很寂寞的。可以找一个好朋友、舍友进行思维碰撞和讨论。这也很重要！为什么，因为每一个对同一个问题的思考方式、方向都不可能完全相同的。通过思维的交汇，朋友间能相互提高且提高的跟快。再者可以有效的避免一些舍友之间的矛盾。 兴趣主导目标引领：有一个学习目标是很重要的，当然这得取决你不会去排斥它，就如编程。你主动爱它虽然它不会爱你_(:з」∠)_。但你排斥它，它也一定会排斥你这也是必然的。所以学好一门课首先是要培养出对它的兴趣，然后java语言与其他编程语言一样，学习它时候是要用大量的课余时间去练习它。练习也是要有目的的，你可以就按每次作业的要求去学习它，在完成作业后，你也可以自己想一点小玩意供自己去练习。例如：你看见你去钱用的很乱，你就会想编一个记账的小程序，然后就有一个目标出现了。你就会根据你的小目标去主动学习主动搜索你所需要的知识。学习一门课程，只要你站在主动的一方，一切问题就非常好解决了。 从初学就养成良好的编码习惯：这里有些人可能有点疑问，码是我编的，我想咋编就咋编我看得懂就ok这样的思想是很错误的。首先这样做DEbug会非常辛苦，现在是小程序可能体会不出来，当你编写几百行几万行以上的代码就会痛苦的不得了。（个人亲试过：你体验过自己编了700多行代码的程序，de一个bug蹦出一堆bug的快感吗？）。这里我非常推荐一点要写注释！特别是自己想的方法。这样做有两个好处：①这样你编写这个方法的时候思路会比较明确，知道每一步要怎么去做。 ②.对于以后工作写文档会有用处，未来的代码是要给别人看的。 然后我提一点其他的好习惯吧。㈠定义变量的时候命名让它有意义，且在定义的时候一个变量占一行，有关联的变量尽量相近定义。㈡善用回车换行，这里举一个简单的例子吧。每个方法尽量用两个回车来分开。这样做，一是方便注释，二是方便分辨每一个方法体，且美观。这里要注意回车换行适度就行，不宜太多。其他方法可以搜索网上资料。这里就不一一叙述了。养成良好的编程习惯一是方便你自己，二来也对未来工作有非常大的帮助。 尽量先靠自己去想怎么做：不要一遇到不会就百度、参考其他同学的代码。切记！有人会说，参考后我会自己去理解，之后也不是会变成我自己的知识吗？这样说吧：这样做好比你在海上航行，你知道答案了就像你知道目的地的准确位置了，接下来你只需把船开过去即可，但正常情况下，你应该要靠自己的能力去找目的地而不是知道它在哪的前提下去航海。未来工作也是这样。一个是逆向思考，另一个是正向思考。两者是不一样的。所以我们一定要先独立思考。直到真的完全不会了再去参考学习。每次都参考别人的东西去学习，会导致一个依赖感长期的逆向思考，到了真的要自己动手的时候发现一点都不会。这也解释了一些同学看得懂代码，自己动手却什么都不会的原因。 ​ 最后我先明确我的这些理解和见解只供大家去参考。我的一些理解和心得可能没有你们的好，学习方法或许你的也会更棒。所以不要太局限于我的见解QAQ。 –（本文完）&lt;原创&gt;]]></content>
      <categories>
        <category>个人随感</category>
      </categories>
      <tags>
        <tag>学习总结</tag>
        <tag>心得体会</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据结构学习总结-（2.1）线性表的抽象数据类型]]></title>
    <url>%2F2019%2F06%2F14%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%882.1%EF%BC%89%E7%BA%BF%E6%80%A7%E8%A1%A8%E7%9A%84%E6%8A%BD%E8%B1%A1%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%2F</url>
    <content type="text"><![CDATA[线性表 定义： 零个或多个数据元素的有限序列。 特点: 它是一个序列 数据元素之间是有有序的。 数据元素之间是一对一的关系。 有限性 两个数据元素的有限序列称为空表。 常见线性表的操作： 删除 插入 创建 初始化 清空 查找 线性表的抽象数据类型 ADT 线性表(List) Data 线性表数据元素是一个集合{a_1 , a_2 , a_3 , …. , a_n},数据元素的类型DataType（int , char ,…)。 除了第一个（a_1）元素外，每个元素有且只有一个直接的前驱元素。 例如 : a_2的前驱元素是a_1。 除了最后一个（a_n）元素外，每一个元素有且只有一个直接的后继元素。 例如: a_3是a_2的后继元素。 Operation InitList（*List） 初始化线性表：创建一个空的线性表List InsertElement（*List ， index ， e） 在线性表List的index下标处插入元素e DeleteElement（*List ， index， *e) 删除线性表List中的第i个元素，并返回删除元素指针e GetLength（*List） 获得线性表的长度 IsEmpty（*List） 判断线性表是否为空表 ClearList（*List） 清空线性表 ExsitElement（*List ， e） 查找线性表中的元素e endADT 个人理解：​ 在实际上，线性表可以理解为一群人在排队，排队的都是人（数据元素类型相同），然后他们是排成一条线的。首先排队的人肯定是有限的（即：有限性）其次他们每一个人是相互连成一条线的，即一个人跟着一个人有顺序（即：一对一、有序的）。 ​ 再者，这队排队的人，除了第一个人前面没人，最后一个人后面没人外。其中每一个人都是前后都有人的。例如第二个人的前面是第一个人（即：第一个人为第二个人的前驱元素），而第三个人是第二个人的后面（即：第三个人为第二个人的后继元素）。 ​ 这队排队的人是在等待上车的。他们之间可能会有人在中途想上厕所从而离开了队伍（即：删除），又或者有人在后面加入进去了（即：增加），这时检票员也会一一核对信息对照人员表查找每一个人是否到齐了（即：查找），这时上厕所的人回来了因为这队人是有顺序的，所以这位回来的也可以插入原来的位置（即：插入）。 –（本文完）]]></content>
      <categories>
        <category>代码学习</category>
        <category>数据结构学习</category>
      </categories>
      <tags>
        <tag>学习总结</tag>
        <tag>数据结构</tag>
        <tag>数据结构-学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据结构学习总结-（2）第二章预习]]></title>
    <url>%2F2019%2F06%2F12%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%882%EF%BC%89%E7%AC%AC%E4%BA%8C%E7%AB%A0%E9%A2%84%E4%B9%A0%2F</url>
    <content type="text"><![CDATA[问题： 线性表的顺序存储的优点和缺点有哪些？ 线性表的删除和插入算法的思路？ 数组长度和线性表长度的区别？ 顺序存储结构的三大属性？ –（本文未完）]]></content>
      <categories>
        <category>代码学习</category>
        <category>数据结构学习</category>
      </categories>
      <tags>
        <tag>学习总结</tag>
        <tag>数据结构</tag>
        <tag>数据结构-学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据结构学习总结-(1.2)抽象数据类型]]></title>
    <url>%2F2019%2F06%2F12%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%881.2%EF%BC%89%E6%8A%BD%E8%B1%A1%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%2F</url>
    <content type="text"><![CDATA[抽象数据类型数据类型 定义： 计算机中，内存空间是最有限的，不同的类型的数据分配的内存空间大小不同。 例如：在C++ 中 整型占4个字节，双精度浮点数占8个字节等等 数据类型就是指一组性质相同的值和集合及定义在此集合上的一些操作的总称 例如在C/C++语言中的数据类型中是按取值不同分类的数据类型 原子型（不可再分）：不可再分的数据类型。例如：int(整型)、double（双精度浮点型）等等 结构型（可再分）：若干个数据类型（包括原子型和结构型）组成的一个组合。例如：数组，类，结构体（C/C++）等。 抽象数据类型（Abstruct Data Type[ADT]) 定义：是对已有的数据类型进行抽象 抽象数据类型是指一个数据模型及定义在该模型上的一组操作 模板： ADT 抽象数据类型名 Data 数据元素之间的逻辑关系的定义 Operation 操作1 初始条件 操作结果描述 操作2 … 操作n … endADT 个人理解：通过套用上面的模板 解释int（整型数据类型） int（整型） 是以线性结构存储一个int（整型）数据类型占4个字节 Operation 操作1：加法 需要两个数 结果为两个数的和 操作2：减法 需要两个数 结果为两个数的差 操作3：乘法 … 操作4：除法 … 个人总结： 用自己的话简述下列术语： 数据：类似一个或几个人的全部基本信息（姓名、性别、爱好等）。 数据元素：人基本类型里面的单一个姓名、性别等。 数据对象：单一个人的基本信息。 数据结构：数据通过一定的结构、关系（计算方法【算法】）存储起来就是数据结构 例如：上面所说的数据 –多个人的基本信息 一般是用列表格的形式存储的，即所用的是线性逻辑结构存储的。 存储结构（物理结构）：是对逻辑结构在计算机上的表示。即对上面的数据结构在计算机进行实习，如果是顺序存储结构，那么这些个人基本信息可能是用数组储存起来的。 数据类型：例如 整型、浮点型就是一个数据类型，数据类型是一组相同值和其每个值之间特有的关系上的操作的总称。例如整型，它每一个数据元素都是一个整数，他们可以进行加减乘除等操作。 抽象数据类型：类似于数据类型，但是把一些东西抽象化成数据类型。例如游戏角色，它的数据元素（对比就是整型里面的整数）有很多，例如武器、玩家属性等、这个数据类型可以执行的动作有移动攻击等。 数据结构和抽象数据类型的概念与程序设计语言中的数据类型概念的区别 抽象数据类型是对软件设计过程中问题模型抽象出来的逻辑结构和在逻辑结构上的运算。 数据结构是计算机处理元素的组织形式的相互关系。 程序设计语言中的数据类型是已经实现了的数据结构。 即：一个还没有被实现（抽象数据类型）一个是已经实现的了（程序设计语言中的数据类型） 而数据结构是指： 数据的相互之间存在一种或多种特点关系的数据元素的集合。 --（本文完）&lt;待完善&gt;]]></content>
      <categories>
        <category>代码学习</category>
        <category>数据结构学习</category>
      </categories>
      <tags>
        <tag>学习总结</tag>
        <tag>数据结构</tag>
        <tag>数据结构-学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java模拟考心得体会]]></title>
    <url>%2F2019%2F06%2F12%2FJava%E6%A8%A1%E6%8B%9F%E8%80%83%E5%BF%83%E5%BE%97%E4%BD%93%E4%BC%9A%2F</url>
    <content type="text"><![CDATA[今天进行了Java期末考试的模拟考，颇有心得与感触，以本文进行叙述：遇到的问题比较多：例如 &gt;&gt; 与 &gt;&gt;&gt;运算符 这里的意思是这样的 &gt;&gt;有符号的右移这是对二进制的数来说的 int i=8，那么 i &gt;&gt; 2就是二进制往右移两位，即：（0）1000【8】 往右移两位就是 （0）0010【2】，而&gt;&gt;&gt;就是不考虑符号位。 jpane的默认布局是流式布局 （我居然写BorderLayout） 其次是swing包里面的 按钮监听器不太熟 警示： 千万不要在程序设计或填空 题目里面用Shift + F 格式化 切记切记！！ 其他知识点： 按钮监听器重写方法：public void actionPerformed(ActionEvent event) 对于子类可以从父类继承的成员变量，只要子类中声明的成员变量和父类中的成员变量同名时，子类就隐藏了继承的成员变量，子类自己声明定义的方法操作与父类同名的成员变量是指子类重新声明定义的这个成员变量。 –（本文完）]]></content>
      <categories>
        <category>个人随感</category>
      </categories>
      <tags>
        <tag>心得体会</tag>
        <tag>考试</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据结构学习总结-（1.1）数据结构的基本概念]]></title>
    <url>%2F2019%2F06%2F11%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%EF%BC%881.1%EF%BC%89%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5%2F</url>
    <content type="text"><![CDATA[数据结构的基本概念五个基本概念：数据 定义：描述客观事物的符号，是计算机中可以操作的对象。 个人理解：类似于整型，或者一个文件都是可以看出数据。实际情况：例如我输入的账号密码就算是为数据 数据元素 定义：组成数据的、有一定意义的基本单位，在计算机中通常作为整体处理，也被称为记录。 数据元素是数据结构的聚焦点 个人理解：把数据比喻成一个文件夹，那么数据元素就应该是里面的一个不可分的文件（高达模型上面的一个零件？）。 数据项 定义： 一个数据元素可以由若干个数据项组成。 个人理解 ： 数据元素比作对象，那么数据项就类似于对象的属性（成员变量）。例如：上面输入信息时，用户名和密码分别就算是数据项 数据对象 定义： 性质相同的数据元素的集合，是数据的子集。 个人理解：这个应该是介于数据和数据项中间的东西 数据结构（data structure） 定义：数据结构是相互之间存在一种或多种特定关系的数据元素的集合。 数据元素 + 特定关系 = 数据结构 总结：用实际情形来描述，你在一个网站上进行注册，要求填写个人形象，其中里面的姓名、密码就是 数据项 ，每一个数据项组成的就是一个 数据元素 ，数据元素一多起来就统称为：数据 逻辑结构 集合结构 图形结构（图） 树形结构（皇帝与丞民） 线性结构 物理结构 定义：又叫存储结构，是指数据的逻辑结构在计算机中的存储形式。 顺序存储结构 ：类似于数组 ，把数据元素存储在地址连续的储存单元里。 链式存储结构 ：把数据元素存放在任意的存储单元里 类似于数组，但可以不连续，每一个数值直接有一个类似于绳子或链条的东西相互绑定。 类似指针 –（本文完）]]></content>
      <categories>
        <category>代码学习</category>
        <category>数据结构学习</category>
      </categories>
      <tags>
        <tag>学习总结</tag>
        <tag>数据结构</tag>
        <tag>数据结构-学习总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[石膏立方体（练习）]]></title>
    <url>%2F2019%2F06%2F11%2F%E7%9F%B3%E8%86%8F%E7%AB%8B%E6%96%B9%E4%BD%93%EF%BC%88%E7%BB%83%E4%B9%A0%EF%BC%89%2F</url>
    <content type="text"><![CDATA[]]></content>
      <categories>
        <category>绘画</category>
        <category>练习</category>
      </categories>
      <tags>
        <tag>绘画练习</tag>
        <tag>素描</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[[置顶]欢迎来到ShuHaoHwang的博客！！]]></title>
    <url>%2F2019%2F06%2F11%2F%5B%E7%BD%AE%E9%A1%B6%5D%E6%AC%A2%E8%BF%8E%E6%9D%A5%E5%88%B0%E6%9C%AC%E5%8D%9A%E4%B8%BB%E7%9A%84%E5%8D%9A%E5%AE%A2%EF%BC%81%EF%BC%81%2F</url>
    <content type="text"><![CDATA[本博客将先会以个人的学习总结为主，之后将更新一些技术性的文章，欢迎与博主进行探讨、一起思维碰撞。在吉珠的小伙伴还可以直接找博主哦！ 欢迎留言，博主在有空之余将一一进行查看并回复。]]></content>
  </entry>
</search>
